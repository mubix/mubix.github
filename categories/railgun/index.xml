<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Railgun on </title>
    <link>https://malicious.link/categories/railgun/</link>
    <description>Recent content in Railgun on </description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 31 Jul 2012 20:20:15 +0000</lastBuildDate>
    
	<atom:link href="https://malicious.link/categories/railgun/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Raising Zombies in Windows: Part 1 - Passwords</title>
      <link>https://malicious.link/post/2012/2012-07-31-raising-zombies-in-windows-part-1-passwords/</link>
      <pubDate>Tue, 31 Jul 2012 20:20:15 +0000</pubDate>
      
      <guid>https://malicious.link/post/2012/2012-07-31-raising-zombies-in-windows-part-1-passwords/</guid>
      <description>With the use of Mimikatz and WCE, clear text passwords are much more common. What isn&amp;rsquo;t always there is the user. They take lunches, go home at a reasonable time and generally aren&amp;rsquo;t really appreciative of our (pentester/red teamer)&amp;rsquo;s schedule.
A straight forward way, and provided by Microsoft to create a process as a user (whereby having their token readily available is using &amp;lsquo;runas.exe&amp;rsquo;:
w00t, we the user is present, we can migrate our meterepreter session into that notepad and we&amp;rsquo;re good right?</description>
    </item>
    
    <item>
      <title>Integration of Mimikatz into Metasploit Stage1</title>
      <link>https://malicious.link/post/2012/2012-06-15-integration-of-mimikatz-into-metasploit-stage1/</link>
      <pubDate>Fri, 15 Jun 2012 14:55:55 +0000</pubDate>
      
      <guid>https://malicious.link/post/2012/2012-06-15-integration-of-mimikatz-into-metasploit-stage1/</guid>
      <description>One of the powers of Metasploit is it&amp;rsquo;s ability to stay memory resident. Through the use of reflective DLL injection even keeping new functionality the attack loads from ever touching disk. Well, the first thing I wanted to do with Mimikatz is get to that same level.
Here is my first step to that end; a railgun based Meterpreter script. Now before going all reflective with it I needed to understand how the DLL worked.</description>
    </item>
    
    <item>
      <title>(UAC) User Assisted Compromise</title>
      <link>https://malicious.link/post/2012/2012-01-03-uac-user-assisted-compromise/</link>
      <pubDate>Tue, 03 Jan 2012 06:56:22 +0000</pubDate>
      
      <guid>https://malicious.link/post/2012/2012-01-03-uac-user-assisted-compromise/</guid>
      <description>A number of times during tests I&amp;rsquo;ve actually run into those mythical creatures called &amp;ldquo;patched windows machines&amp;rdquo;. At DerbyCon Chris Gates and I released the &amp;ldquo;Ask&amp;rdquo; post module (which I had failed to publish). This module very simply uses the ShellExecute windows function.aspx&amp;rdquo;) via Railgun with the undocumented (but very well known) operator of &amp;lsquo;runas&amp;rsquo;. These two lines accomplished that:
client.railgun.add_function( &#39;shell32&#39;, &#39;ShellExecuteA&#39;, &#39;DWORD&#39;,[[&amp;quot;DWORD&amp;quot;,&amp;quot;hwnd&amp;quot;,&amp;quot;in&amp;quot;],[&amp;quot;PCHAR&amp;quot;,&amp;quot;lpOperation&amp;quot;,&amp;quot;in&amp;quot;],[&amp;quot;PCHAR&amp;quot;,&amp;quot;lpFile&amp;quot;,&amp;quot;in&amp;quot;],[&amp;quot;PCHAR&amp;quot;,&amp;quot;lpParameters&amp;quot;,&amp;quot;in&amp;quot;],[&amp;quot;PCHAR&amp;quot;,&amp;quot;lpDirectory&amp;quot;,&amp;quot;in&amp;quot;],[&amp;quot;DWORD&amp;quot;,&amp;quot;nShowCmd&amp;quot;,&amp;quot;in&amp;quot;],]) client.railgun.shell32.ShellExecuteA(nil,&amp;quot;runas&amp;quot;,&amp;quot;evil.exe&amp;quot;,nil,nil,5)  This would quite simply prompt the user with that annoying UAC prompt asking the user to run &amp;lsquo;evil.</description>
    </item>
    
    <item>
      <title>IP Resolution Using Meterpreterâ€™s Railgun</title>
      <link>https://malicious.link/post/2011/2011-08-19-ip-resolution-using-meterpreters-railgun/</link>
      <pubDate>Fri, 19 Aug 2011 19:26:55 +0000</pubDate>
      
      <guid>https://malicious.link/post/2011/2011-08-19-ip-resolution-using-meterpreters-railgun/</guid>
      <description>I saw a post back in June and it just recently came up again:
http://www.securityartwork.es/2011/06/01/dns-port-forwarding-con-meterpreter/
It looked like a lot of hard work to set that up and I&amp;rsquo;m really lazy. I didn&amp;rsquo;t want to have to go through all that every time I got onto a new network. So, I made a very simple meterpreter post module to just call a Windows API key called &amp;lsquo;gethostbyaddr&amp;rsquo; using Railgun.
TL:DR; You can download the post module here: ipresolver.</description>
    </item>
    
    <item>
      <title>Railgun Error Checking</title>
      <link>https://malicious.link/post/2011/2011-08-19-railgun-error-checking/</link>
      <pubDate>Fri, 19 Aug 2011 02:13:01 +0000</pubDate>
      
      <guid>https://malicious.link/post/2011/2011-08-19-railgun-error-checking/</guid>
      <description>One important thing to note about Railgun is that you are querying the API and just as if you were using C++ the API you are calling just might not be there on the system you are trying to call it on. So here is a quick trick to find out if a the function (API) that you are trying to call is available to you:
For my example I&amp;rsquo;m using &amp;lsquo;getaddrinfo&amp;rsquo; since it&amp;rsquo;s life in Windows is somewhat odd.</description>
    </item>
    
    <item>
      <title>Remote DLL Injection with Meterpreter</title>
      <link>https://malicious.link/post/2011/2011-05-30-remote-dll-injection-with-meterpreter/</link>
      <pubDate>Mon, 30 May 2011 16:35:40 +0000</pubDate>
      
      <guid>https://malicious.link/post/2011/2011-05-30-remote-dll-injection-with-meterpreter/</guid>
      <description>Recently Didier Stevens wrote &amp;lsquo;Suspender.dll&amp;rsquo; which is a DLL that will suspend a process and all of it&amp;rsquo;s child processes after a delay. 60 seconds is it&amp;rsquo;s default but you can rename the DLL to add a number (as such &amp;lsquo;Suspender10.dll&amp;rsquo; for 10 seconds) to make the delay whatever you wish. You can find the blog post and download here: http://blog.didierstevens.com/2011/04/27/suspender-dll/
Jonathan Cran and I had the same idea, as I&amp;rsquo;m sure many others did as well.</description>
    </item>
    
    <item>
      <title>Am I an Admin? Railgun Script</title>
      <link>https://malicious.link/post/2010/2010-09-13-am-i-an-admin-railgun-script/</link>
      <pubDate>Mon, 13 Sep 2010 17:45:31 +0000</pubDate>
      
      <guid>https://malicious.link/post/2010/2010-09-13-am-i-an-admin-railgun-script/</guid>
      <description>When you first step on a machine, you want to determine quickly if you are just a user or an administrator. Meterpreter doesn&amp;rsquo;t have a way to quickly check this. You could drop to a shell, check the local users group &amp;ldquo;Adminitrators&amp;rdquo;, and check your user, and correlate any groups that are shared between the outputs. You could do &amp;lsquo;getsystem&amp;rsquo; and if one works other than Kitrap0d. You could also just do a &amp;lsquo;ps&amp;rsquo; and notice that you can see &amp;lsquo;SYSTEM&amp;rsquo; processes.</description>
    </item>
    
    <item>
      <title>Resources for railgun development</title>
      <link>https://malicious.link/post/2010/2010-08-03-resources-for-railgun-development/</link>
      <pubDate>Tue, 03 Aug 2010 14:19:52 +0000</pubDate>
      
      <guid>https://malicious.link/post/2010/2010-08-03-resources-for-railgun-development/</guid>
      <description>Metasploit&amp;rsquo;s Railgun is awesome, but getting things to work correctly can be a pain. Here are some of the resources that have helped me out:
 System Error Codes.aspx&amp;rdquo;) - This is hands down the best resource you have, it will tell you what that stupid &amp;ldquo;5&amp;rdquo; or &amp;ldquo;1314&amp;rdquo; means in your return value. Keep this tab open to circumvent crazed bovine attacks.
 theForger&amp;rsquo;s Win32 API Programming Tutorial - A really good place to start when you are getting to know the Windows API and the frustrations that come along with it.</description>
    </item>
    
    <item>
      <title>Intro to RailGun: WIN API for Meterpreter</title>
      <link>https://malicious.link/post/2010/2010-07-08-intro-to-railgun-win-api-for-meterpreter/</link>
      <pubDate>Thu, 08 Jul 2010 02:10:34 +0000</pubDate>
      
      <guid>https://malicious.link/post/2010/2010-07-08-intro-to-railgun-win-api-for-meterpreter/</guid>
      <description>Back on June 13th, &amp;ldquo;Patrick HVE&amp;rdquo; released RAILGUN:
http://mail.metasploit.com/pipermail/framework/2010-June/006382.html
And it was merged into the the Metasploit trunk with 9709, 9710, 9711 and 9712: http://www.metasploit.com/redmine/projects/framework/repository/revisions/9712
Basically what this allows you to do is make Windows API calls from Meterpreter without compiling your own DLL. It currently supports a number of Windows API dlls:
 iphlpapi ws2_32 kernel32 ntdll user32 advapi32  (You can find out exactly what functions are available by default in the api.</description>
    </item>
    
  </channel>
</rss>