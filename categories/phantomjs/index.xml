<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Phantomjs on Malicious Link</title>
    <link>https://malicious.link/categories/phantomjs/</link>
    <description>Recent content in Phantomjs on Malicious Link</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>&amp;copy; 2016. All rights reserved.</copyright>
    <lastBuildDate>Fri, 25 May 2012 05:36:27 +0000</lastBuildDate>
    
	<atom:link href="https://malicious.link/categories/phantomjs/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Post Exploitation with PhantomJS</title>
      <link>https://malicious.link/post/2012/2012-05-25-post-exploitation-with-phantomjs/</link>
      <pubDate>Fri, 25 May 2012 05:36:27 +0000</pubDate>
      
      <guid>https://malicious.link/post/2012/2012-05-25-post-exploitation-with-phantomjs/</guid>
      <description>If you have never heard of PhantomJS ( http://phantomjs.org/ ) before, it&amp;rsquo;s a &amp;ldquo;Full Web Stack with No Browser Required&amp;rdquo;, basically it a GUI-less browser. One of the magical &amp;ldquo;example&amp;rdquo; files that it has is called &amp;ldquo;rasterize.js&amp;rdquo;
Rasterize.JS essentially renders a URL, screen shots it and give it to you in a number of different formats, here&amp;rsquo;s it&amp;rsquo;s usage:
Usage: rasterize.js URL filename [paperwidth*paperheight|paperformat] paper (pdf output) examples: &amp;quot;5in*7.5in&amp;quot;, &amp;quot;10cm*20cm&amp;quot;, &amp;quot;A4&amp;quot;, &amp;quot;Letter&amp;quot;  PhantomJS is sweet for sweeping a ton of IPs and suspected HTTP/S sites, and look through a gallery of them to start figuring out which looks the most interestingâ€¦ and we are going to essentially just that, except from a Victim machine.</description>
    </item>
    
  </channel>
</rss>