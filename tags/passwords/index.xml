<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>passwords - Tag - Malicious Link - Blog by mubix - Rob Fuller</title>
        <link>https://malicious.link/tags/passwords/</link>
        <description>passwords - Tag - Malicious Link - Blog by mubix - Rob Fuller</description>
        <generator>Hugo -- gohugo.io</generator><language>en</language><managingEditor>mubix@hak5.org (Rob Fuller)</managingEditor>
            <webMaster>mubix@hak5.org (Rob Fuller)</webMaster><lastBuildDate>Tue, 27 Apr 2021 09:30:44 -0500</lastBuildDate><atom:link href="https://malicious.link/tags/passwords/" rel="self" type="application/rss+xml" /><item>
    <title>User Empowerment: Password Security</title>
    <link>https://malicious.link/posts/2021/user-empowerment-password-security/</link>
    <pubDate>Tue, 27 Apr 2021 09:30:44 -0500</pubDate>
    <author>Rob Fuller</author>
    <guid>https://malicious.link/posts/2021/user-empowerment-password-security/</guid>
    <description><![CDATA[World Password Day (who knew that was a thing?) is upon us. It is the first Thursday of May every year, and that falls on May 6th this year.
I&rsquo;m not sure how to start this blog post, but the meat of what I want to get into is password security and the evolution over the years.
In the 1900s (&hellip; yes people are saying that now&hellip; feel old yet?), password security was pretty simple.]]></description>
</item>
<item>
    <title>Run All Rules for Hashcat</title>
    <link>https://malicious.link/posts/2020/run-all-rules-hashcat/</link>
    <pubDate>Thu, 20 Feb 2020 09:30:44 -0500</pubDate>
    <author>Rob Fuller</author>
    <guid>https://malicious.link/posts/2020/run-all-rules-hashcat/</guid>
    <description><![CDATA[This is just a quick script to demonstrate using PowerShell to run all the rules against a specific hash (or hash file), starting from the smallest file (usually the simplest rules)
1 2 3 4 5 6 Set-Location -Path &#39;C:\Program Files\hashcat\&#39; Get-ChildItem .\rules\ | where { $_.extension -eq &#34;.rule&#34; } | Sort-Object -Property Length | % { .\hashcat64.exe -m1000 20F91778B033F841702E014D3B79148C .\rockyou.txt --loopback --rules $_.FullName } I&rsquo;m sure there is a better way to do this.]]></description>
</item>
<item>
    <title>Get PasswordLastSet Time For Domain Controller Accounts</title>
    <link>https://malicious.link/posts/2015/get-passwordlastset-time-for-domain-controller-accounts/</link>
    <pubDate>Wed, 16 Sep 2015 07:35:28 -0500</pubDate>
    <author>Rob Fuller</author>
    <guid>https://malicious.link/posts/2015/get-passwordlastset-time-for-domain-controller-accounts/</guid>
    <description><![CDATA[AKA - ROB WRITES POWERSHELL!!
Yesterday I posted a way to dump hashes using a Domain Controller account. But how do you know which account to use? And when was it&rsquo;s password last set? net user unfortunately won&rsquo;t do computer accounts.
So I decided to write a PowerShell script to find out. Unfortunately Windows 7 doesn&rsquo;t come with the ActiveDirectory PowerShell module (I&rsquo;m sure there is another way to do this but here is how I did it.]]></description>
</item>
<item>
    <title>Using Domain Controller Account Passwords To HashDump Domains</title>
    <link>https://malicious.link/posts/2015/using-domain-controller-account-passwords-to-hashdump-domains/</link>
    <pubDate>Tue, 15 Sep 2015 07:35:28 -0500</pubDate>
    <author>Rob Fuller</author>
    <guid>https://malicious.link/posts/2015/using-domain-controller-account-passwords-to-hashdump-domains/</guid>
    <description><![CDATA[Since I follow both Carlos Perez and Benjamin Delpy on Twitter, something caught my eye on August 2nd, soon after Benjamin Delpy drops DCSync:
@Carlos_Perez haha, if yes, it will be a 0d ;)
No, like always it needs some rights ;) DA is cool, maybe DC$ is enough
&mdash; 🥝🏳️‍🌈 Benjamin Delpy (@gentilkiwi) August 2, 2015 And then later on August 28th, again about the DC$ account (Domain Controller computer account):]]></description>
</item>
</channel>
</rss>
