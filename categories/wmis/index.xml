<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Wmis on Room362</title>
    <link>https://room362.com/categories/wmis/</link>
    <description>Recent content in Wmis on Room362</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>&amp;copy; 2016. All rights reserved.</copyright>
    <lastBuildDate>Sat, 19 Apr 2014 21:36:21 -0400</lastBuildDate>
    
	<atom:link href="https://room362.com/categories/wmis/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Executing code via SMB / DCOM without PSEXEC</title>
      <link>https://room362.com/post/2014/2014-04-19-executing-code-via-smb-without-psexec/</link>
      <pubDate>Sat, 19 Apr 2014 21:36:21 -0400</pubDate>
      
      <guid>https://room362.com/post/2014/2014-04-19-executing-code-via-smb-without-psexec/</guid>
      <description>PSEXEC has been a staple for Windows post exploitation pivoting and system administration for a long while. The basic premise of how all &amp;ldquo;psexec&amp;rdquo; tools work is:
 (Optional) Upload a service executable (PSEXECSVC.EXE in the case of SysInternal&amp;rsquo;s tool) to the ADMIN$ share Connect to the service manager on the remote host, and create a service based on either a local (to the remote system) executable or the uploaded one.</description>
    </item>
    
  </channel>
</rss>