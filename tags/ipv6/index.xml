<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Ipv6 on Room362</title>
    <link>http://localhost:1313/tags/ipv6/</link>
    <description>Recent content in Ipv6 on Room362</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>&amp;copy; 2016. All rights reserved.</copyright>
    <lastBuildDate>Wed, 06 Apr 2011 04:13:04 +0000</lastBuildDate>
    <atom:link href="http://localhost:1313/tags/ipv6/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>IPv6 Attacks</title>
      <link>http://localhost:1313/post/2011/201146ipv6-attacks-html/</link>
      <pubDate>Wed, 06 Apr 2011 04:13:04 +0000</pubDate>
      
      <guid>http://localhost:1313/post/2011/201146ipv6-attacks-html/</guid>
      <description>&lt;p&gt;This is probably the most practical and applicable IPv6 talk I&amp;rsquo;ve ever seen. Amazing job.&lt;/p&gt;

&lt;p&gt;[vimeo 21293321 w=400 h=200]&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://vimeo.com/21293321&#34;&gt;Rick Hayes - Assessing and Pen-Testing IPv6 Networks&lt;/a&gt; from &lt;a href=&#34;http://vimeo.com/user729137&#34;&gt;Adrian Crenshaw&lt;/a&gt; on &lt;a href=&#34;http://vimeo.com&#34;&gt;Vimeo&lt;/a&gt;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Revenge of the Bind Shell</title>
      <link>http://localhost:1313/post/2010/2010924revenge-of-the-bind-shell-html/</link>
      <pubDate>Fri, 24 Sep 2010 15:20:56 +0000</pubDate>
      
      <guid>http://localhost:1313/post/2010/2010924revenge-of-the-bind-shell-html/</guid>
      <description>

&lt;p&gt;[vimeo &lt;a href=&#34;http://www.vimeo.com/15243189&#34;&gt;http://www.vimeo.com/15243189&lt;/a&gt; w=400&amp;h;=250]&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://vimeo.com/15243189&#34;&gt;Revenge of the Bind Shell&lt;/a&gt; from &lt;a href=&#34;http://vimeo.com/user3245922&#34;&gt;Practical Exploitation&lt;/a&gt; on &lt;a href=&#34;http://vimeo.com&#34;&gt;Vimeo&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&#34;background:826ec4cbf0074e348d6e4166735f9b94&#34;&gt;BACKGROUND&lt;/h2&gt;

&lt;p&gt;At the &lt;a href=&#34;http://novahackers.blogspot.com/2010/04/meeting-20100415-0x0002.html&#34;&gt;April 2010 NoVA Hackers meeting&lt;/a&gt; I discussed some of the offensive uses of IPv6 on current networks. Well, around that time Microsoft issued a patch to all of the supported versions of Windows that broke my methodology. Obviously I wasn&amp;rsquo;t the only one doing this ;-)&lt;/p&gt;

&lt;p&gt;Before I get ahead of myself lets explain what Teredo is. Teredo is a tunneling service built in to Windows. It&amp;rsquo;s intent, as far as I can tell, was to allow anyone to have access to the IPv6 enabled internet, free, and dead simple, no infrastructure changes needed. You can get into much more detail on the &lt;a href=&#34;http://technet.microsoft.com/en-us/network/cc917486.aspx&#34;&gt;Teredo TechNet article&lt;/a&gt;, but essentially an internal host is asking a Teredo server/relay for an IPv6 IP address. It does this over UDP and which by default in Windows points to teredo.ipv6.microsoft.com over port 3544 (UDP).&lt;/p&gt;

&lt;p&gt;When the tunnel is established, the host is given a 2001::/32 address. This address is a public IP. Before April this essentially meant that your Windows shares and any other listening service was publically available, despite your NAT and Firewall. This isn&amp;rsquo;t as much of a problem as you might think as it&amp;rsquo;s virtually impossible to guess or scan for an IPv6 address. So, unless you displayed it publically by connecting to Freenode or posting it online somewhere (via a demonstration video). You&amp;rsquo;re pretty safe.&lt;/p&gt;

&lt;h2 id=&#34;the-patch:826ec4cbf0074e348d6e4166735f9b94&#34;&gt;THE PATCH&lt;/h2&gt;

&lt;p&gt;Microsoft made this a certainty when they issued the patch. I was unable to locate the specific one, or even identify for certain that it was April 2010, but that&amp;rsquo;s when the initial article for &lt;a href=&#34;http://msdn.microsoft.com/en-us/library/aa832668(VS.85&#34;&gt;IPV6_PROTECTION_LEVEL&lt;/a&gt;.aspx) was published. This is a socket level option that says, unless this flag is set to &amp;ldquo;PROTECTION_LEVEL_UNRESTRICTED&amp;rdquo; on the binary that is doing the communication, deny all traffic from NAT Traversals (Teredo).  (Even Netcat6 doesn&amp;rsquo;t have this flag set!)&lt;/p&gt;

&lt;p&gt;Essentially, unless someone rebuilt their binary with the explicit intention to allow people to connect to it over NAT Traversals, the traffic was denied. You were still allowed to connect out, keeping in tact the initial idea for Teredo, but it broke my methodology damn it!&lt;/p&gt;

&lt;p&gt;I used Teredo to connect to the SMB server so that I could psexec a shell back any time I wanted before (still possible on non-patched systems) but since Microsoft doesn&amp;rsquo;t want to add the PROTECTION_LEVEL_UNRESTRICTED flag to SMB you have to just upload and use a binary that does. Luckily, with the help of &lt;a href=&#34;http://twitter.com/stephenfewer&#34;&gt;Stephen Fewer&lt;/a&gt;, the bind_ipv6_tcp payload in Metasploit does.&lt;/p&gt;

&lt;h2 id=&#34;commands:826ec4cbf0074e348d6e4166735f9b94&#34;&gt;COMMANDS&lt;/h2&gt;

&lt;p&gt;The commands used in the video are below:&lt;/p&gt;

&lt;p&gt;netsh interface ipv6 install&lt;/p&gt;

&lt;p&gt;netsh interface ipv6 set teredo enterpriseclient&lt;/p&gt;

&lt;p&gt;./mspfayload windows/meterpreter/bind_ipv6_tcp LPORT=9001 X &amp;gt; bind.exe&lt;/p&gt;

&lt;p&gt;The only thing that was behind the scenes was giving my Metasploit host an IPv6 address. I used Miredo (Teredo for *nix/OSX):&lt;/p&gt;

&lt;p&gt;#Install miredo&lt;br /&gt;
apt-get install miredo&lt;/p&gt;

&lt;p&gt;#Remove it from starting automatically&lt;br /&gt;
update-rc.d miredo -f remove&lt;/p&gt;

&lt;h2 id=&#34;protection:826ec4cbf0074e348d6e4166735f9b94&#34;&gt;PROTECTION&lt;/h2&gt;

&lt;p&gt;Yes, it&amp;rsquo;s that easy. Now, some of the mitigating suggestions I&amp;rsquo;ve seen on the net is to blackhole the Microsoft Teredo server, or block the UDP port 3544. However, Miredo can act as a Teredo server/relay just fine, and can listen on any port you wish (53?). So unless you block ALL UDP outbound traffic, you are not protecting against this threat.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>