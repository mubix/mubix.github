<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Persistence on </title>
    <link>https://malicious.link/tags/persistence/</link>
    <description>Recent content in Persistence on </description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 22 May 2016 21:55:12 -0400</lastBuildDate>
    
        <atom:link href="https://malicious.link/tags/persistence/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>WPAD Persistence</title>
      <link>https://malicious.link/post/2016/wpad-persistence/</link>
      <pubDate>Sun, 22 May 2016 21:55:12 -0400</pubDate>
      
      <guid>https://malicious.link/post/2016/wpad-persistence/</guid>
      <description>

&lt;p&gt;Mostly just writing this so I can keep notes.&lt;/p&gt;

&lt;p&gt;Today I came up with the idea to forcibly put the WPAD entry into a Windows Domain&amp;rsquo;s DNS. For those who don&amp;rsquo;t know what this would do there is an entire Wikipedia article on the subject: &lt;a href=&#34;https://en.wikipedia.org/wiki/Web_Proxy_Autodiscovery_Protocol&#34;&gt;https://en.wikipedia.org/wiki/Web_Proxy_Autodiscovery_Protocol&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I did this via PowerShell pretty easily on one of the domain controllers like so:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;PS C:\&amp;gt; Add-DnsServerResourceRecordA -Name wpad -ZoneName sittingduck.info -IPv4Address 107.170.50.74
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Where 107.170.50.74 is the Digital Ocean box I stood up external to my test domain. I installed a basic web server and went to test my brilliant idea, but I wasn&amp;rsquo;t getting any requests for &lt;code&gt;wpad.dat&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;As they say &amp;ldquo;there are no more original ideas&amp;rdquo; it looks like the awesome people at Microsoft not only had this idea but fixed it way back in 2008.&lt;/p&gt;

&lt;p&gt;but.. they also made a way to disable it - &lt;a href=&#34;https://technet.microsoft.com/en-us/library/cc995158.aspx&#34;&gt;Removing WPAD from DNS block list&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Running the DNS entry update will propagate throughout the domain so you only have to set that once, however the block list is per domain controller (or DNS server if they are separated, which is rare these days as it&amp;rsquo;s a required service in later Windows server versions).&lt;/p&gt;

&lt;p&gt;I went in search of a registry key to make the modification because it&amp;rsquo;s much easier to hit the &lt;code&gt;RemoteRegistry&lt;/code&gt; service on all the DCs than it is to run that command. I quickly found this blog post - &lt;a href=&#34;http://dns-info.blogspot.com/2009/01/enableglobalqueryblocklist-registry-key.html&#34;&gt;EnableGlobalQueryBlockLisst registry key&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;A quick batch script to loop through each DomainController in the domain and I started getting a bunch of requests.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;[22/May/2016:21:56:28 EDT] &amp;quot;GET /wpad.dat HTTP/1.1&amp;quot; 200 58
- -&amp;gt; /wpad.dat
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Now, you may be asking, &amp;ldquo;How is setting their proxy server any kind of real persistence?&amp;rdquo;, I implore you to go check out projects like &lt;a href=&#34;https://mitmproxy.org/&#34;&gt;mitmproxy&lt;/a&gt;, &lt;a href=&#34;https://github.com/byt3bl33d3r/MITMf&#34;&gt;mitmf&lt;/a&gt; and &lt;a href=&#34;https://github.com/secretsquirrel/BDFProxy&#34;&gt;BDFProxy&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Pentesters have been recommending for years to put a WPAD entry into DNS to protect against LAN based attackers with Responder. Who knew it actually didn&amp;rsquo;t do anything because Microsoft was blocking those lookups anyways. So, if you have better solutions for WPAD on an Enterprise domain please leave a comment below. (Turning off the setting is a per-user per-system setting and doesn&amp;rsquo;t disable it for the SYSTEM or other local accounts, so it&amp;rsquo;s harder than just &amp;ldquo;flip on this registry setting via GPO&amp;rdquo;)&lt;/p&gt;

&lt;p&gt;Oh and I&amp;rsquo;ll just leave this here: &lt;a href=&#34;https://msdn.microsoft.com/en-us/library/ee309366%28v=vs.85%29.aspx&#34;&gt;Proxy servers and WinRM&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&#34;references&#34;&gt;References&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://technet.microsoft.com/en-us/library/cc995158.aspx&#34;&gt;Removing WPAD from DNS block list&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://dns-info.blogspot.com/2009/01/enableglobalqueryblocklist-registry-key.html&#34;&gt;EnableGlobalQueryBlockLisst registry key&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://msdn.microsoft.com/en-us/library/ee309366%28v=vs.85%29.aspx&#34;&gt;Proxy servers and WinRM&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://mitmproxy.org/&#34;&gt;mitmproxy&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/byt3bl33d3r/MITMf&#34;&gt;mitmf&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/secretsquirrel/BDFProxy&#34;&gt;BDFProxy&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>DotNet&#39;s DNVM For Persistence On Developer Machines</title>
      <link>https://malicious.link/post/2015/dotnet-dnvm-for-persistence-on-developer-machines/</link>
      <pubDate>Mon, 05 Oct 2015 07:35:28 -0500</pubDate>
      
      <guid>https://malicious.link/post/2015/dotnet-dnvm-for-persistence-on-developer-machines/</guid>
      <description>&lt;p&gt;One of the best resources for persistence mechanisms is &lt;a href=&#34;https://twitter.com/Hexacorn&#34;&gt;Hexacorn&amp;rsquo;s&lt;/a&gt; blog.
&lt;a href=&#34;http://www.hexacorn.com/blog/category/autostart-persistence/&#34;&gt;http://www.hexacorn.com/blog/category/autostart-persistence/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If you haven&amp;rsquo;t checked out his &amp;ldquo;Beyond good ol&amp;rsquo; Run key&amp;rdquo; (linked above) 32 post series, you really should. But today I wanted to talk about one that I didn&amp;rsquo;t see up there:&lt;/p&gt;

&lt;p&gt;DNVM (&lt;a href=&#34;https://github.com/aspnet/dnvm&#34;&gt;https://github.com/aspnet/dnvm&lt;/a&gt;) is the DotNet Version Manager and it&amp;rsquo;s a part of ASP.NET 5, which I believe has been inside of Visual Studio since the 2013 version. It&amp;rsquo;s there to help to specify which runtime to use for applications, much like &lt;a href=&#34;https://rvm.io/&#34;&gt;RVM (Ruby Version Manager)&lt;/a&gt; is for Ruby. With their goal being that you can install .Net and &lt;a href=&#34;http://docs.asp.net/en/latest/getting-started/index.html&#34;&gt;run .Net applications on Linux and Mac&lt;/a&gt; as well using DNVM.&lt;/p&gt;

&lt;p&gt;Once installed it adds a &amp;ldquo;DNX_HOME&amp;rdquo; environmental variable:&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://malicious.link/images/2015/dnx_reg.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Inside the folder specified are 3 directories:&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://malicious.link/images/2015/dnx_folder.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;There are plenty of things to play with in here, but I wanted to specifically point out that the &lt;strong&gt;BIN&lt;/strong&gt; directory is put into the $PATH variable (as well as two others)&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;C:\WINDOWS\system32\config\systemprofile\.dnx\bin (DOES NOT EXIST BY DEFAULT)
C:\Program Files\Microsoft DNX\Dnvm\
C:\Users\mubix\.dnx\bin
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Ok, not a big deal right? Even a user under UAC can edit their own $PATH variable (we&amp;rsquo;ll come back to that in another post)&lt;/p&gt;

&lt;p&gt;Lets take a look at what is in those folders:&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://malicious.link/images/2015/dnvm_folders.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Interesting, why don&amp;rsquo;t we see what the command dnvm does:&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://malicious.link/images/2015/dnvm_cmd.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Seriously&amp;hellip; I probably don&amp;rsquo;t even have to continue at this point&amp;hellip;&lt;/p&gt;

&lt;p&gt;But, if I run dnvm from the command prompt (as a developer would) it runs it from inside that protected directory in Program Files right?&amp;hellip; RIGHT?! Nope..&lt;/p&gt;

&lt;p&gt;Edit the dnvm.cmd with a bit of &lt;a href=&#34;http://www.powershellempire.com/&#34;&gt;PowerShell Empire&lt;/a&gt; stager (minus the &lt;strong&gt;-W Hidden&lt;/strong&gt;, because we need the user to actually get the output of the dnvm command) and&amp;hellip;.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;[+] Initial agent UU2YKZ3VDG2AUKFY from 192.168.1.109 now active
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Boom!&lt;/p&gt;

&lt;p&gt;Lets look a bit into how DNVM works to see if there is something juicier there (way to much for a single blog post)&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://malicious.link/images/2015/dnvm_list.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Awesome! So I can modify things in the runtime directory, lets look in there:&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://malicious.link/images/2015/dnvm_runtime.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Lots, of fun, but we still have to wait until they run some C# code with that run time and guess which one they will use (or backdoor all of them). I would rather just make a modification to the dnvm.cmd and be done with it. Simple and clean.&lt;/p&gt;

&lt;p&gt;Oh did I mention that this is used to cross compile binaries? Ya, oh ok, so you can infect the built binaries, or web apps for Windows, Linux and OSX&amp;hellip;&lt;/p&gt;

&lt;p&gt;Oh and one other thing caught my eye while I was looking into the DNVM.ps1 script:&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://malicious.link/images/2015/dnvm_azure.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Have fun!&lt;/p&gt;

&lt;p&gt;P.S. Unquoted paths FTW: &lt;a href=&#34;https://github.com/aspnet/dnvm/pull/357&#34;&gt;https://github.com/aspnet/dnvm/pull/357&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>OSX Persistence via PHP Webshell</title>
      <link>https://malicious.link/post/2014/osx-persistence-via-php-webshell/</link>
      <pubDate>Tue, 09 Sep 2014 11:26:38 -0500</pubDate>
      
      <guid>https://malicious.link/post/2014/osx-persistence-via-php-webshell/</guid>
      <description>&lt;p&gt;As I learn more and more about OSX I find things that surprise me. For instance, in this post I will be showing you how to, &lt;strong&gt;with root or sudo priviledge&lt;/strong&gt;, enable the &lt;strong&gt;built-in&lt;/strong&gt; apache server on OSX and it&amp;rsquo;s &lt;strong&gt;PHP&lt;/strong&gt; module&amp;hellip;.&lt;/p&gt;

&lt;p&gt;I am working with OSX Mavericks so your locations may vary based on the version of OSX your target it.&lt;/p&gt;

&lt;p&gt;First things first is to enable the PHP module for the Apache server.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo nano -w /etc/apache2/httpd.conf
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;em&gt;(vi or emacs to your heart&amp;rsquo;s content)&lt;/em&gt;. But what we are looking for is to uncomment the following line:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;#LoadModule php5_module libexec/apache2/libphp5.so
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Once you do that, start up Apache. This can be done temporarily (won&amp;rsquo;t survive a reboot) with the &lt;code&gt;apachectl&lt;/code&gt; command:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo apachectl start
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;https://malicious.link/images/2014/osx_apache.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Or you can make it more permanent with &lt;code&gt;launchctl&lt;/code&gt;:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo launchctl load -w /System/Library/LaunchDaemons/org.apache.httpd.plist
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;And undoing the damage with:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo launchctl unload -w /System/Library/LaunchDaemons/org.apache.httpd.plist
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;After that, just drop your favorite PHP shell into the &lt;code&gt;/Library/WebServer/Documents/&lt;/code&gt; directory and you&amp;rsquo;re done. (My favorites are &lt;a href=&#34;https://github.com/b374k/b374k&#34;&gt;b374k&lt;/a&gt; and PHP Meterpreter.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://malicious.link/images/2014/osx_php_shell.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>
