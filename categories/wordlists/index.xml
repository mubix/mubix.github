<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>wordlists - Category - Malicious Link - Blog by mubix - Rob Fuller</title>
        <link>https://malicious.link/categories/wordlists/</link>
        <description>wordlists - Category - Malicious Link - Blog by mubix - Rob Fuller</description>
        <generator>Hugo -- gohugo.io</generator><language>en</language><managingEditor>mubix@hak5.org (Rob Fuller)</managingEditor>
            <webMaster>mubix@hak5.org (Rob Fuller)</webMaster><lastBuildDate>Fri, 18 Sep 2009 14:41:16 &#43;0000</lastBuildDate><atom:link href="https://malicious.link/categories/wordlists/" rel="self" type="application/rss+xml" /><item>
    <title>Password / Word lists</title>
    <link>https://malicious.link/posts/2009/2009-09-18-password-word-lists/</link>
    <pubDate>Fri, 18 Sep 2009 14:41:16 &#43;0000</pubDate>
    <author>mubix</author>
    <guid>https://malicious.link/posts/2009/2009-09-18-password-word-lists/</guid>
    <description><![CDATA[Brute force, even though it&rsquo;s gotten so fast, is still a long way away from cracking long complex passwords. That&rsquo;s were word lists come in handy. It&rsquo;s usually the crackers first go-to solution, slam a word list against the hash, if that doesn&rsquo;t work, try rainbow tables (if they happen to have the tables for that specific hash type), and then the full on brute force. Some would say those first two steps are reversed, and it really is the choice of the the person doing it and the word lists they have to work with.]]></description>
</item>
</channel>
</rss>
