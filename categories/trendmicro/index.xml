<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Trendmicro on </title>
    <link>https://malicious.link/categories/trendmicro/</link>
    <description>Recent content in Trendmicro on </description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 05 Jul 2012 03:44:59 +0000</lastBuildDate>
    
	<atom:link href="https://malicious.link/categories/trendmicro/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Bypassing Trend Micro&#39;s Service Protection</title>
      <link>https://malicious.link/post/2012/2012-07-05-bypassing-trend-micros-service-protection/</link>
      <pubDate>Thu, 05 Jul 2012 03:44:59 +0000</pubDate>
      
      <guid>https://malicious.link/post/2012/2012-07-05-bypassing-trend-micros-service-protection/</guid>
      <description>@jabjorkhaug posed the following question on Twitter today:
I figured I could solve this and it would be an interesting challenge. Here is what it gets detected as:
The service binary that is used as part of PSEXEC is located here:
MSF Directory/data/templates/src/pe/exe/service/service.c
The important part to look at starts at line 57:
#define WIN32_LEAN_AND_MEAN #include &amp;lt;windows.h&amp;gt; #define PAYLOAD_SIZE	8192 char cServiceName[32] = &amp;quot;SERVICENAME&amp;quot;; char bPayload[PAYLOAD_SIZE] = &amp;quot;PAYLOAD:&amp;quot;; SERVICE_STATUS ss; SERVICE_STATUS_HANDLE hStatus = NULL; /* * */ BOOL ServiceHandler( DWORD dwControl ) { if( dwControl == SERVICE_CONTROL_STOP || dwControl == SERVICE_CONTROL_SHUTDOWN ) { ss.</description>
    </item>
    
  </channel>
</rss>