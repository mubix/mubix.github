<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Dns on room362com</title>
    <link>//room362.com/categories/dns/</link>
    <description>Recent content in Dns on room362com</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>&amp;copy; 2016. All rights reserved.</copyright>
    <lastBuildDate>Wed, 19 Feb 2014 23:33:50 -0500</lastBuildDate>
    <atom:link href="//room362.com/categories/dns/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Iterative DNS Brute Forcing</title>
      <link>//room362.com/post/2014/2014-02-19-iterative-dns-brute-forcing/</link>
      <pubDate>Wed, 19 Feb 2014 23:33:50 -0500</pubDate>
      
      <guid>//room362.com/post/2014/2014-02-19-iterative-dns-brute-forcing/</guid>
      <description>&lt;p&gt;Everyone has their list of hostnames they brute force domains with. In my last post I even mentioned a few ways to use one with XARGS or PARALLEL. But one fact about wordlist brute forcing is that there is no &amp;ldquo;one list to rule them all&amp;rdquo;.  But over the years of doing DNS record collection I have noticed one thing, most domains have a large number of short hostnames that are easy to remember, usually 4 characters or less.&lt;/p&gt;

&lt;p&gt;I&amp;rsquo;m sure you already know where I&amp;rsquo;m going with this, I wanted to brute force all possible hostnames up to 4 characters. For a long time I struggled with coding this, but couldn&amp;rsquo;t wrap my head around it. I would come back to it every so often, finally a few days ago I happened upon a script on gist: &lt;a href=&#34;https://gist.github.com/petehamilton/4755855&#34;&gt;https://gist.github.com/petehamilton/4755855&lt;/a&gt; that suited my needs perfectly.&lt;/p&gt;

&lt;p&gt;I modified it to suite my needs (just use the yield method) and here is what I ended up with (remember DNS is case insensitive):&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Notice:&lt;/strong&gt; This script doesn&amp;rsquo;t end, it will keep doing lookups on longer and longer hostnames until you hit CTRL-C&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;#!/usr/bin/env ruby

#
## Brute code stolen form: https://gist.github.com/petehamilton/4755855
#

@domain = &#39;microsoft.com&#39;

def result?(sub)
	results = %x(dig +noall #{sub}.#{@domain} +answer)
	if results != &amp;quot;&amp;quot;
		puts &amp;quot;============================&amp;quot;
		puts &amp;quot;FOUND: \t#{sub}&amp;quot;
		puts &amp;quot;============================&amp;quot;
		puts &amp;quot;#{results}&amp;quot;
		puts &amp;quot;============================&amp;quot;
	end
	1 == 2
end

def crack_yielding(chars)
	crack_yield(chars){ |p|
		return p if result?(p)
	}
end


def crack_yield(chars)
	chars.each { |c| yield c }

	crack_yield(chars) { |c|
		chars.each do |x|
			yield c + x
		end
	}
end

chars = (&#39;a&#39;..&#39;z&#39;).to_a
(0..9).each {|x| chars &amp;lt;&amp;lt; x.to_s} 

crack_yielding(chars)

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This worked but it was slow, so I sped it up using methods that I talked about in my last post and a quick modification:&lt;/p&gt;

&lt;p&gt;I used this:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;#!/usr/bin/env ruby

#
## Brute code stolen form: https://gist.github.com/petehamilton/4755855
#

def result?(sub)
	puts sub	
	1 == 2
end

def crack_yielding(chars)
	crack_yield(chars){ |p|
		return p if result?(p)
	}
end


def crack_yield(chars)
	chars.each { |c| yield c }

	crack_yield(chars) { |c|
		chars.each do |x|
			yield c + x
		end
	}
end

chars = (&#39;a&#39;..&#39;z&#39;).to_a
(0..9).each {|x| chars &amp;lt;&amp;lt; x.to_s} 

crack_yielding(chars)

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;which just prints all the possibilities:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;a
b
c
d
e
f
...
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;and piped it into parallel + dig:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;ruby brutelist.rb | parallel -j100 dig +noall {}.microsoft.com +answer
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;and got the following:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;c.microsoft.com.	2	IN	CNAME	c.microsoft.akadns.net.
c.microsoft.akadns.net.	499	IN	A	65.55.58.184
e.microsoft.com.	3599	IN	A	191.234.1.50
g.microsoft.com.	2798	IN	CNAME	g.msn.com.
g.msn.com.		99	IN	CNAME	g.msn.com.nsatc.net.
g.msn.com.nsatc.net.	148	IN	A	131.253.34.154
i.microsoft.com.	779	IN	CNAME	i.toggle.www.ms.akadns.net.
i.toggle.www.ms.akadns.net. 44	IN	CNAME	i.g.www.ms.akadns.net.
i.g.www.ms.akadns.net.	225	IN	CNAME	i.microsoft.com.edgesuite.net.
i.microsoft.com.edgesuite.net. 116 IN	CNAME	a1475.g.akamai.net.
a1475.g.akamai.net.	16	IN	A	23.45.65.26
a1475.g.akamai.net.	16	IN	A	23.45.65.33
m.microsoft.com.	3599	IN	CNAME	origin.mobile.ms.akadns.net.
origin.mobile.ms.akadns.net. 299 IN	A	65.55.186.235
s.microsoft.com.	3599	IN	CNAME	reroute.microsoft.com.
reroute.microsoft.com.	3599	IN	A	65.55.58.201
reroute.microsoft.com.	3599	IN	A	64.4.11.37
cs.microsoft.com.	81	IN	CNAME	wedcs.trafficmanager.net.
wedcs.trafficmanager.net. 7	IN	CNAME	wedcseus.cloudapp.net.
wedcseus.cloudapp.net.	8	IN	A	137.116.48.250
...
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Happy bruting. Both scripts can be found on my gists page:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Domain version: &lt;a href=&#34;https://gist.github.com/mubix/9107284&#34;&gt;https://gist.github.com/mubix/9107284&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Parallel version: &lt;a href=&#34;https://gist.github.com/mubix/9107276&#34;&gt;https://gist.github.com/mubix/9107276&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Hostname bruteforcing on the cheap</title>
      <link>//room362.com/post/2014/2014-01-29-hostname-bruteforcing-on-the-cheap/</link>
      <pubDate>Wed, 29 Jan 2014 18:07:08 -0500</pubDate>
      
      <guid>//room362.com/post/2014/2014-01-29-hostname-bruteforcing-on-the-cheap/</guid>
      <description>&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;Quick update&lt;/strong&gt;: As &lt;a href=&#34;http://twitter.com/mikedamm&#34;&gt;@MikeDamm&lt;/a&gt; &lt;a href=&#34;http://twitter.com/mikedamm/status/428725199068864512&#34;&gt;points out&lt;/a&gt;, xargs has a &lt;code&gt;-P&lt;/code&gt; option that can do the same thing I&amp;rsquo;m using parallel for. If you have a supported version of xargs you can use &lt;code&gt;-P 0&lt;/code&gt; to do the same thing as &lt;code&gt;-j0&lt;/code&gt; with parallel, but if your version doesn&amp;rsquo;t support the &lt;code&gt;0&lt;/code&gt; you can simply use the same number parallel uses ala:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;cat subdomains.txt | xargs -P 122 -I subdomain dig +noall subdomain.microsoft.com +answer&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;This results in roughly the same completion time as it&amp;rsquo;s parallel counterpart. Thanks @MikeDamm!&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;There are some great discussions on the NoVA Hackers mailing list. One such discussion was about what the best way to do dns hostname brute forcing was and which tool is better than another. For me, I just use the command line and then parse the results (or just ask the deepmagic.com database ;-)&lt;/p&gt;

&lt;p&gt;Here is what I do:&lt;/p&gt;

&lt;p&gt;First, you need a good list of DNS sub domains / hostnames. Personally I use the list provided over at &lt;a href=&#34;http://www.ethicalhack3r.co.uk/zone-transfers-on-the-alexa-top-1-million/&#34;&gt;http://www.ethicalhack3r.co.uk/zone-transfers-on-the-alexa-top-1-million/&lt;/a&gt; (with a few minor tweaks). If you haven&amp;rsquo;t read that post and follow-on posts you really should. But take the list and save it locally. Then just run the following command:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;cat subdomains.txt | xargs -t -I subdomain dig +noall subdomain.microsoft.com +answer&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Now, xargs is great but does one thing at a time and can be quite slow if your subdomains list is large. With the use of the amazing tool GNU parallel you can get done in a matter of seconds, well, that or knock over your home router.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;cat subdomains.txt | parallel -k -j0 dig +noall {}.microsoft.com +answer&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Warning: the -j0 option maxes out the possible file handles and jobs that your CPU/kernel can handle, which usually destroys VMs. Just a smaller job count like 100 or 50 if you want the speed without the crash ;-)&lt;/p&gt;

&lt;p&gt;with an output something list this:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;parallel: Warning: Only enough file handles to run 122 jobs in parallel.
Raising ulimit -n or /etc/security/limits.conf may help.
parallel: Warning: No more file handles. Raising ulimit -n or /etc/security/limits.conf may help.
mail.microsoft.com.	2369	IN	A	131.107.125.5
www.microsoft.com.	0	IN	CNAME	toggle.www.ms.akadns.net.
toggle.www.ms.akadns.net. 0	IN	CNAME	g.www.ms.akadns.net.
g.www.ms.akadns.net.	0	IN	CNAME	lb1.www.ms.akadns.net.
lb1.www.ms.akadns.net.	263	IN	A	64.4.11.42
m.microsoft.com.	0	IN	CNAME	origin.mobile.ms.akadns.net.
origin.mobile.ms.akadns.net. 300 IN	A	65.55.186.235
ftp.microsoft.com.	0	IN	CNAME	ftp.microsoft.akadns.net.
ftp.microsoft.akadns.net. 259	IN	A	64.4.17.176
mobile.microsoft.com.	0	IN	CNAME	origin.mobile.ms.akadns.net.
origin.mobile.ms.akadns.net. 300 IN	A	65.55.186.235
smtp.microsoft.com.	3600	IN	A	131.107.115.215
smtp.microsoft.com.	3600	IN	A	131.107.115.214
smtp.microsoft.com.	3600	IN	A	205.248.106.64
smtp.microsoft.com.	3600	IN	A	205.248.106.30
smtp.microsoft.com.	3600	IN	A	205.248.106.32
smtp.microsoft.com.	3600	IN	A	131.107.115.212
search.microsoft.com.	0	IN	CNAME	search.microsoft.akadns.net.
search.microsoft.akadns.net. 0	IN	CNAME	search.msn.com.edgesuite.net.
search.msn.com.edgesuite.net. 0	IN	CNAME	a134.g.akamai.net.
a134.g.akamai.net.	19	IN	A	209.107.220.27
a134.g.akamai.net.	19	IN	A	209.107.220.35
dev.microsoft.com.	0	IN	CNAME	msdn.microsoft.com.
msdn.microsoft.com.	0	IN	CNAME	msdn.microsoft.akadns.net.
msdn.microsoft.akadns.net. 600	IN	A	157.56.148.19
img.microsoft.com.	0	IN	CNAME	i.microsoft.com.edgesuite.net.
i.microsoft.com.edgesuite.net. 0 IN	CNAME	a1475.g.akamai.net.
a1475.g.akamai.net.	20	IN	A	165.254.158.48
a1475.g.akamai.net.	20	IN	A	165.254.158.9
news.microsoft.com.	0	IN	CNAME	msnews.microsoft.com.
msnews.microsoft.com.	3600	IN	A	207.46.248.16
mail2.microsoft.com.	3600	IN	A	131.107.115.215
beta.microsoft.com.	0	IN	CNAME	connect.microsoft.akadns.net.
connect.microsoft.akadns.net. 300 IN	A	65.52.103.84
support.microsoft.com.	0	IN	CNAME	mso-geo.microsoft.akadns.net.
mso-geo.microsoft.akadns.net. 0	IN	CNAME	support.microsoft.akadns.net.
support.microsoft.akadns.net. 175 IN	A	157.56.56.139
my.microsoft.com.	3600	IN	A	134.170.255.29
help.microsoft.com.	0	IN	CNAME	help.msn.com.
mail3.microsoft.com.	3600	IN	A	131.107.115.214
download.microsoft.com.	0	IN	CNAME	download.microsoft.com.nsatc.net.
download.microsoft.com.nsatc.net. 0 IN	CNAME	main.dl.ms.akadns.net.
main.dl.ms.akadns.net.	0	IN	CNAME	download.microsoft.com.edgesuite.net.
download.microsoft.com.edgesuite.net. 0	IN CNAME a954.dscms.akamai.net.
a954.dscms.akamai.net.	0	IN	CNAME	a954.dscms.akamai.net.0.1.cn.akamaitech.net.
a954.dscms.akamai.net.0.1.cn.akamaitech.net. 1 IN A 69.31.75.184
a954.dscms.akamai.net.0.1.cn.akamaitech.net. 1 IN A 69.31.75.168
shop.microsoft.com.	3600	IN	A	64.4.11.37
shop.microsoft.com.	3600	IN	A	65.55.58.201
games.microsoft.com.	3600	IN	A	207.46.166.10
business.microsoft.com.	3600	IN	A	65.55.57.98
ws.microsoft.com.	0	IN	CNAME	ws.microsoft.com.nsatc.net.
gateway.microsoft.com.	3600	IN	A	131.107.16.142
gateway.microsoft.com.	3600	IN	A	131.107.16.143
members.microsoft.com.	0	IN	CNAME	members.microsoft.akadns.net.
members.microsoft.akadns.net. 219 IN	A	65.55.57.28
c.microsoft.com.	0	IN	CNAME	c.microsoft.akadns.net.
c.microsoft.akadns.net.	215	IN	A	65.55.58.199
g.microsoft.com.	0	IN	CNAME	g.msn.com.
g.msn.com.		0	IN	CNAME	g.msn.com.nsatc.net.
g.msn.com.nsatc.net.	142	IN	A	131.253.34.154
mail4.microsoft.com.	3600	IN	A	205.248.106.64
mail1.microsoft.com.	3600	IN	A	131.107.115.212
apps.microsoft.com.	0	IN	CNAME	apps.windows.akadns.net.
apps.windows.akadns.net. 0	IN	CNAME	services.windows.akadns.net.
services.windows.akadns.net. 0	IN	CNAME	services-perf.windows.akadns.net.
services-perf.windows.akadns.net. 46 IN	A	134.170.30.204
email.microsoft.com.	1989	IN	A	157.55.150.73
i.microsoft.com.	0	IN	CNAME	i.toggle.www.ms.akadns.net.
i.toggle.www.ms.akadns.net. 0	IN	CNAME	i.g.www.ms.akadns.net.
i.g.www.ms.akadns.net.	0	IN	CNAME	i.microsoft.com.edgesuite.net.
i.microsoft.com.edgesuite.net. 0 IN	CNAME	a1475.g.akamai.net.
a1475.g.akamai.net.	8	IN	A	23.62.111.114
a1475.g.akamai.net.	8	IN	A	23.62.111.104
s.microsoft.com.	0	IN	CNAME	reroute.microsoft.com.
reroute.microsoft.com.	3600	IN	A	64.4.11.37
reroute.microsoft.com.	3600	IN	A	65.55.58.201
community.microsoft.com. 0	IN	CNAME	communities.microsoft.com.
communities.microsoft.com. 3600	IN	A	64.4.11.37
communities.microsoft.com. 3600	IN	A	65.55.58.201
connect.microsoft.com.	0	IN	CNAME	connect.microsoft.akadns.net.
connect.microsoft.akadns.net. 152 IN	A	65.52.103.84
rss.microsoft.com.	796	IN	A	65.55.58.201
rss.microsoft.com.	796	IN	A	64.4.11.37
home.microsoft.com.	0	IN	CNAME	redir.blu.cb3.glbdns.microsoft.com.
redir.blu.cb3.glbdns.microsoft.com. 116	IN A	65.55.206.229
jp.microsoft.com.	3600	IN	A	65.55.58.201
jp.microsoft.com.	3600	IN	A	64.4.11.37
labs.microsoft.com.	3600	IN	A	64.4.11.37
labs.microsoft.com.	3600	IN	A	65.55.58.201
exchange.microsoft.com.	2120	IN	A	65.55.31.35
marketing.microsoft.com. 3600	IN	A	207.46.242.110
mac.microsoft.com.	3600	IN	A	64.4.11.37
mac.microsoft.com.	3600	IN	A	65.55.58.201
feeds.microsoft.com.	3600	IN	A	65.55.57.98
partners.microsoft.com.	0	IN	CNAME	pmc.partners.microsoft.akadns.net.
pmc.partners.microsoft.akadns.net. 300 IN A	131.107.119.14
feed.microsoft.com.	0	IN	CNAME	feed.trafficmanager.net.
feed.trafficmanager.net. 0	IN	CNAME	feedna.cloudapp.net.
feedna.cloudapp.net.	10	IN	A	65.52.9.172
partner.microsoft.com.	0	IN	CNAME	portal.partners.microsoft.akadns.net.
portal.partners.microsoft.akadns.net. 300 IN A	131.107.119.163
cs.microsoft.com.	0	IN	CNAME	wedcs.trafficmanager.net.
wedcs.trafficmanager.net. 0	IN	CNAME	wedcseus.cloudapp.net.
wedcseus.cloudapp.net.	10	IN	A	137.116.48.250
forums.microsoft.com.	0	IN	CNAME	forums.microsoft.akadns.net.
forums.microsoft.akadns.net. 600 IN	A	65.52.103.99
meet.microsoft.com.	3600	IN	A	131.107.1.71
e.microsoft.com.	3600	IN	A	191.234.1.50
autodiscover.microsoft.com. 2358 IN	A	131.107.125.5
im.microsoft.com.	3600	IN	A	131.107.1.75
sip.microsoft.com.	2228	IN	A	65.55.30.130
me.microsoft.com.	0	IN	CNAME	edm.cloudapp.net.
dig: &#39;m..microsoft.com&#39; is not a legal name (empty label)
billing.microsoft.com.	0	IN	CNAME	paymenthubprod.trafficmanager.net.
paymenthubprod.trafficmanager.net. 0 IN	CNAME	paymenthubuxprod1.cloudapp.net.
paymenthubuxprod1.cloudapp.net.	10 IN	A	168.62.198.20
profile.microsoft.com.	0	IN	CNAME	profile.microsoft.akadns.net.
profile.microsoft.akadns.net. 335 IN	A	64.4.11.47
research.microsoft.com.	806	IN	A	131.107.65.14
sharepoint.microsoft.com. 3463	IN	A	64.4.6.100
sharepoint.microsoft.com. 3463	IN	A	65.55.39.10
appdev.microsoft.com.	0	IN	CNAME	appdev.windows.akadns.net.
appdev.windows.akadns.net. 131	IN	A	134.170.30.200
newsletters.microsoft.com. 3150	IN	A	207.46.248.35
advertising.microsoft.com. 0	IN	CNAME	advertising.microsoft.com.nsatc.net.
advertising.microsoft.com.nsatc.net. 245 IN A	65.52.100.46
catalog.microsoft.com.	0	IN	CNAME	genuine.microsoft.akadns.net.
genuine.microsoft.akadns.net. 300 IN	A	65.55.58.177
social.microsoft.com.	0	IN	CNAME	lb.social.ms.akadns.net.
lb.social.ms.akadns.net. 54	IN	A	65.52.103.78
events.microsoft.com.	1776	IN	A	64.4.11.31
events.microsoft.com.	1776	IN	A	65.55.58.192
ajax.microsoft.com.	0	IN	CNAME	mscomajax.vo.msecnd.net.
mscomajax.vo.msecnd.net. 208	IN	A	65.54.81.164
mscomajax.vo.msecnd.net. 208	IN	A	65.54.81.12
developer.microsoft.com. 0	IN	CNAME	msdn.microsoft.com.
msdn.microsoft.com.	0	IN	CNAME	msdn.microsoft.akadns.net.
msdn.microsoft.akadns.net. 600	IN	A	157.56.148.19
bbs.microsoft.com.	0	IN	CNAME	transfer.microsoft.com.
transfer.microsoft.com.	3600	IN	A	64.4.10.152
backoffice.microsoft.com. 3600	IN	A	64.4.11.37
backoffice.microsoft.com. 3600	IN	A	65.55.58.201
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Changing proxychains hardcoded DNS server</title>
      <link>//room362.com/post/2013/2013-09-10-changing-proxychains-hardcoded-dns-server/</link>
      <pubDate>Tue, 10 Sep 2013 13:16:39 -0500</pubDate>
      
      <guid>//room362.com/post/2013/2013-09-10-changing-proxychains-hardcoded-dns-server/</guid>
      <description>&lt;p&gt;If you&amp;rsquo;ve ever used proxychains to push things through Meterpreter, one of the most annoying things is its &amp;ldquo;hardcoded&amp;rdquo; DNS setting for 4.2.2.2, if the org that you are going after doesn&amp;rsquo;t allow this out of their network, or if you are trying to resolve an internal asset, you&amp;rsquo;re SOL. After a ton of googling and annoyed head slams into walls every time I forget where this is I&amp;rsquo;ve finally decided to make a note of it.&lt;/p&gt;

&lt;p&gt;There isn&amp;rsquo;t much magic here other than knowing that this file exists, but /bin/proxyresolv is a bash script that calls &amp;ldquo;dig&amp;rdquo; using TCP and the DNS server specified so it goes through the proxychains. Here is what it looks like:
(on Kali linux its found here: /usr/lib/proxychains3/proxyresolv)&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;#!/bin/sh
# This script is called by proxychains to resolve DNS names
# DNS server used to resolve names
DNS_SERVER=4.2.2.2

if [ $# = 0 ] ; then
echo &amp;quot; usage:&amp;quot;
echo &amp;quot; proxyresolv &amp;lt;hostname&amp;gt; &amp;quot;
exit
fi

export LD_PRELOAD=libproxychains.so.3
dig $1 @$DNS_SERVER +tcp | awk &#39;/A.+[0-9]+\.[0-9]+\.[0-9]/{print $5;}&#39;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Now you could just make the dig request yourself through proxychains then throw whatever you originally attended directly at an IP, or you can make the DNS_SERVER change and hardcode your engagement&amp;rsquo;s internal IP, up to you, but now its documented and I&amp;rsquo;ll never have to go searching like crazy again&amp;hellip; as long as I remember that its on someone else&amp;rsquo;s blog.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>AXFR for DNSSEC: DNSSEC Walker</title>
      <link>//room362.com/post/2012/2012-10-22-axfr-for-dnssec-dnssec-walker/</link>
      <pubDate>Mon, 22 Oct 2012 03:10:55 +0000</pubDate>
      
      <guid>//room362.com/post/2012/2012-10-22-axfr-for-dnssec-dnssec-walker/</guid>
      <description>&lt;p&gt;&lt;strong&gt;TL;DR&lt;/strong&gt; – DNSSEC Walker traverses a domain’s DNSSEC records to locate it’s regular DNS records.&lt;/p&gt;

&lt;p&gt;I like to go through slides of cons I can’t make it out to, and Hack-in-the-Box (HITB) Kul (Malaysia), was one such as they were very quick to release sides:&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://conference.hitb.org/hitbsecconf2011kul/materials/&#34;&gt;http://conference.hitb.org/hitbsecconf2011kul/materials/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;One that I came across is Marc “van Hauser” Heuse’s talk on IPv6 titled “&lt;a href=&#34;http://conference.hitb.org/hitbsecconf2012kul/materials/D1T2%20-%20Marc%20Heuse%20-%20IPv6%20Insecurity%20Revolutions.pdf&#34;&gt;IPv6 Insecurity Revolutions&lt;/a&gt;” (Link directly to PDF on aforementioned materials link). I definitely recommend checking it out as well as the IPv6 tools THC / Marc released (v2) here:&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://www.thc.org/thc-ipv6/&#34;&gt;http://www.thc.org/thc-ipv6/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Amazing tools, but one I could not locate in their batch was dnssecwalk (slide 41 for those following along)&lt;/p&gt;

&lt;p&gt;I found something that looks very similar here: &lt;a href=&#34;http://josefsson.org/walker/&#34;&gt;http://josefsson.org/walker/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Released originally in 2001 by Simon Josefsson. If you read the TL;DR at the top, you pretty much know what to tool does, so I’ll take you through an example:&lt;/p&gt;

&lt;p&gt;To get this bad boy working (since it’s Perl) you need to use CPAN to install Net::DNS and Net::DNS::SEC&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;cpan Net::DNS&lt;/strong&gt; (hit enter for defaults)&lt;br /&gt;
&lt;strong&gt;cpan Net::DNS::SEC&lt;/strong&gt; (same deal)&lt;/p&gt;

&lt;p&gt;Using the slide’s example of ripe.net (ARIN’s Euro brother) You simply point it at a domain:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;./walker ripe.net
;; Walker by Simon Josefsson
;; $Id: walker,v 1.31 2005/09/20 10:16:30 jas Exp $
;; Net::DNS 0.68
;; Net::DNS::SEC 0.16
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Then it just starts going. Unlike the tool in the slides it’s a very verbose tool and doesn’t have any “write output to file” option so piping to a file is recommended.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ ./walker ripe.net &amp;gt; output.txt &amp;amp;
[1] 32623
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Then just run greps on it removing all of the DNS commenting with anything having a semicolon in it:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ cat output.txt | grep -v &#39;;&#39; | grep IN
ripe.net.       273     IN      SOA     pri.authdns.ripe.net. dns.ripe.net. (
ripe.net.       17146   IN      A       193.0.6.139
ripe.net.       300     IN      AAAA    2001:67c:2e8:22:0:0:c100:68b
ripe.net.       2814    IN      DNSKEY  256  3  5 (
ripe.net.       2814    IN      DNSKEY  257  3  5 (
ripe.net.       2814    IN      DNSKEY  257  3  5 (
ripe.net.       2814    IN      DNSKEY  256  3  5 (
ripe.net.       183     IN      MX      200 postgirl.ripe.net.
ripe.net.       183     IN      MX      250 postlady.ripe.net.
ripe.net.       2017    IN      NS      tinnie.arin.net.
ripe.net.       2017    IN      NS      ns3.nic.fr.
ripe.net.       2017    IN      NS      sns-pb.isc.org.
ripe.net.       2017    IN      NS      pri.authdns.ripe.net.
ripe.net.       2017    IN      NS      sec3.apnic.net.
ripe.net.       2017    IN      NS      sec1.apnic.net.
ripe.net.       2723    IN      NSEC    256cns.ripe.net.  A AAAA DNSKEY MX NS NSEC RRSIG SOA
ripe.net.       21510   IN      RRSIG   A  5  2  21600  20121120100104 (
ripe.net.       210     IN      RRSIG   AAAA  5  2  300  20121120100104 (
ripe.net.       3510    IN      RRSIG   NS  5  2  3600  20121120100104 (
ripe.net.       210     IN      RRSIG   MX  5  2  300  20121120100104 (
                        7Te5Hfqh79JcJO4m94PLZ/GXnm3OVuKW1GINiNToNnTbz
ripe.net.       3510    IN      RRSIG   NSEC  5  2  3600  20121120100104 (
ripe.net.       3510    IN      RRSIG   SOA  5  2  3600  20121120100104 (
                        bfTSOsob1qYKrv3MrTrxDcr0dQJMjEUuKvWJINbFsCDDp
ripe.net.       3510    IN      RRSIG   DNSKEY  5  2  3600  20121120100104 (
                        ILjTJkBEsfhSs/7RKpoS+rLVOINoQXOtGgBhl5Ex5aAip
256cns.ripe.net.        20814   IN      CNAME   pip.ripe.net.
256cns.ripe.net.        2793    IN      NSEC    _jabber._tcp.ripe.net.  CNAME NSEC RRSIG
_jabber._tcp.ripe.net.  2804    IN      NSEC    _xmpp-client._tcp.ripe.net.  NSEC RRSIG SRV
_jabber._tcp.ripe.net.  2814    IN      RRSIG   NSEC  5  4  3600  20121120100104 (
_jabber._tcp.ripe.net.  114     IN      RRSIG   SRV  5  4  900  20121120100104 (
_jabber._tcp.ripe.net.  114     IN      SRV     30 30 5269 chat.ripe.net.
_xmpp-client._tcp.ripe.net.     2804    IN      NSEC    _xmpp-server._tcp.ripe.net.  NSEC RRSIG SRV
_xmpp-client._tcp.ripe.net.     115     IN      RRSIG   SRV  5  4  900  20121120100104 (
_xmpp-client._tcp.ripe.net.     2815    IN      RRSIG   NSEC  5  4  3600  20121120100104 (
_xmpp-client._tcp.ripe.net.     115     IN      SRV     30 30 5222 chat.ripe.net.
_xmpp-server._tcp.ripe.net.     2805    IN      NSEC    access.ripe.net.  NSEC RRSIG SRV
_xmpp-server._tcp.ripe.net.     115     IN      RRSIG   SRV  5  4  900  20121120100104 (
                        NJpdcDaytdKNINLVCFYUJWRnXiTRFrXSi2cL4nJLGLQlt
_xmpp-server._tcp.ripe.net.     2815    IN      RRSIG   NSEC  5
(snipped)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;But of course in side 40 it shows that you can simply zone transfer ripe.net anyways. But for those that aren’t so forthcoming with their zones this can be a nice thing to try.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>A @textfiles approach at gathering the world&#39;s DNS - Slides</title>
      <link>//room362.com/post/2012/2012-02-03-a-textfiles-approach-at-gathering-the-worlds-dns-slides/</link>
      <pubDate>Fri, 03 Feb 2012 17:24:59 +0000</pubDate>
      
      <guid>//room362.com/post/2012/2012-02-03-a-textfiles-approach-at-gathering-the-worlds-dns-slides/</guid>
      <description>&lt;p&gt;This is my talk that I gave at ShmooCon 2012. It was a great honor to be given the chance to speak at ShmooCon as it has been my second home since 2006 (missed the first one&amp;hellip; havent missed one since)&lt;/p&gt;

&lt;p&gt;&lt;center&gt;&lt;iframe src=&#34;http://www.slideshare.net/slideshow/embed_code/11406011&#34; width=&#34;427&#34; height=&#34;356&#34; frameborder=&#34;0&#34; marginwidth=&#34;0&#34; marginheight=&#34;0&#34; scrolling=&#34;no&#34; style=&#34;border:1px solid #CCC;border-width:1px 1px 0;margin-bottom:5px&#34; allowfullscreen&gt; &lt;/iframe&gt; &lt;div style=&#34;margin-bottom:5px&#34;&gt; &lt;strong&gt; &lt;a href=&#34;https://www.slideshare.net/mubix/a-textfiles-approach-to-gathering-the-worlds-dns&#34; title=&#34;A @textfiles approach to gathering the world&amp;#x27;s DNS&#34; target=&#34;_blank&#34;&gt;A @textfiles approach to gathering the world&amp;#x27;s DNS&lt;/a&gt; &lt;/strong&gt; from &lt;strong&gt;&lt;a href=&#34;http://www.slideshare.net/mubix&#34; target=&#34;_blank&#34;&gt;Rob Fuller&lt;/a&gt;&lt;/strong&gt; &lt;/div&gt;&lt;/center&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Interesting DNS Stuff - SRV Records</title>
      <link>//room362.com/post/2011/2011-02-16-interesting-dns-stuff-srv-records/</link>
      <pubDate>Wed, 16 Feb 2011 07:48:14 +0000</pubDate>
      
      <guid>//room362.com/post/2011/2011-02-16-interesting-dns-stuff-srv-records/</guid>
      <description>&lt;p&gt;The following are good adds to your DNS brute force list:&lt;/p&gt;

&lt;p&gt;These are all &lt;strong&gt;SRV&lt;/strong&gt; records so make sure your type is set correctly. The great thing about SRV records is that it tells you the port in the answer. Isn&amp;rsquo;t that nice of them?&lt;/p&gt;

&lt;p&gt;I don&amp;rsquo;t know of any DNS tools that utilize SRV as part of their process, but scripting dig to do so isn&amp;rsquo;t tough.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;_autodiscover._tcp
_caldav._tcp
_client._smtp
_gc._tcp
_h323cs._tcp
_h323cs._udp
_h323ls._tcp
_h323ls._udp
_h323rs._tcp
_h323rs._tcp
_http._tcp
_iax.udp
_imap._tcp
_imaps._tcp
_jabber-client._tcp
_jabber._tcp
_kerberos-adm._tcp
_kerberos._tcp
_kerberos._tcp.dc._msdcs
_kerberos._udp
_kpasswd._tcp
_kpasswd._udp
_ldap._tcp
_ldap._tcp.dc._msdcs
_ldap._tcp.gc._msdcs
_ldap._tcp.pdc._msdcs
_msdcs
_mysqlsrv._tcp
_ntp._udp
_pop3._tcp
_pop3s._tcp
_sip._tcp
_sip._tls
_sip._udp
_sipfederationtls._tcp
_sipinternaltls._tcp
_sips._tcp
_smtp._tcp
_stun._tcp
_stun._udp
_tcp
_tls
_udp
_vlmcs._tcp
_vlmcs._udp
_wpad._tcp
_xmpp-client._tcp
_xmpp-server._tcp
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>OzymanDNS - Tunneling SSH over DNS</title>
      <link>//room362.com/post/2009/2009310ozymandns-tunneling-ssh-over-dns-html/</link>
      <pubDate>Tue, 10 Mar 2009 22:30:24 +0000</pubDate>
      
      <guid>//room362.com/post/2009/2009310ozymandns-tunneling-ssh-over-dns-html/</guid>
      <description>

&lt;h3 id=&#34;hak5-episode-504-shownotes-http-www-hak5-org-episodes-episode-504:ee73843486d6dbd09e47f205a8ef6bf2&#34;&gt;&lt;a href=&#34;http://www.hak5.org/episodes/episode-504&#34;&gt;Hak5 Episode 504 Shownotes&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;&lt;em&gt;(In the episode I say that it&amp;rsquo;s cross platform, use the release links for the Windows binaries to get it working on windows or use cygwin)&lt;/em&gt;&lt;/p&gt;

&lt;h3 id=&#34;disclaimer-i-in-no-way-endorse-illegal-activities-use-the-following-guide-in-a-test-environment-or-at-your-own-legal-risk:ee73843486d6dbd09e47f205a8ef6bf2&#34;&gt;DISCLAIMER - I IN NO WAY ENDORSE ILLEGAL ACTIVITIES - USE THE FOLLOWING GUIDE IN A TEST ENVIRONMENT OR AT YOUR OWN LEGAL RISK.&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;UPDATE&lt;/strong&gt;:Thanks to &lt;a href=&#34;http://carnal0wnage.blogspot.com/&#34;&gt;Chris Gates&lt;/a&gt; and &lt;a href=&#34;http://www.digininja.org/index.php&#34;&gt;Robin Wood&lt;/a&gt; for pointing me towards a fixed up version of OzymanDNS and a great tutorial: &lt;a href=&#34;http://www.splitbrain.org/blog/2008-11/02-dns_tunneling_made_simple&#34;&gt;HERE&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;UPDATE 2&lt;/strong&gt;: Since Ozyman is no longer hosted on Dan&amp;rsquo;s site, I have posted it here:&lt;/p&gt;

&lt;p&gt;Download: &lt;a href=&#34;https://github.com/mubix/stuff/blob/master/stolen/ozymandns_src_0.1.tgz?raw=true&#34;&gt;ozymandns_src_0.1.tgz&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;(Until of course/if he asks me to take it down)&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;DNS Tunneling isn&amp;rsquo;t new. &lt;a href=&#34;http://www.doxpara.com/&#34;&gt;Dan Kaminsky&lt;/a&gt;&amp;rsquo;s post for &lt;a href=&#34;http://www.doxpara.com/?p=51&#34;&gt;OzymanDNS&amp;rsquo; release&lt;/a&gt; was July 29th 2004 (There was DNS Tunneling linux packages dating back to the late 90s even). I will however comment that it&amp;rsquo;s still in it&amp;rsquo;s release version, but very functional. Also, DNS Tunnel isn&amp;rsquo;t &amp;ldquo;Big News&amp;rdquo; so it really hasn&amp;rsquo;t been &amp;lsquo;mitigated&amp;rsquo; anywhere yet. Everywhere I have tested it, it has worked, even behind a certain switch that rhymes with &amp;lsquo;Panera&amp;rsquo;&lt;/p&gt;

&lt;p&gt;What does OzymanDNS do? It has two parts, server, and client. The server is a set and forget. It sits there waiting for a connection (caveat: from anywhere) But we are getting ahead of ourselves, lets setup up DNS first.&lt;/p&gt;

&lt;p&gt;(I&amp;rsquo;m going to assume that you have a SSH server somewhere that you have already setup)&lt;/p&gt;

&lt;h3 id=&#34;step-1-dns-setup:ee73843486d6dbd09e47f205a8ef6bf2&#34;&gt;Step 1 - DNS Setup:&lt;/h3&gt;

&lt;p&gt;Each &amp;ldquo;Domain Manager&amp;rdquo; or DNS Server has a different set up,  So I&amp;rsquo;m not going to go into the details. The jist of the change you need to make is either make a domain or a subdomain that points it&amp;rsquo;s nameserver records towards the host that you are running your server on.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;ihaztunnel.room362.com IN NS mubixpwnsyour.homedns.org&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;In this example we have setup a subdomain called &amp;ldquo;ihaztunnel&amp;rdquo; and set it&amp;rsquo;s Name Server Record pointing to a dynamic dns host that points at the location of my OzymanDNS server.&lt;/p&gt;

&lt;h3 id=&#34;step-2-server-setup:ee73843486d6dbd09e47f205a8ef6bf2&#34;&gt;Step 2 - Server Setup:&lt;/h3&gt;

&lt;p&gt;You need &lt;a href=&#34;http://www.perl.org/&#34;&gt;Perl&lt;/a&gt;, the &lt;a href=&#34;http://search.cpan.org/~danpeder/MIME-Base32-1.01/Base32.pm&#34;&gt;MIME::Base32&lt;/a&gt;, and &lt;a href=&#34;http://search.cpan.org/~olaf/Net-DNS-0.65/lib/Net/DNS.pm&#34;&gt;Net::DNS&lt;/a&gt; modules. After that you just run nomde.pl from whatever directory that you extracted the OzymanDNS scripts with the following context:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;./nomed.pl -i 0.0.0.0 ihaztunnel.room362.com&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;This tells it to listen on any IP the host has (you can specifiy one if you wish), and tells it the DNS name that it&amp;rsquo;s supporting. Don&amp;rsquo;t forget to do port forwarding on your router or whatever may be in the way of port 53 UDP and TCP coming inbound. Also keep in mind that your ISP may be blocking, so field test the connection before you try to use it in the wild.&lt;/p&gt;

&lt;h3 id=&#34;step-3-client-connection:ee73843486d6dbd09e47f205a8ef6bf2&#34;&gt;Step 3 - Client Connection:&lt;/h3&gt;

&lt;p&gt;For the client, the setup is the same, get perl, the modules and OzymanDNS. Then you run the following command:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;ssh -D 8080 -C -o ProxyCommand=&amp;quot;/home/mubix/ozymandns/droute.pl whatever.ihaztunnel.room362.com&amp;quot; room362.com&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Breaking this command down:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;&amp;rdquo;-D 8080&amp;rdquo; starts SSH tunneling (Socks Proxy) on port 8080 once a connection is made.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&amp;rdquo;-C&amp;rdquo; requests compression so that we can get the best speeds possible.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&amp;rdquo;-o ProxyCommand&amp;rdquo; sets the SSH option to the location of the droute.pl script and&amp;hellip;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&amp;ldquo;whatever.ihaztunnel.room362.com&amp;rdquo; the &amp;lsquo;whatever&amp;rsquo; portion of this is the important part. It can be whatever you want it to be but the &amp;ldquo;magic&amp;rdquo; happens by adding this subdomain of the one you already set up.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&amp;ldquo;room362.com&amp;rdquo; the hostname or IP of the SSH server that you will be tunneling through.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;If all worked out, you will get prompted to enter your password. That&amp;rsquo;s it folks. Now you can use FoxyProxy or just your standard proxy settings to use the tunnel. Or, you can use product that, IMHO, is well worth the 30 bucks for the PORTABLE EDITION: &lt;a href=&#34;http://www.proxifier.com/&#34;&gt;Proxifier&lt;/a&gt;. It hooks the OS and makes every connection go through the proxy (games, IM, Java, Flash).&lt;/p&gt;

&lt;p&gt;Notes:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Before you go the DNS route&lt;/strong&gt;, it might pay off to try the ?.jpg trick first. Check out the &lt;a href=&#34;http://debuggable.com/posts/hacking-a-commercial-airport-wlan:480f4dd5-50a0-40c6-aa60-4afccbdd56cb&#34;&gt;debuggable.com post&lt;/a&gt; for more details. - Thanks Xanfantasy for the memory jog.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://www.dnstunnel.de/&#34;&gt;http://www.dnstunnel.de/&lt;/a&gt; - A site that has an in-depth walk-through of setting up OzymanDNS if I didn&amp;rsquo;t answer all of your questions. They even have a script that will make OzymanDNS a service on Linux boxes&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://thomer.com/howtos/nstx.html&#34;&gt;http://thomer.com/howtos/nstx.html&lt;/a&gt; - A write up on NSTX which doesn&amp;rsquo;t require SSH but doesn&amp;rsquo;t look like it&amp;rsquo;s still  in production. It is however in the Ubuntu and Gentoo repositories so feel free to mess with it there, and since &lt;a href=&#34;http://backtrack4.blogspot.com/&#34;&gt;Back|Track 4&lt;/a&gt; is now Ubuntu based you may be able to get it set up on BT4 as well.&lt;/p&gt;

&lt;p&gt;Iodine:&lt;br /&gt;
&lt;a href=&#34;http://code.kryo.se/iodine/&#34;&gt;http://code.kryo.se/iodine/&lt;/a&gt; - Another DNS Tunneling project that looks to be the most up to date. I haven&amp;rsquo;t tested it out to make sure it functions.&lt;/p&gt;

&lt;p&gt;Dns2tcp:&lt;br /&gt;
&lt;a href=&#34;http://www.hsc.fr/ressources/outils/dns2tcp/index.html.en&#34;&gt;http://www.hsc.fr/ressources/outils/dns2tcp/index.html.en&lt;/a&gt; - Another DNS Tunneling Project&lt;/p&gt;

&lt;p&gt;And if DNS isn&amp;rsquo;t your thing and you want to tunnel over HTTP, check out Corkscrew:  &lt;a href=&#34;http://www.agroman.net/corkscrew/&#34;&gt;http://www.agroman.net/corkscrew/&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>