<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Egress on Malicious Link</title>
    <link>https://malicious.link/categories/egress/</link>
    <description>Recent content in Egress on Malicious Link</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>&amp;copy; 2016. All rights reserved.</copyright>
    <lastBuildDate>Sat, 11 Aug 2012 03:49:25 +0000</lastBuildDate>
    
	<atom:link href="https://malicious.link/categories/egress/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>LetMeOutOfYour.NET – Server Build</title>
      <link>https://malicious.link/post/2012/2012-08-11-let-me-out-of-your-net-server-build/</link>
      <pubDate>Sat, 11 Aug 2012 03:49:25 +0000</pubDate>
      
      <guid>https://malicious.link/post/2012/2012-08-11-let-me-out-of-your-net-server-build/</guid>
      <description>In the previous post: http://www.room362.com/blog/2012/8/11/let-me-out-of-your-net-workndashintro.html I told you about letmeoutofyour.net, but how does it work?
Things we need to accomplish on the server:
 Listen on all ports Answer for all hostnames and subdomains Answer for all HTTP verbs, file and folder requests  ONE: Listen on all ports
(I used Linux, so this guide is for such, modifications to other OSs is up to the reader)
First you have to get rid of all other services.</description>
    </item>
    
    <item>
      <title>LetMeOutOfYour.NET – Intro</title>
      <link>https://malicious.link/post/2012/2012-08-10-let-me-out-of-your-net-intro/</link>
      <pubDate>Fri, 10 Aug 2012 03:22:29 +0000</pubDate>
      
      <guid>https://malicious.link/post/2012/2012-08-10-let-me-out-of-your-net-intro/</guid>
      <description>Something that is often useful is a known-good. Something out of the control of your adversary or outside modifiers. But back to that in a sec, egress ‘busting’ or getting your payload/backdoor/trojan/c2 out of someone’s network once you’ve gotten that ever elusive “CODE EXECUTION HAPPY DANCE” going on isn’t always easy. There is even a Metasploit payload for it called ‘allports’:
https://community.rapid7.com/community/metasploit/blog/2009/09/24/forcing-payloads-through-restrictive-firewalls
There is also ‘Egress Buster’ by the guys over at TrustedSec which can do 1000 ports in just a few seconds:</description>
    </item>
    
    <item>
      <title>Ear Trumpet</title>
      <link>https://malicious.link/post/2009/2009-02-03-ear-trumpet/</link>
      <pubDate>Tue, 03 Feb 2009 18:35:00 +0000</pubDate>
      
      <guid>https://malicious.link/post/2009/2009-02-03-ear-trumpet/</guid>
      <description>I have had the idea for this app for a long time, expressed it a few times, but never really pushed, and I sure that I am not the only one who has thought of or wanted an app like Ear Trumpet by Robin Wood. Well on Jan 21st Sam Buhlig posted to the PaulDotCom mailing list  asking for an app to test a firewall that would answer on all ports.</description>
    </item>
    
  </channel>
</rss>