<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Persistence on Malicious Link</title>
    <link>https://malicious.link/tags/persistence/</link>
    <description>Recent content in Persistence on Malicious Link</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>&amp;copy; 2016. All rights reserved.</copyright>
    <lastBuildDate>Sun, 22 May 2016 21:55:12 -0400</lastBuildDate>
    
	<atom:link href="https://malicious.link/tags/persistence/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>WPAD Persistence</title>
      <link>https://malicious.link/post/2016/wpad-persistence/</link>
      <pubDate>Sun, 22 May 2016 21:55:12 -0400</pubDate>
      
      <guid>https://malicious.link/post/2016/wpad-persistence/</guid>
      <description>Mostly just writing this so I can keep notes.
Today I came up with the idea to forcibly put the WPAD entry into a Windows Domain&amp;rsquo;s DNS. For those who don&amp;rsquo;t know what this would do there is an entire Wikipedia article on the subject: https://en.wikipedia.org/wiki/Web_Proxy_Autodiscovery_Protocol
I did this via PowerShell pretty easily on one of the domain controllers like so:
PS C:\&amp;gt; Add-DnsServerResourceRecordA -Name wpad -ZoneName sittingduck.info -IPv4Address 107.</description>
    </item>
    
    <item>
      <title>DotNet&#39;s DNVM For Persistence On Developer Machines</title>
      <link>https://malicious.link/post/2015/dotnet-dnvm-for-persistence-on-developer-machines/</link>
      <pubDate>Mon, 05 Oct 2015 07:35:28 -0500</pubDate>
      
      <guid>https://malicious.link/post/2015/dotnet-dnvm-for-persistence-on-developer-machines/</guid>
      <description>One of the best resources for persistence mechanisms is Hexacorn&amp;rsquo;s blog. http://www.hexacorn.com/blog/category/autostart-persistence/
If you haven&amp;rsquo;t checked out his &amp;ldquo;Beyond good ol&amp;rsquo; Run key&amp;rdquo; (linked above) 32 post series, you really should. But today I wanted to talk about one that I didn&amp;rsquo;t see up there:
DNVM (https://github.com/aspnet/dnvm) is the DotNet Version Manager and it&amp;rsquo;s a part of ASP.NET 5, which I believe has been inside of Visual Studio since the 2013 version.</description>
    </item>
    
    <item>
      <title>OSX Persistence via PHP Webshell</title>
      <link>https://malicious.link/post/2014/osx-persistence-via-php-webshell/</link>
      <pubDate>Tue, 09 Sep 2014 11:26:38 -0500</pubDate>
      
      <guid>https://malicious.link/post/2014/osx-persistence-via-php-webshell/</guid>
      <description>As I learn more and more about OSX I find things that surprise me. For instance, in this post I will be showing you how to, with root or sudo priviledge, enable the built-in apache server on OSX and it&amp;rsquo;s PHP module&amp;hellip;.
I am working with OSX Mavericks so your locations may vary based on the version of OSX your target it.
First things first is to enable the PHP module for the Apache server.</description>
    </item>
    
  </channel>
</rss>